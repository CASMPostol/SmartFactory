//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CAS.SmartFactory.IPR.WebsiteModel.Linq
{
	using System;

  
  public partial class Entities : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public Entities(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// Activity Log List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Activity Log")]
		public Microsoft.SharePoint.Linq.EntityList<ActivityLogCT> ActivityLog {
			get {
				return this.GetList<ActivityLogCT>("Activity Log");
			}
		}
		
		/// <summary>
		/// Balance Batch List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Balance Batch")]
		public Microsoft.SharePoint.Linq.EntityList<BalanceBatch> BalanceBatch {
			get {
				return this.GetList<BalanceBatch>("Balance Batch");
			}
		}
		
		/// <summary>
		/// Balance IPR List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Balance IPR")]
		public Microsoft.SharePoint.Linq.EntityList<BalanceIPR> BalanceIPR {
			get {
				return this.GetList<BalanceIPR>("Balance IPR");
			}
		}
		
		/// <summary>
		/// Batch List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Batch")]
		public Microsoft.SharePoint.Linq.EntityList<Batch> Batch {
			get {
				return this.GetList<Batch>("Batch");
			}
		}
		
		/// <summary>
		/// Batch Library List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Batch Library")]
		public Microsoft.SharePoint.Linq.EntityList<BatchLib> BatchLibrary {
			get {
				return this.GetList<BatchLib>("Batch Library");
			}
		}
		
		/// <summary>
		/// Clearence List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Clearence")]
		public Microsoft.SharePoint.Linq.EntityList<Clearence> Clearence {
			get {
				return this.GetList<Clearence>("Clearence");
			}
		}
		
		/// <summary>
		/// Consent List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Consent")]
		public Microsoft.SharePoint.Linq.EntityList<Consent> Consent {
			get {
				return this.GetList<Consent>("Consent");
			}
		}
		
		/// <summary>
		/// Customs Union List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Customs Union")]
		public Microsoft.SharePoint.Linq.EntityList<CustomsUnion> CustomsUnion {
			get {
				return this.GetList<CustomsUnion>("Customs Union");
			}
		}
		
		/// <summary>
		/// Cutfiller Coefficient List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Cutfiller Coefficient")]
		public Microsoft.SharePoint.Linq.EntityList<CutfillerCoefficient> CutfillerCoefficient {
			get {
				return this.GetList<CutfillerCoefficient>("Cutfiller Coefficient");
			}
		}
		
		/// <summary>
		/// Disposal List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Disposal")]
		public Microsoft.SharePoint.Linq.EntityList<Disposal> Disposal {
			get {
				return this.GetList<Disposal>("Disposal");
			}
		}
		
		/// <summary>
		/// Disposal Declaration List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Disposal Declaration")]
		public Microsoft.SharePoint.Linq.EntityList<DisposalDeclaration> DisposalDeclaration {
			get {
				return this.GetList<DisposalDeclaration>("Disposal Declaration");
			}
		}
		
		/// <summary>
		/// Dust
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Dust")]
		public Microsoft.SharePoint.Linq.EntityList<Dust> Dust {
			get {
				return this.GetList<Dust>("Dust");
			}
		}
		
		/// <summary>
		/// Format
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Format")]
		public Microsoft.SharePoint.Linq.EntityList<Format> Format {
			get {
				return this.GetList<Format>("Format");
			}
		}
		
		/// <summary>
		/// Invoice Content List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Invoice Content")]
		public Microsoft.SharePoint.Linq.EntityList<InvoiceContent> InvoiceContent {
			get {
				return this.GetList<InvoiceContent>("Invoice Content");
			}
		}
		
		/// <summary>
		/// Invoice Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Invoice Library")]
		public Microsoft.SharePoint.Linq.EntityList<InvoiceLib> InvoiceLibrary {
			get {
				return this.GetList<InvoiceLib>("Invoice Library");
			}
		}
		
		/// <summary>
		/// IPR List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="IPR")]
		public Microsoft.SharePoint.Linq.EntityList<IPR> IPR {
			get {
				return this.GetList<IPR>("IPR");
			}
		}
		
		/// <summary>
		/// IPR Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="IPR Library")]
		public Microsoft.SharePoint.Linq.EntityList<IPRLib> IPRLibrary {
			get {
				return this.GetList<IPRLib>("IPR Library");
			}
		}
		
		/// <summary>
		/// JSOX Customs Summary List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="JSOX Customs Summary")]
		public Microsoft.SharePoint.Linq.EntityList<JSOXCustomsSummary> JSOXCustomsSummary {
			get {
				return this.GetList<JSOXCustomsSummary>("JSOX Customs Summary");
			}
		}
		
		/// <summary>
		/// JSOX Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="JSOX Library")]
		public Microsoft.SharePoint.Linq.EntityList<JSOXLib> JSOXLibrary {
			get {
				return this.GetList<JSOXLib>("JSOX Library");
			}
		}
		
		/// <summary>
		/// Material List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Material")]
		public Microsoft.SharePoint.Linq.EntityList<Material> Material {
			get {
				return this.GetList<Material>("Material");
			}
		}
		
		/// <summary>
		/// PCN Code List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="PCN Code")]
		public Microsoft.SharePoint.Linq.EntityList<PCNCode> PCNCode {
			get {
				return this.GetList<PCNCode>("PCN Code");
			}
		}
		
		/// <summary>
		/// SAD Consignment Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Consignment")]
		public Microsoft.SharePoint.Linq.EntityList<SADConsignment> SADConsignment {
			get {
				return this.GetList<SADConsignment>("SAD Consignment");
			}
		}
		
		/// <summary>
		/// My List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Document")]
		public Microsoft.SharePoint.Linq.EntityList<SADDocumentType> SADDocument {
			get {
				return this.GetList<SADDocumentType>("SAD Document");
			}
		}
		
		/// <summary>
		/// SAD Document Library List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Document Library")]
		public Microsoft.SharePoint.Linq.EntityList<SADDocumentLib> SADDocumentLibrary {
			get {
				return this.GetList<SADDocumentLib>("SAD Document Library");
			}
		}
		
		/// <summary>
		/// SAD Duties List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Duties")]
		public Microsoft.SharePoint.Linq.EntityList<SADDuties> SADDuties {
			get {
				return this.GetList<SADDuties>("SAD Duties");
			}
		}
		
		/// <summary>
		/// The SAD Good List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Good")]
		public Microsoft.SharePoint.Linq.EntityList<SADGood> SADGood {
			get {
				return this.GetList<SADGood>("SAD Good");
			}
		}
		
		/// <summary>
		/// The SAD Package List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Package")]
		public Microsoft.SharePoint.Linq.EntityList<SADPackage> SADPackage {
			get {
				return this.GetList<SADPackage>("SAD Package");
			}
		}
		
		/// <summary>
		/// The SAD Quantity List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Quantity")]
		public Microsoft.SharePoint.Linq.EntityList<SADQuantity> SADQuantity {
			get {
				return this.GetList<SADQuantity>("SAD Quantity");
			}
		}
		
		/// <summary>
		/// The SAD Required Documents List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Required Documents")]
		public Microsoft.SharePoint.Linq.EntityList<SADRequiredDocuments> SADRequiredDocuments {
			get {
				return this.GetList<SADRequiredDocuments>("SAD Required Documents");
			}
		}
		
		/// <summary>
		/// Settings List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Settings")]
		public Microsoft.SharePoint.Linq.EntityList<Settings> Settings {
			get {
				return this.GetList<Settings>("Settings");
			}
		}
		
		/// <summary>
		/// SHMentholList
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SHMenthol")]
		public Microsoft.SharePoint.Linq.EntityList<SHMenthol> SHMenthol {
			get {
				return this.GetList<SHMenthol>("SHMenthol");
			}
		}
		
		/// <summary>
		/// SKU List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SKU")]
		public Microsoft.SharePoint.Linq.EntityList<SKUCommonPart> SKU {
			get {
				return this.GetList<SKUCommonPart>("SKU");
			}
		}
		
		/// <summary>
		/// SKU files collection
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SKU Library")]
		public Microsoft.SharePoint.Linq.EntityList<Document> SKULibrary {
			get {
				return this.GetList<Document>("SKU Library");
			}
		}
		
		/// <summary>
		/// Stock Entry List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Stock Entry")]
		public Microsoft.SharePoint.Linq.EntityList<StockEntry> StockEntry {
			get {
				return this.GetList<StockEntry>("Stock Entry");
			}
		}
		
		/// <summary>
		/// Stock Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Stock Library")]
		public Microsoft.SharePoint.Linq.EntityList<StockLib> StockLibrary {
			get {
				return this.GetList<StockLib>("Stock Library");
			}
		}
		
		/// <summary>
		/// UsageList
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Usage")]
		public Microsoft.SharePoint.Linq.EntityList<Usage> Usage {
			get {
				return this.GetList<Usage>("Usage");
			}
		}
		
		/// <summary>
		/// Warehouse List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Warehouse")]
		public Microsoft.SharePoint.Linq.EntityList<Warehouse> Warehouse {
			get {
				return this.GetList<Warehouse>("Warehouse");
			}
		}
		
		/// <summary>
		/// Waste List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Waste")]
		public Microsoft.SharePoint.Linq.EntityList<Waste> Waste {
			get {
				return this.GetList<Waste>("Waste");
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Announcement))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ReportsCommonPart))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Batch))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Document))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Clearence))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Consent))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CustomsUnion))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CutfillerCoefficient))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Disposal))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DisposalDeclaration))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Dust))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Format))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(InvoiceContent))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(IPR))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(JSOXCustomsSummary))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Material))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PCNCode))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADDocumentType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADDuties))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADGood))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADPackage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADQuantity))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADRequiredDocuments))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Settings))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SHMenthol))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SKUCommonPart))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(StockEntry))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Usage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Warehouse))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Waste))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Commodity))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(City))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TobaccoBatchSummary))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Country))]
	public partial class Element : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _version;
		
		private string _path;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		private string _title;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Element() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Id {
			get {
				return this._id;
			}
			set {
				if ((value != this._id)) {
					this.OnPropertyChanging("Id", this._id);
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Version {
			get {
				return this._version;
			}
			set {
				if ((value != this._version)) {
					this.OnPropertyChanging("Version", this._version);
					this._version = value;
					this.OnPropertyChanged("Version");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Path {
			get {
				return this._path;
			}
			set {
				if ((value != this._path)) {
					this.OnPropertyChanging("Path", this._path);
					this._path = value;
					this.OnPropertyChanged("Path");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				if ((value != this._title)) {
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Create a new news item, status or other short piece of information.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Announcement", Id="0x0104")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ActivityLogCT))]
	public partial class Announcement : Element {
		
		private string _body;
		
		private System.Nullable<System.DateTime> _expires;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Announcement() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_expires", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Expires {
			get {
				return this._expires;
			}
			set {
				if ((value != this._expires)) {
					this.OnPropertyChanging("Expires", this._expires);
					this._expires = value;
					this.OnPropertyChanged("Expires");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(BatchLib))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(InvoiceLib))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(IPRLib))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(JSOXLib))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADConsignment))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADDocumentLib))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(StockLib))]
	public partial class Document : Element {
		
		private string _name;
		
		private string _documentModifiedBy;
		
		private string _documentCreatedBy;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Document() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_documentModifiedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentModifiedBy {
			get {
				return this._documentModifiedBy;
			}
			set {
				if ((value != this._documentModifiedBy)) {
					this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
					this._documentModifiedBy = value;
					this.OnPropertyChanged("DocumentModifiedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_documentCreatedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentCreatedBy {
			get {
				return this._documentCreatedBy;
			}
			set {
				if ((value != this._documentCreatedBy)) {
					this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
					this._documentCreatedBy = value;
					this.OnPropertyChanged("DocumentCreatedBy");
				}
			}
		}
	}
	
	/// <summary>
	/// Common Part for Balance Summary and JSOX Summary content types
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ReportsCommonPart", Id="0x0100BC0DDC1827F346ED911D777504830C52")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(BalanceBatch))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(BalanceIPR))]
	public partial class ReportsCommonPart : Element {
		
		private string _documentNo;
		
		private string _sKU;
		
		private string _batch;
		
		private System.Nullable<double> _tobaccoEnteredIntoIPR;
		
		private System.Nullable<double> _tobaccoCSFinished;
		
		private System.Nullable<double> _tobaccoInFGCSStarted;
		
		private System.Nullable<double> _dustCSStarted;
		
		private System.Nullable<double> _wasteCSStarted;
		
		private System.Nullable<double> _sHMentholCSStarted;
		
		private System.Nullable<double> _overuseCSStarted;
		
		private System.Nullable<double> _pureTobaccoCSStarted;
		
		private System.Nullable<double> _iPRBook;
		
		private System.Nullable<double> _wasteCSNotStarted;
		
		private System.Nullable<double> _sHMentholCSNotStarted;
		
		private System.Nullable<double> _overuseCSNotStarted;
		
		private System.Nullable<double> _sHWasteOveruseCSNotStarted;
		
		private System.Nullable<double> _dustCSNotStarted;
		
		private System.Nullable<double> _tobaccoAvailable;
		
		private System.Nullable<double> _tobaccoInFGCSNotStarted;
		
		private System.Nullable<double> _pureTobaccoCSNotStarted;
		
		private System.Nullable<double> _tobaccoUsedInTheProduction;
		
		private System.Nullable<double> _tobaccoToBeUsedInTheProduction;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ReportsCommonPart() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNo", Storage="_documentNo", FieldType="Text")]
		public string DocumentNo {
			get {
				return this._documentNo;
			}
			set {
				if ((value != this._documentNo)) {
					this.OnPropertyChanging("DocumentNo", this._documentNo);
					this._documentNo = value;
					this.OnPropertyChanged("DocumentNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoEnteredIntoIPR", Storage="_tobaccoEnteredIntoIPR", FieldType="Number")]
		public System.Nullable<double> TobaccoEnteredIntoIPR {
			get {
				return this._tobaccoEnteredIntoIPR;
			}
			set {
				if ((value != this._tobaccoEnteredIntoIPR)) {
					this.OnPropertyChanging("TobaccoEnteredIntoIPR", this._tobaccoEnteredIntoIPR);
					this._tobaccoEnteredIntoIPR = value;
					this.OnPropertyChanged("TobaccoEnteredIntoIPR");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoCSFinished", Storage="_tobaccoCSFinished", FieldType="Number")]
		public System.Nullable<double> TobaccoCSFinished {
			get {
				return this._tobaccoCSFinished;
			}
			set {
				if ((value != this._tobaccoCSFinished)) {
					this.OnPropertyChanging("TobaccoCSFinished", this._tobaccoCSFinished);
					this._tobaccoCSFinished = value;
					this.OnPropertyChanged("TobaccoCSFinished");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInFGCSStarted", Storage="_tobaccoInFGCSStarted", FieldType="Number")]
		public System.Nullable<double> TobaccoInFGCSStarted {
			get {
				return this._tobaccoInFGCSStarted;
			}
			set {
				if ((value != this._tobaccoInFGCSStarted)) {
					this.OnPropertyChanging("TobaccoInFGCSStarted", this._tobaccoInFGCSStarted);
					this._tobaccoInFGCSStarted = value;
					this.OnPropertyChanged("TobaccoInFGCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DustCSStarted", Storage="_dustCSStarted", FieldType="Number")]
		public System.Nullable<double> DustCSStarted {
			get {
				return this._dustCSStarted;
			}
			set {
				if ((value != this._dustCSStarted)) {
					this.OnPropertyChanging("DustCSStarted", this._dustCSStarted);
					this._dustCSStarted = value;
					this.OnPropertyChanged("DustCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WasteCSStarted", Storage="_wasteCSStarted", FieldType="Number")]
		public System.Nullable<double> WasteCSStarted {
			get {
				return this._wasteCSStarted;
			}
			set {
				if ((value != this._wasteCSStarted)) {
					this.OnPropertyChanging("WasteCSStarted", this._wasteCSStarted);
					this._wasteCSStarted = value;
					this.OnPropertyChanged("WasteCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHMentholCSStarted", Storage="_sHMentholCSStarted", FieldType="Number")]
		public System.Nullable<double> SHMentholCSStarted {
			get {
				return this._sHMentholCSStarted;
			}
			set {
				if ((value != this._sHMentholCSStarted)) {
					this.OnPropertyChanging("SHMentholCSStarted", this._sHMentholCSStarted);
					this._sHMentholCSStarted = value;
					this.OnPropertyChanged("SHMentholCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OveruseCSStarted", Storage="_overuseCSStarted", FieldType="Number")]
		public System.Nullable<double> OveruseCSStarted {
			get {
				return this._overuseCSStarted;
			}
			set {
				if ((value != this._overuseCSStarted)) {
					this.OnPropertyChanging("OveruseCSStarted", this._overuseCSStarted);
					this._overuseCSStarted = value;
					this.OnPropertyChanged("OveruseCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PureTobaccoCSStarted", Storage="_pureTobaccoCSStarted", FieldType="Number")]
		public System.Nullable<double> PureTobaccoCSStarted {
			get {
				return this._pureTobaccoCSStarted;
			}
			set {
				if ((value != this._pureTobaccoCSStarted)) {
					this.OnPropertyChanging("PureTobaccoCSStarted", this._pureTobaccoCSStarted);
					this._pureTobaccoCSStarted = value;
					this.OnPropertyChanged("PureTobaccoCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRBook", Storage="_iPRBook", FieldType="Number")]
		public System.Nullable<double> IPRBook {
			get {
				return this._iPRBook;
			}
			set {
				if ((value != this._iPRBook)) {
					this.OnPropertyChanging("IPRBook", this._iPRBook);
					this._iPRBook = value;
					this.OnPropertyChanged("IPRBook");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WasteCSNotStarted", Storage="_wasteCSNotStarted", FieldType="Number")]
		public System.Nullable<double> WasteCSNotStarted {
			get {
				return this._wasteCSNotStarted;
			}
			set {
				if ((value != this._wasteCSNotStarted)) {
					this.OnPropertyChanging("WasteCSNotStarted", this._wasteCSNotStarted);
					this._wasteCSNotStarted = value;
					this.OnPropertyChanged("WasteCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHMentholCSNotStarted", Storage="_sHMentholCSNotStarted", FieldType="Number")]
		public System.Nullable<double> SHMentholCSNotStarted {
			get {
				return this._sHMentholCSNotStarted;
			}
			set {
				if ((value != this._sHMentholCSNotStarted)) {
					this.OnPropertyChanging("SHMentholCSNotStarted", this._sHMentholCSNotStarted);
					this._sHMentholCSNotStarted = value;
					this.OnPropertyChanged("SHMentholCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OveruseCSNotStarted", Storage="_overuseCSNotStarted", FieldType="Number")]
		public System.Nullable<double> OveruseCSNotStarted {
			get {
				return this._overuseCSNotStarted;
			}
			set {
				if ((value != this._overuseCSNotStarted)) {
					this.OnPropertyChanging("OveruseCSNotStarted", this._overuseCSNotStarted);
					this._overuseCSNotStarted = value;
					this.OnPropertyChanged("OveruseCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHWasteOveruseCSNotStarted", Storage="_sHWasteOveruseCSNotStarted", FieldType="Number")]
		public System.Nullable<double> SHWasteOveruseCSNotStarted {
			get {
				return this._sHWasteOveruseCSNotStarted;
			}
			set {
				if ((value != this._sHWasteOveruseCSNotStarted)) {
					this.OnPropertyChanging("SHWasteOveruseCSNotStarted", this._sHWasteOveruseCSNotStarted);
					this._sHWasteOveruseCSNotStarted = value;
					this.OnPropertyChanged("SHWasteOveruseCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DustCSNotStarted", Storage="_dustCSNotStarted", FieldType="Number")]
		public System.Nullable<double> DustCSNotStarted {
			get {
				return this._dustCSNotStarted;
			}
			set {
				if ((value != this._dustCSNotStarted)) {
					this.OnPropertyChanging("DustCSNotStarted", this._dustCSNotStarted);
					this._dustCSNotStarted = value;
					this.OnPropertyChanged("DustCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoAvailable", Storage="_tobaccoAvailable", FieldType="Number")]
		public System.Nullable<double> TobaccoAvailable {
			get {
				return this._tobaccoAvailable;
			}
			set {
				if ((value != this._tobaccoAvailable)) {
					this.OnPropertyChanging("TobaccoAvailable", this._tobaccoAvailable);
					this._tobaccoAvailable = value;
					this.OnPropertyChanged("TobaccoAvailable");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInFGCSNotStarted", Storage="_tobaccoInFGCSNotStarted", FieldType="Number")]
		public System.Nullable<double> TobaccoInFGCSNotStarted {
			get {
				return this._tobaccoInFGCSNotStarted;
			}
			set {
				if ((value != this._tobaccoInFGCSNotStarted)) {
					this.OnPropertyChanging("TobaccoInFGCSNotStarted", this._tobaccoInFGCSNotStarted);
					this._tobaccoInFGCSNotStarted = value;
					this.OnPropertyChanged("TobaccoInFGCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PureTobaccoCSNotStarted", Storage="_pureTobaccoCSNotStarted", FieldType="Number")]
		public System.Nullable<double> PureTobaccoCSNotStarted {
			get {
				return this._pureTobaccoCSNotStarted;
			}
			set {
				if ((value != this._pureTobaccoCSNotStarted)) {
					this.OnPropertyChanging("PureTobaccoCSNotStarted", this._pureTobaccoCSNotStarted);
					this._pureTobaccoCSNotStarted = value;
					this.OnPropertyChanged("PureTobaccoCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoUsedInTheProduction", Storage="_tobaccoUsedInTheProduction", FieldType="Number")]
		public System.Nullable<double> TobaccoUsedInTheProduction {
			get {
				return this._tobaccoUsedInTheProduction;
			}
			set {
				if ((value != this._tobaccoUsedInTheProduction)) {
					this.OnPropertyChanging("TobaccoUsedInTheProduction", this._tobaccoUsedInTheProduction);
					this._tobaccoUsedInTheProduction = value;
					this.OnPropertyChanged("TobaccoUsedInTheProduction");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoToBeUsedInTheProduction", Storage="_tobaccoToBeUsedInTheProduction", FieldType="Number")]
		public System.Nullable<double> TobaccoToBeUsedInTheProduction {
			get {
				return this._tobaccoToBeUsedInTheProduction;
			}
			set {
				if ((value != this._tobaccoToBeUsedInTheProduction)) {
					this.OnPropertyChanging("TobaccoToBeUsedInTheProduction", this._tobaccoToBeUsedInTheProduction);
					this._tobaccoToBeUsedInTheProduction = value;
					this.OnPropertyChanged("TobaccoToBeUsedInTheProduction");
				}
			}
		}
	}
	
	/// <summary>
	/// Batch List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Batch", Id="0x0100FCF87F15D5BE244EBA39ACA130B1ABDB")]
	public partial class Batch : Element {
		
		private string _batch0;
		
		private string _sKU;
		
		private System.Nullable<double> _fGQuantity;
		
		private System.Nullable<double> _fGQuantityPrevious;
		
		private System.Nullable<double> _fGQuantityBlocked;
		
		private System.Nullable<double> _fGQuantityAvailable;
		
		private System.Nullable<double> _materialQuantity;
		
		private System.Nullable<double> _materialQuantityPrevious;
		
		private System.Nullable<double> _calculatedOveruse;
		
		private System.Nullable<double> _overuse;
		
		private System.Nullable<double> _dust;
		
		private System.Nullable<double> _waste;
		
		private System.Nullable<double> _tobacco;
		
		private System.Nullable<double> _sHMenthol;
		
		private System.Nullable<double> _batchSHCooeficiency;
		
		private System.Nullable<double> _sHCooeficiencyVersion;
		
		private System.Nullable<double> _batchDustCooeficiency;
		
		private System.Nullable<double> _dustCooeficiencyVersion;
		
		private System.Nullable<double> _batchWasteCooeficiency;
		
		private System.Nullable<double> _wasteCooeficiencyVersion;
		
		private System.Nullable<double> _cFTProductivityRateMin;
		
		private System.Nullable<double> _cFTProductivityRateMax;
		
		private System.Nullable<double> _cFTProductivityNormMin;
		
		private System.Nullable<double> _cFTProductivityNormMax;
		
		private System.Nullable<double> _cFTProductivityVersion;
		
		private System.Nullable<double> _usageMin;
		
		private System.Nullable<double> _usageMax;
		
		private System.Nullable<double> _cTFUsageMin;
		
		private System.Nullable<double> _cTFUsageMax;
		
		private System.Nullable<double> _usageVersion;
		
		private System.Nullable<ProductType> _productType;
		
		private System.Nullable<BatchStatus> _batchStatus;
		
		private Microsoft.SharePoint.Linq.EntityRef<BatchLib> _batchLibraryIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<SKUCommonPart> _sKUIndex;
		
		private Microsoft.SharePoint.Linq.EntitySet<Disposal> _disposal;
		
		private Microsoft.SharePoint.Linq.EntitySet<DisposalDeclaration> _disposalDeclaration;
		
		private Microsoft.SharePoint.Linq.EntitySet<InvoiceContent> _invoiceContent;
		
		private Microsoft.SharePoint.Linq.EntitySet<Material> _material;
		
		private Microsoft.SharePoint.Linq.EntitySet<StockEntry> _stockEntry;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Batch() {
			this._batchLibraryIndex = new Microsoft.SharePoint.Linq.EntityRef<BatchLib>();
			this._batchLibraryIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BatchLib>>(this.OnBatchLibraryIndexSync);
			this._batchLibraryIndex.OnChanged += new System.EventHandler(this.OnBatchLibraryIndexChanged);
			this._batchLibraryIndex.OnChanging += new System.EventHandler(this.OnBatchLibraryIndexChanging);
			this._sKUIndex = new Microsoft.SharePoint.Linq.EntityRef<SKUCommonPart>();
			this._sKUIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SKUCommonPart>>(this.OnSKUIndexSync);
			this._sKUIndex.OnChanged += new System.EventHandler(this.OnSKUIndexChanged);
			this._sKUIndex.OnChanging += new System.EventHandler(this.OnSKUIndexChanging);
			this._disposal = new Microsoft.SharePoint.Linq.EntitySet<Disposal>();
			this._disposal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal>>(this.OnDisposalSync);
			this._disposal.OnChanged += new System.EventHandler(this.OnDisposalChanged);
			this._disposal.OnChanging += new System.EventHandler(this.OnDisposalChanging);
			this._disposalDeclaration = new Microsoft.SharePoint.Linq.EntitySet<DisposalDeclaration>();
			this._disposalDeclaration.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<DisposalDeclaration>>(this.OnDisposalDeclarationSync);
			this._disposalDeclaration.OnChanged += new System.EventHandler(this.OnDisposalDeclarationChanged);
			this._disposalDeclaration.OnChanging += new System.EventHandler(this.OnDisposalDeclarationChanging);
			this._invoiceContent = new Microsoft.SharePoint.Linq.EntitySet<InvoiceContent>();
			this._invoiceContent.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceContent>>(this.OnInvoiceContentSync);
			this._invoiceContent.OnChanged += new System.EventHandler(this.OnInvoiceContentChanged);
			this._invoiceContent.OnChanging += new System.EventHandler(this.OnInvoiceContentChanging);
			this._material = new Microsoft.SharePoint.Linq.EntitySet<Material>();
			this._material.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Material>>(this.OnMaterialSync);
			this._material.OnChanged += new System.EventHandler(this.OnMaterialChanged);
			this._material.OnChanging += new System.EventHandler(this.OnMaterialChanging);
			this._stockEntry = new Microsoft.SharePoint.Linq.EntitySet<StockEntry>();
			this._stockEntry.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<StockEntry>>(this.OnStockEntrySync);
			this._stockEntry.OnChanged += new System.EventHandler(this.OnStockEntryChanged);
			this._stockEntry.OnChanging += new System.EventHandler(this.OnStockEntryChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch0", FieldType="Text")]
		public string Batch0 {
			get {
				return this._batch0;
			}
			set {
				if ((value != this._batch0)) {
					this.OnPropertyChanging("Batch0", this._batch0);
					this._batch0 = value;
					this.OnPropertyChanged("Batch0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FGQuantity", Storage="_fGQuantity", FieldType="Number")]
		public System.Nullable<double> FGQuantity {
			get {
				return this._fGQuantity;
			}
			set {
				if ((value != this._fGQuantity)) {
					this.OnPropertyChanging("FGQuantity", this._fGQuantity);
					this._fGQuantity = value;
					this.OnPropertyChanged("FGQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FGQuantityPrevious", Storage="_fGQuantityPrevious", FieldType="Number")]
		public System.Nullable<double> FGQuantityPrevious {
			get {
				return this._fGQuantityPrevious;
			}
			set {
				if ((value != this._fGQuantityPrevious)) {
					this.OnPropertyChanging("FGQuantityPrevious", this._fGQuantityPrevious);
					this._fGQuantityPrevious = value;
					this.OnPropertyChanged("FGQuantityPrevious");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FGQuantityBlocked", Storage="_fGQuantityBlocked", FieldType="Number")]
		public System.Nullable<double> FGQuantityBlocked {
			get {
				return this._fGQuantityBlocked;
			}
			set {
				if ((value != this._fGQuantityBlocked)) {
					this.OnPropertyChanging("FGQuantityBlocked", this._fGQuantityBlocked);
					this._fGQuantityBlocked = value;
					this.OnPropertyChanged("FGQuantityBlocked");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FGQuantityAvailable", Storage="_fGQuantityAvailable", FieldType="Number")]
		public System.Nullable<double> FGQuantityAvailable {
			get {
				return this._fGQuantityAvailable;
			}
			set {
				if ((value != this._fGQuantityAvailable)) {
					this.OnPropertyChanging("FGQuantityAvailable", this._fGQuantityAvailable);
					this._fGQuantityAvailable = value;
					this.OnPropertyChanged("FGQuantityAvailable");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MaterialQuantity", Storage="_materialQuantity", FieldType="Number")]
		public System.Nullable<double> MaterialQuantity {
			get {
				return this._materialQuantity;
			}
			set {
				if ((value != this._materialQuantity)) {
					this.OnPropertyChanging("MaterialQuantity", this._materialQuantity);
					this._materialQuantity = value;
					this.OnPropertyChanged("MaterialQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MaterialQuantityPrevious", Storage="_materialQuantityPrevious", FieldType="Number")]
		public System.Nullable<double> MaterialQuantityPrevious {
			get {
				return this._materialQuantityPrevious;
			}
			set {
				if ((value != this._materialQuantityPrevious)) {
					this.OnPropertyChanging("MaterialQuantityPrevious", this._materialQuantityPrevious);
					this._materialQuantityPrevious = value;
					this.OnPropertyChanged("MaterialQuantityPrevious");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CalculatedOveruse", Storage="_calculatedOveruse", FieldType="Number")]
		public System.Nullable<double> CalculatedOveruse {
			get {
				return this._calculatedOveruse;
			}
			set {
				if ((value != this._calculatedOveruse)) {
					this.OnPropertyChanging("CalculatedOveruse", this._calculatedOveruse);
					this._calculatedOveruse = value;
					this.OnPropertyChanged("CalculatedOveruse");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Overuse", Storage="_overuse", FieldType="Number")]
		public System.Nullable<double> Overuse {
			get {
				return this._overuse;
			}
			set {
				if ((value != this._overuse)) {
					this.OnPropertyChanging("Overuse", this._overuse);
					this._overuse = value;
					this.OnPropertyChanged("Overuse");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous-kolumna'overuse')*xls/Dictionaries/dust
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dust", Storage="_dust", FieldType="Number")]
		public System.Nullable<double> Dust {
			get {
				return this._dust;
			}
			set {
				if ((value != this._dust)) {
					this.OnPropertyChanging("Dust", this._dust);
					this._dust = value;
					this.OnPropertyChanged("Dust");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous-kolumna'overuse')*xls/Dictionaries/waste
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Waste", Storage="_waste", FieldType="Number")]
		public System.Nullable<double> Waste {
			get {
				return this._waste;
			}
			set {
				if ((value != this._waste)) {
					this.OnPropertyChanging("Waste", this._waste);
					this._waste = value;
					this.OnPropertyChanged("Waste");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous)-kolumna'overuse'-kolumna'dust'-kolumna'waste'-kolumna'shmenthol'
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Tobacco", Storage="_tobacco", FieldType="Number")]
		public System.Nullable<double> Tobacco {
			get {
				return this._tobacco;
			}
			set {
				if ((value != this._tobacco)) {
					this.OnPropertyChanging("Tobacco", this._tobacco);
					this._tobacco = value;
					this.OnPropertyChanged("Tobacco");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous-kolumna'overuse')*xls/Dictionaries/SHMenthol
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHMenthol", Storage="_sHMenthol", FieldType="Number")]
		public System.Nullable<double> SHMenthol {
			get {
				return this._sHMenthol;
			}
			set {
				if ((value != this._sHMenthol)) {
					this.OnPropertyChanging("SHMenthol", this._sHMenthol);
					this._sHMenthol = value;
					this.OnPropertyChanged("SHMenthol");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchSHCooeficiency", Storage="_batchSHCooeficiency", FieldType="Number")]
		public System.Nullable<double> BatchSHCooeficiency {
			get {
				return this._batchSHCooeficiency;
			}
			set {
				if ((value != this._batchSHCooeficiency)) {
					this.OnPropertyChanging("BatchSHCooeficiency", this._batchSHCooeficiency);
					this._batchSHCooeficiency = value;
					this.OnPropertyChanged("BatchSHCooeficiency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHCooeficiencyVersion", Storage="_sHCooeficiencyVersion", FieldType="Number")]
		public System.Nullable<double> SHCooeficiencyVersion {
			get {
				return this._sHCooeficiencyVersion;
			}
			set {
				if ((value != this._sHCooeficiencyVersion)) {
					this.OnPropertyChanging("SHCooeficiencyVersion", this._sHCooeficiencyVersion);
					this._sHCooeficiencyVersion = value;
					this.OnPropertyChanged("SHCooeficiencyVersion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchDustCooeficiency", Storage="_batchDustCooeficiency", FieldType="Number")]
		public System.Nullable<double> BatchDustCooeficiency {
			get {
				return this._batchDustCooeficiency;
			}
			set {
				if ((value != this._batchDustCooeficiency)) {
					this.OnPropertyChanging("BatchDustCooeficiency", this._batchDustCooeficiency);
					this._batchDustCooeficiency = value;
					this.OnPropertyChanged("BatchDustCooeficiency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DustCooeficiencyVersion", Storage="_dustCooeficiencyVersion", FieldType="Number")]
		public System.Nullable<double> DustCooeficiencyVersion {
			get {
				return this._dustCooeficiencyVersion;
			}
			set {
				if ((value != this._dustCooeficiencyVersion)) {
					this.OnPropertyChanging("DustCooeficiencyVersion", this._dustCooeficiencyVersion);
					this._dustCooeficiencyVersion = value;
					this.OnPropertyChanged("DustCooeficiencyVersion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchWasteCooeficiency", Storage="_batchWasteCooeficiency", FieldType="Number")]
		public System.Nullable<double> BatchWasteCooeficiency {
			get {
				return this._batchWasteCooeficiency;
			}
			set {
				if ((value != this._batchWasteCooeficiency)) {
					this.OnPropertyChanging("BatchWasteCooeficiency", this._batchWasteCooeficiency);
					this._batchWasteCooeficiency = value;
					this.OnPropertyChanged("BatchWasteCooeficiency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WasteCooeficiencyVersion", Storage="_wasteCooeficiencyVersion", FieldType="Number")]
		public System.Nullable<double> WasteCooeficiencyVersion {
			get {
				return this._wasteCooeficiencyVersion;
			}
			set {
				if ((value != this._wasteCooeficiencyVersion)) {
					this.OnPropertyChanging("WasteCooeficiencyVersion", this._wasteCooeficiencyVersion);
					this._wasteCooeficiencyVersion = value;
					this.OnPropertyChanged("WasteCooeficiencyVersion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityRateMin", Storage="_cFTProductivityRateMin", FieldType="Number")]
		public System.Nullable<double> CFTProductivityRateMin {
			get {
				return this._cFTProductivityRateMin;
			}
			set {
				if ((value != this._cFTProductivityRateMin)) {
					this.OnPropertyChanging("CFTProductivityRateMin", this._cFTProductivityRateMin);
					this._cFTProductivityRateMin = value;
					this.OnPropertyChanged("CFTProductivityRateMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityRateMax", Storage="_cFTProductivityRateMax", FieldType="Number")]
		public System.Nullable<double> CFTProductivityRateMax {
			get {
				return this._cFTProductivityRateMax;
			}
			set {
				if ((value != this._cFTProductivityRateMax)) {
					this.OnPropertyChanging("CFTProductivityRateMax", this._cFTProductivityRateMax);
					this._cFTProductivityRateMax = value;
					this.OnPropertyChanged("CFTProductivityRateMax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityNormMin", Storage="_cFTProductivityNormMin", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> CFTProductivityNormMin {
			get {
				return this._cFTProductivityNormMin;
			}
			set {
				if ((value != this._cFTProductivityNormMin)) {
					this.OnPropertyChanging("CFTProductivityNormMin", this._cFTProductivityNormMin);
					this._cFTProductivityNormMin = value;
					this.OnPropertyChanged("CFTProductivityNormMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityNormMax", Storage="_cFTProductivityNormMax", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> CFTProductivityNormMax {
			get {
				return this._cFTProductivityNormMax;
			}
			set {
				if ((value != this._cFTProductivityNormMax)) {
					this.OnPropertyChanging("CFTProductivityNormMax", this._cFTProductivityNormMax);
					this._cFTProductivityNormMax = value;
					this.OnPropertyChanged("CFTProductivityNormMax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityVersion", Storage="_cFTProductivityVersion", FieldType="Number")]
		public System.Nullable<double> CFTProductivityVersion {
			get {
				return this._cFTProductivityVersion;
			}
			set {
				if ((value != this._cFTProductivityVersion)) {
					this.OnPropertyChanging("CFTProductivityVersion", this._cFTProductivityVersion);
					this._cFTProductivityVersion = value;
					this.OnPropertyChanged("CFTProductivityVersion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UsageMin", Storage="_usageMin", FieldType="Number")]
		public System.Nullable<double> UsageMin {
			get {
				return this._usageMin;
			}
			set {
				if ((value != this._usageMin)) {
					this.OnPropertyChanging("UsageMin", this._usageMin);
					this._usageMin = value;
					this.OnPropertyChanged("UsageMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UsageMax", Storage="_usageMax", FieldType="Number")]
		public System.Nullable<double> UsageMax {
			get {
				return this._usageMax;
			}
			set {
				if ((value != this._usageMax)) {
					this.OnPropertyChanging("UsageMax", this._usageMax);
					this._usageMax = value;
					this.OnPropertyChanged("UsageMax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CTFUsageMin", Storage="_cTFUsageMin", FieldType="Number")]
		public System.Nullable<double> CTFUsageMin {
			get {
				return this._cTFUsageMin;
			}
			set {
				if ((value != this._cTFUsageMin)) {
					this.OnPropertyChanging("CTFUsageMin", this._cTFUsageMin);
					this._cTFUsageMin = value;
					this.OnPropertyChanged("CTFUsageMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CTFUsageMax", Storage="_cTFUsageMax", FieldType="Number")]
		public System.Nullable<double> CTFUsageMax {
			get {
				return this._cTFUsageMax;
			}
			set {
				if ((value != this._cTFUsageMax)) {
					this.OnPropertyChanging("CTFUsageMax", this._cTFUsageMax);
					this._cTFUsageMax = value;
					this.OnPropertyChanged("CTFUsageMax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UsageVersion", Storage="_usageVersion", FieldType="Number")]
		public System.Nullable<double> UsageVersion {
			get {
				return this._usageVersion;
			}
			set {
				if ((value != this._usageVersion)) {
					this.OnPropertyChanging("UsageVersion", this._usageVersion);
					this._usageVersion = value;
					this.OnPropertyChanged("UsageVersion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchStatus", Storage="_batchStatus", FieldType="Choice")]
		public System.Nullable<BatchStatus> BatchStatus {
			get {
				return this._batchStatus;
			}
			set {
				if ((value != this._batchStatus)) {
					this.OnPropertyChanging("BatchStatus", this._batchStatus);
					this._batchStatus = value;
					this.OnPropertyChanged("BatchStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BatchLibraryIndex", Storage="_batchLibraryIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Batch Library")]
		public BatchLib BatchLibraryIndex {
			get {
				return this._batchLibraryIndex.GetEntity();
			}
			set {
				this._batchLibraryIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SKUIndex", Storage="_sKUIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SKU")]
		public SKUCommonPart SKUIndex {
			get {
				return this._sKUIndex.GetEntity();
			}
			set {
				this._sKUIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2BatchIndex", Storage="_disposal", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposal")]
		public Microsoft.SharePoint.Linq.EntitySet<Disposal> Disposal {
			get {
				return this._disposal;
			}
			set {
				this._disposal.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DisposalsDeclaration2BatchIndex", Storage="_disposalDeclaration", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposal Declaration")]
		public Microsoft.SharePoint.Linq.EntitySet<DisposalDeclaration> DisposalDeclaration {
			get {
				return this._disposalDeclaration;
			}
			set {
				this._disposalDeclaration.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="InvoiceContent2BatchIndex", Storage="_invoiceContent", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Invoice Content")]
		public Microsoft.SharePoint.Linq.EntitySet<InvoiceContent> InvoiceContent {
			get {
				return this._invoiceContent;
			}
			set {
				this._invoiceContent.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Material2BatchIndex", Storage="_material", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Material")]
		public Microsoft.SharePoint.Linq.EntitySet<Material> Material {
			get {
				return this._material;
			}
			set {
				this._material.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BatchIndex", Storage="_stockEntry", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Stock Entry")]
		public Microsoft.SharePoint.Linq.EntitySet<StockEntry> StockEntry {
			get {
				return this._stockEntry;
			}
			set {
				this._stockEntry.Assign(value);
			}
		}
		
		private void OnBatchLibraryIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BatchLibraryIndex", this._batchLibraryIndex.Clone());
		}
		
		private void OnBatchLibraryIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BatchLibraryIndex");
		}
		
		private void OnBatchLibraryIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BatchLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Batch.Add(this);
			}
			else {
				e.Item.Batch.Remove(this);
			}
		}
		
		private void OnSKUIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SKUIndex", this._sKUIndex.Clone());
		}
		
		private void OnSKUIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SKUIndex");
		}
		
		private void OnSKUIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SKUCommonPart> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Batch.Add(this);
			}
			else {
				e.Item.Batch.Remove(this);
			}
		}
		
		private void OnDisposalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal", this._disposal.Clone());
		}
		
		private void OnDisposalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal");
		}
		
		private void OnDisposalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal2BatchIndex = this;
			}
			else {
				e.Item.Disposal2BatchIndex = null;
			}
		}
		
		private void OnDisposalDeclarationChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("DisposalDeclaration", this._disposalDeclaration.Clone());
		}
		
		private void OnDisposalDeclarationChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("DisposalDeclaration");
		}
		
		private void OnDisposalDeclarationSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<DisposalDeclaration> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.DisposalsDeclaration2BatchIndex = this;
			}
			else {
				e.Item.DisposalsDeclaration2BatchIndex = null;
			}
		}
		
		private void OnInvoiceContentChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("InvoiceContent", this._invoiceContent.Clone());
		}
		
		private void OnInvoiceContentChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("InvoiceContent");
		}
		
		private void OnInvoiceContentSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceContent> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.InvoiceContent2BatchIndex = this;
			}
			else {
				e.Item.InvoiceContent2BatchIndex = null;
			}
		}
		
		private void OnMaterialChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Material", this._material.Clone());
		}
		
		private void OnMaterialChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Material");
		}
		
		private void OnMaterialSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Material> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Material2BatchIndex = this;
			}
			else {
				e.Item.Material2BatchIndex = null;
			}
		}
		
		private void OnStockEntryChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("StockEntry", this._stockEntry.Clone());
		}
		
		private void OnStockEntryChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("StockEntry");
		}
		
		private void OnStockEntrySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<StockEntry> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.BatchIndex = this;
			}
			else {
				e.Item.BatchIndex = null;
			}
		}
	}
	
	/// <summary>
	/// Clearance List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Clearence", Id="0x010024D8E558C8B92D4094E6420B75D7AEDD")]
	public partial class Clearence : Element {
		
		private string _documentNo;
		
		private string _referenceNumber;
		
		private System.Nullable<bool> _status;
		
		private string _procedureCode;
		
		private System.Nullable<ClearenceProcedure> _clearenceProcedure;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADConsignment> _sADConsignmentLibraryIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _clearence2SadGoodID;
		
		private Microsoft.SharePoint.Linq.EntitySet<Disposal> _disposal;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Clearence() {
			this._sADConsignmentLibraryIndex = new Microsoft.SharePoint.Linq.EntityRef<SADConsignment>();
			this._sADConsignmentLibraryIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADConsignment>>(this.OnSADConsignmentLibraryIndexSync);
			this._sADConsignmentLibraryIndex.OnChanged += new System.EventHandler(this.OnSADConsignmentLibraryIndexChanged);
			this._sADConsignmentLibraryIndex.OnChanging += new System.EventHandler(this.OnSADConsignmentLibraryIndexChanging);
			this._clearence2SadGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._clearence2SadGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnClearence2SadGoodIDSync);
			this._clearence2SadGoodID.OnChanged += new System.EventHandler(this.OnClearence2SadGoodIDChanged);
			this._clearence2SadGoodID.OnChanging += new System.EventHandler(this.OnClearence2SadGoodIDChanging);
			this._disposal = new Microsoft.SharePoint.Linq.EntitySet<Disposal>();
			this._disposal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal>>(this.OnDisposalSync);
			this._disposal.OnChanged += new System.EventHandler(this.OnDisposalChanged);
			this._disposal.OnChanging += new System.EventHandler(this.OnDisposalChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNo", Storage="_documentNo", FieldType="Text")]
		public string DocumentNo {
			get {
				return this._documentNo;
			}
			set {
				if ((value != this._documentNo)) {
					this.OnPropertyChanging("DocumentNo", this._documentNo);
					this._documentNo = value;
					this.OnPropertyChanged("DocumentNo");
				}
			}
		}
		
		/// <summary>
		/// SAD Document Reference Number - box 7.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReferenceNumber", Storage="_referenceNumber", FieldType="Text")]
		public string ReferenceNumber {
			get {
				return this._referenceNumber;
			}
			set {
				if ((value != this._referenceNumber)) {
					this.OnPropertyChanging("ReferenceNumber", this._referenceNumber);
					this._referenceNumber = value;
					this.OnPropertyChanged("ReferenceNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_status", FieldType="Boolean")]
		public System.Nullable<bool> Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProcedureCode", Storage="_procedureCode", FieldType="Text")]
		public string ProcedureCode {
			get {
				return this._procedureCode;
			}
			set {
				if ((value != this._procedureCode)) {
					this.OnPropertyChanging("ProcedureCode", this._procedureCode);
					this._procedureCode = value;
					this.OnPropertyChanged("ProcedureCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ClearenceProcedure", Storage="_clearenceProcedure", FieldType="Choice")]
		public System.Nullable<ClearenceProcedure> ClearenceProcedure {
			get {
				return this._clearenceProcedure;
			}
			set {
				if ((value != this._clearenceProcedure)) {
					this.OnPropertyChanging("ClearenceProcedure", this._clearenceProcedure);
					this._clearenceProcedure = value;
					this.OnPropertyChanged("ClearenceProcedure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADConsignmentLibraryIndex", Storage="_sADConsignmentLibraryIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Consignment")]
		public SADConsignment SADConsignmentLibraryIndex {
			get {
				return this._sADConsignmentLibraryIndex.GetEntity();
			}
			set {
				this._sADConsignmentLibraryIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Clearence2SadGoodID", Storage="_clearence2SadGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood Clearence2SadGoodID {
			get {
				return this._clearence2SadGoodID.GetEntity();
			}
			set {
				this._clearence2SadGoodID.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2ClearenceIndex", Storage="_disposal", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposal")]
		public Microsoft.SharePoint.Linq.EntitySet<Disposal> Disposal {
			get {
				return this._disposal;
			}
			set {
				this._disposal.Assign(value);
			}
		}
		
		private void OnSADConsignmentLibraryIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADConsignmentLibraryIndex", this._sADConsignmentLibraryIndex.Clone());
		}
		
		private void OnSADConsignmentLibraryIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADConsignmentLibraryIndex");
		}
		
		private void OnSADConsignmentLibraryIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADConsignment> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Clearence.Add(this);
			}
			else {
				e.Item.Clearence.Remove(this);
			}
		}
		
		private void OnClearence2SadGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Clearence2SadGoodID", this._clearence2SadGoodID.Clone());
		}
		
		private void OnClearence2SadGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Clearence2SadGoodID");
		}
		
		private void OnClearence2SadGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Clearence.Add(this);
			}
			else {
				e.Item.Clearence.Remove(this);
			}
		}
		
		private void OnDisposalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal", this._disposal.Clone());
		}
		
		private void OnDisposalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal");
		}
		
		private void OnDisposalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal2ClearenceIndex = this;
			}
			else {
				e.Item.Disposal2ClearenceIndex = null;
			}
		}
	}
	
	/// <summary>
	/// Consent List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Consent", Id="0x0100A7FE6CFCCADBB7409C1F0FA102B9C573")]
	public partial class Consent : Element {
		
		private System.Nullable<System.DateTime> _consentDate;
		
		private System.Nullable<System.DateTime> _validFromDate;
		
		private System.Nullable<System.DateTime> _validToDate;
		
		private System.Nullable<double> _productivityRateMin;
		
		private System.Nullable<double> _productivityRateMax;
		
		private System.Nullable<double> _consentPeriod;
		
		private System.Nullable<bool> _isIPR;
		
		private Microsoft.SharePoint.Linq.EntitySet<IPR> _iPR;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Consent() {
			this._iPR = new Microsoft.SharePoint.Linq.EntitySet<IPR>();
			this._iPR.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR>>(this.OnIPRSync);
			this._iPR.OnChanged += new System.EventHandler(this.OnIPRChanged);
			this._iPR.OnChanging += new System.EventHandler(this.OnIPRChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ConsentDate", Storage="_consentDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ConsentDate {
			get {
				return this._consentDate;
			}
			set {
				if ((value != this._consentDate)) {
					this.OnPropertyChanging("ConsentDate", this._consentDate);
					this._consentDate = value;
					this.OnPropertyChanged("ConsentDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValidFromDate", Storage="_validFromDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ValidFromDate {
			get {
				return this._validFromDate;
			}
			set {
				if ((value != this._validFromDate)) {
					this.OnPropertyChanging("ValidFromDate", this._validFromDate);
					this._validFromDate = value;
					this.OnPropertyChanged("ValidFromDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValidToDate", Storage="_validToDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ValidToDate {
			get {
				return this._validToDate;
			}
			set {
				if ((value != this._validToDate)) {
					this.OnPropertyChanging("ValidToDate", this._validToDate);
					this._validToDate = value;
					this.OnPropertyChanged("ValidToDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductivityRateMin", Storage="_productivityRateMin", FieldType="Number")]
		public System.Nullable<double> ProductivityRateMin {
			get {
				return this._productivityRateMin;
			}
			set {
				if ((value != this._productivityRateMin)) {
					this.OnPropertyChanging("ProductivityRateMin", this._productivityRateMin);
					this._productivityRateMin = value;
					this.OnPropertyChanged("ProductivityRateMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductivityRateMax", Storage="_productivityRateMax", FieldType="Number")]
		public System.Nullable<double> ProductivityRateMax {
			get {
				return this._productivityRateMax;
			}
			set {
				if ((value != this._productivityRateMax)) {
					this.OnPropertyChanging("ProductivityRateMax", this._productivityRateMax);
					this._productivityRateMax = value;
					this.OnPropertyChanged("ProductivityRateMax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ConsentPeriod", Storage="_consentPeriod", FieldType="Number")]
		public System.Nullable<double> ConsentPeriod {
			get {
				return this._consentPeriod;
			}
			set {
				if ((value != this._consentPeriod)) {
					this.OnPropertyChanging("ConsentPeriod", this._consentPeriod);
					this._consentPeriod = value;
					this.OnPropertyChanged("ConsentPeriod");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsIPR", Storage="_isIPR", FieldType="Boolean")]
		public System.Nullable<bool> IsIPR {
			get {
				return this._isIPR;
			}
			set {
				if ((value != this._isIPR)) {
					this.OnPropertyChanging("IsIPR", this._isIPR);
					this._isIPR = value;
					this.OnPropertyChanged("IsIPR");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPR2ConsentTitle", Storage="_iPR", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="IPR")]
		public Microsoft.SharePoint.Linq.EntitySet<IPR> IPR {
			get {
				return this._iPR;
			}
			set {
				this._iPR.Assign(value);
			}
		}
		
		private void OnIPRChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPR", this._iPR.Clone());
		}
		
		private void OnIPRChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPR");
		}
		
		private void OnIPRSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPR2ConsentTitle = this;
			}
			else {
				e.Item.IPR2ConsentTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Customs Union List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CustomsUnion", Id="0x0100700A5727DB0A43069A5E0A479E3B80A7")]
	public partial class CustomsUnion : Element {
		
		private string _eUPrimeMarket;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CustomsUnion() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EUPrimeMarket", Storage="_eUPrimeMarket", FieldType="Text")]
		public string EUPrimeMarket {
			get {
				return this._eUPrimeMarket;
			}
			set {
				if ((value != this._eUPrimeMarket)) {
					this.OnPropertyChanging("EUPrimeMarket", this._eUPrimeMarket);
					this._eUPrimeMarket = value;
					this.OnPropertyChanged("EUPrimeMarket");
				}
			}
		}
	}
	
	/// <summary>
	/// Cutfiller Coefficient List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CutfillerCoefficient", Id="0x01001D2AFAE51342C546A5F1677134421FD5")]
	public partial class CutfillerCoefficient : Element {
		
		private System.Nullable<double> _cFTProductivityRateMin;
		
		private System.Nullable<double> _cFTProductivityRateMax;
		
		private System.Nullable<double> _cFTProductivityNormMin;
		
		private System.Nullable<double> _cFTProductivityNormMax;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CutfillerCoefficient() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityRateMin", Storage="_cFTProductivityRateMin", FieldType="Number")]
		public System.Nullable<double> CFTProductivityRateMin {
			get {
				return this._cFTProductivityRateMin;
			}
			set {
				if ((value != this._cFTProductivityRateMin)) {
					this.OnPropertyChanging("CFTProductivityRateMin", this._cFTProductivityRateMin);
					this._cFTProductivityRateMin = value;
					this.OnPropertyChanged("CFTProductivityRateMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityRateMax", Storage="_cFTProductivityRateMax", FieldType="Number")]
		public System.Nullable<double> CFTProductivityRateMax {
			get {
				return this._cFTProductivityRateMax;
			}
			set {
				if ((value != this._cFTProductivityRateMax)) {
					this.OnPropertyChanging("CFTProductivityRateMax", this._cFTProductivityRateMax);
					this._cFTProductivityRateMax = value;
					this.OnPropertyChanged("CFTProductivityRateMax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityNormMin", Storage="_cFTProductivityNormMin", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> CFTProductivityNormMin {
			get {
				return this._cFTProductivityNormMin;
			}
			set {
				if ((value != this._cFTProductivityNormMin)) {
					this.OnPropertyChanging("CFTProductivityNormMin", this._cFTProductivityNormMin);
					this._cFTProductivityNormMin = value;
					this.OnPropertyChanged("CFTProductivityNormMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityNormMax", Storage="_cFTProductivityNormMax", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> CFTProductivityNormMax {
			get {
				return this._cFTProductivityNormMax;
			}
			set {
				if ((value != this._cFTProductivityNormMax)) {
					this.OnPropertyChanging("CFTProductivityNormMax", this._cFTProductivityNormMax);
					this._cFTProductivityNormMax = value;
					this.OnPropertyChanged("CFTProductivityNormMax");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type CutfillerCoefficient.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type CutfillerCoefficient.");
			}
		}
	}
	
	/// <summary>
	/// Disposals List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Disposal", Id="0x01000FAE27B30BF7FC46886DA88A4D425DEF")]
	public partial class Disposal : Element {
		
		private System.Nullable<double> _no;
		
		private string _sADDocumentNo;
		
		private System.Nullable<System.DateTime> _sADDate;
		
		private string _invoiceNo;
		
		private string _iPRDocumentNo;
		
		private System.Nullable<double> _settledQuantity;
		
		private System.Nullable<double> _dutyPerSettledAmount;
		
		private System.Nullable<double> _vATPerSettledAmount;
		
		private System.Nullable<double> _dutyAndVAT;
		
		private System.Nullable<double> _tobaccoValue;
		
		private System.Nullable<double> _remainingQuantity;
		
		private string _customsProcedure;
		
		private System.Nullable<System.DateTime> _created;
		
		private System.Nullable<DisposalStatus> _disposalStatus;
		
		private System.Nullable<CustomsStatus> _customsStatus;
		
		private System.Nullable<ClearingType> _clearingType;
		
		private Microsoft.SharePoint.Linq.EntityRef<PCNCode> _disposal2PCNID;
		
		private Microsoft.SharePoint.Linq.EntityRef<Clearence> _disposal2ClearenceIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<JSOXCustomsSummary> _jSOXCustomsSummaryIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<Batch> _disposal2BatchIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<IPR> _disposal2IPRIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<Material> _disposal2MaterialIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<InvoiceContent> _disposal2InvoiceContentIndex;
		
		private System.Nullable<int> _authorId;
		
		private string _author;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Disposal() {
			this._disposal2PCNID = new Microsoft.SharePoint.Linq.EntityRef<PCNCode>();
			this._disposal2PCNID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode>>(this.OnDisposal2PCNIDSync);
			this._disposal2PCNID.OnChanged += new System.EventHandler(this.OnDisposal2PCNIDChanged);
			this._disposal2PCNID.OnChanging += new System.EventHandler(this.OnDisposal2PCNIDChanging);
			this._disposal2ClearenceIndex = new Microsoft.SharePoint.Linq.EntityRef<Clearence>();
			this._disposal2ClearenceIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnDisposal2ClearenceIndexSync);
			this._disposal2ClearenceIndex.OnChanged += new System.EventHandler(this.OnDisposal2ClearenceIndexChanged);
			this._disposal2ClearenceIndex.OnChanging += new System.EventHandler(this.OnDisposal2ClearenceIndexChanging);
			this._jSOXCustomsSummaryIndex = new Microsoft.SharePoint.Linq.EntityRef<JSOXCustomsSummary>();
			this._jSOXCustomsSummaryIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXCustomsSummary>>(this.OnJSOXCustomsSummaryIndexSync);
			this._jSOXCustomsSummaryIndex.OnChanged += new System.EventHandler(this.OnJSOXCustomsSummaryIndexChanged);
			this._jSOXCustomsSummaryIndex.OnChanging += new System.EventHandler(this.OnJSOXCustomsSummaryIndexChanging);
			this._disposal2BatchIndex = new Microsoft.SharePoint.Linq.EntityRef<Batch>();
			this._disposal2BatchIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnDisposal2BatchIndexSync);
			this._disposal2BatchIndex.OnChanged += new System.EventHandler(this.OnDisposal2BatchIndexChanged);
			this._disposal2BatchIndex.OnChanging += new System.EventHandler(this.OnDisposal2BatchIndexChanging);
			this._disposal2IPRIndex = new Microsoft.SharePoint.Linq.EntityRef<IPR>();
			this._disposal2IPRIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR>>(this.OnDisposal2IPRIndexSync);
			this._disposal2IPRIndex.OnChanged += new System.EventHandler(this.OnDisposal2IPRIndexChanged);
			this._disposal2IPRIndex.OnChanging += new System.EventHandler(this.OnDisposal2IPRIndexChanging);
			this._disposal2MaterialIndex = new Microsoft.SharePoint.Linq.EntityRef<Material>();
			this._disposal2MaterialIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Material>>(this.OnDisposal2MaterialIndexSync);
			this._disposal2MaterialIndex.OnChanged += new System.EventHandler(this.OnDisposal2MaterialIndexChanged);
			this._disposal2MaterialIndex.OnChanging += new System.EventHandler(this.OnDisposal2MaterialIndexChanging);
			this._disposal2InvoiceContentIndex = new Microsoft.SharePoint.Linq.EntityRef<InvoiceContent>();
			this._disposal2InvoiceContentIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceContent>>(this.OnDisposal2InvoiceContentIndexSync);
			this._disposal2InvoiceContentIndex.OnChanged += new System.EventHandler(this.OnDisposal2InvoiceContentIndexChanged);
			this._disposal2InvoiceContentIndex.OnChanging += new System.EventHandler(this.OnDisposal2InvoiceContentIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="No", Storage="_no", FieldType="Number")]
		public System.Nullable<double> No {
			get {
				return this._no;
			}
			set {
				if ((value != this._no)) {
					this.OnPropertyChanging("No", this._no);
					this._no = value;
					this.OnPropertyChanged("No");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDocumentNo", Storage="_sADDocumentNo", FieldType="Text")]
		public string SADDocumentNo {
			get {
				return this._sADDocumentNo;
			}
			set {
				if ((value != this._sADDocumentNo)) {
					this.OnPropertyChanging("SADDocumentNo", this._sADDocumentNo);
					this._sADDocumentNo = value;
					this.OnPropertyChanged("SADDocumentNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDate", Storage="_sADDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> SADDate {
			get {
				return this._sADDate;
			}
			set {
				if ((value != this._sADDate)) {
					this.OnPropertyChanging("SADDate", this._sADDate);
					this._sADDate = value;
					this.OnPropertyChanged("SADDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceNo", Storage="_invoiceNo", FieldType="Text")]
		public string InvoiceNo {
			get {
				return this._invoiceNo;
			}
			set {
				if ((value != this._invoiceNo)) {
					this.OnPropertyChanging("InvoiceNo", this._invoiceNo);
					this._invoiceNo = value;
					this.OnPropertyChanged("InvoiceNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRDocumentNo", Storage="_iPRDocumentNo", FieldType="Text")]
		public string IPRDocumentNo {
			get {
				return this._iPRDocumentNo;
			}
			set {
				if ((value != this._iPRDocumentNo)) {
					this.OnPropertyChanging("IPRDocumentNo", this._iPRDocumentNo);
					this._iPRDocumentNo = value;
					this.OnPropertyChanged("IPRDocumentNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SettledQuantity", Storage="_settledQuantity", FieldType="Number")]
		public System.Nullable<double> SettledQuantity {
			get {
				return this._settledQuantity;
			}
			set {
				if ((value != this._settledQuantity)) {
					this.OnPropertyChanging("SettledQuantity", this._settledQuantity);
					this._settledQuantity = value;
					this.OnPropertyChanged("SettledQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyPerSettledAmount", Storage="_dutyPerSettledAmount", FieldType="Number")]
		public System.Nullable<double> DutyPerSettledAmount {
			get {
				return this._dutyPerSettledAmount;
			}
			set {
				if ((value != this._dutyPerSettledAmount)) {
					this.OnPropertyChanging("DutyPerSettledAmount", this._dutyPerSettledAmount);
					this._dutyPerSettledAmount = value;
					this.OnPropertyChanged("DutyPerSettledAmount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VATPerSettledAmount", Storage="_vATPerSettledAmount", FieldType="Number")]
		public System.Nullable<double> VATPerSettledAmount {
			get {
				return this._vATPerSettledAmount;
			}
			set {
				if ((value != this._vATPerSettledAmount)) {
					this.OnPropertyChanging("VATPerSettledAmount", this._vATPerSettledAmount);
					this._vATPerSettledAmount = value;
					this.OnPropertyChanged("VATPerSettledAmount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyAndVAT", Storage="_dutyAndVAT", FieldType="Number")]
		public System.Nullable<double> DutyAndVAT {
			get {
				return this._dutyAndVAT;
			}
			set {
				if ((value != this._dutyAndVAT)) {
					this.OnPropertyChanging("DutyAndVAT", this._dutyAndVAT);
					this._dutyAndVAT = value;
					this.OnPropertyChanged("DutyAndVAT");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoValue", Storage="_tobaccoValue", FieldType="Number")]
		public System.Nullable<double> TobaccoValue {
			get {
				return this._tobaccoValue;
			}
			set {
				if ((value != this._tobaccoValue)) {
					this.OnPropertyChanging("TobaccoValue", this._tobaccoValue);
					this._tobaccoValue = value;
					this.OnPropertyChanged("TobaccoValue");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RemainingQuantity", Storage="_remainingQuantity", FieldType="Number")]
		public System.Nullable<double> RemainingQuantity {
			get {
				return this._remainingQuantity;
			}
			set {
				if ((value != this._remainingQuantity)) {
					this.OnPropertyChanging("RemainingQuantity", this._remainingQuantity);
					this._remainingQuantity = value;
					this.OnPropertyChanged("RemainingQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsProcedure", Storage="_customsProcedure", FieldType="Text")]
		public string CustomsProcedure {
			get {
				return this._customsProcedure;
			}
			set {
				if ((value != this._customsProcedure)) {
					this.OnPropertyChanging("CustomsProcedure", this._customsProcedure);
					this._customsProcedure = value;
					this.OnPropertyChanged("CustomsProcedure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created", Storage="_created", ReadOnly=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> Created {
			get {
				return this._created;
			}
			set {
				if ((value != this._created)) {
					this.OnPropertyChanging("Created", this._created);
					this._created = value;
					this.OnPropertyChanged("Created");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DisposalStatus", Storage="_disposalStatus", FieldType="Choice")]
		public System.Nullable<DisposalStatus> DisposalStatus {
			get {
				return this._disposalStatus;
			}
			set {
				if ((value != this._disposalStatus)) {
					this.OnPropertyChanging("DisposalStatus", this._disposalStatus);
					this._disposalStatus = value;
					this.OnPropertyChanged("DisposalStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsStatus", Storage="_customsStatus", FieldType="Choice")]
		public System.Nullable<CustomsStatus> CustomsStatus {
			get {
				return this._customsStatus;
			}
			set {
				if ((value != this._customsStatus)) {
					this.OnPropertyChanging("CustomsStatus", this._customsStatus);
					this._customsStatus = value;
					this.OnPropertyChanged("CustomsStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ClearingType", Storage="_clearingType", FieldType="Choice")]
		public System.Nullable<ClearingType> ClearingType {
			get {
				return this._clearingType;
			}
			set {
				if ((value != this._clearingType)) {
					this.OnPropertyChanging("ClearingType", this._clearingType);
					this._clearingType = value;
					this.OnPropertyChanged("ClearingType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2PCNID", Storage="_disposal2PCNID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="PCN Code")]
		public PCNCode Disposal2PCNID {
			get {
				return this._disposal2PCNID.GetEntity();
			}
			set {
				this._disposal2PCNID.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2ClearenceIndex", Storage="_disposal2ClearenceIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Clearence")]
		public Clearence Disposal2ClearenceIndex {
			get {
				return this._disposal2ClearenceIndex.GetEntity();
			}
			set {
				this._disposal2ClearenceIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="JSOXCustomsSummaryIndex", Storage="_jSOXCustomsSummaryIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JSOX Customs Summary")]
		public JSOXCustomsSummary JSOXCustomsSummaryIndex {
			get {
				return this._jSOXCustomsSummaryIndex.GetEntity();
			}
			set {
				this._jSOXCustomsSummaryIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2BatchIndex", Storage="_disposal2BatchIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Batch")]
		public Batch Disposal2BatchIndex {
			get {
				return this._disposal2BatchIndex.GetEntity();
			}
			set {
				this._disposal2BatchIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2IPRIndex", Storage="_disposal2IPRIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="IPR")]
		public IPR Disposal2IPRIndex {
			get {
				return this._disposal2IPRIndex.GetEntity();
			}
			set {
				this._disposal2IPRIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2MaterialIndex", Storage="_disposal2MaterialIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Material")]
		public Material Disposal2MaterialIndex {
			get {
				return this._disposal2MaterialIndex.GetEntity();
			}
			set {
				this._disposal2MaterialIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2InvoiceContentIndex", Storage="_disposal2InvoiceContentIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Invoice Content")]
		public InvoiceContent Disposal2InvoiceContentIndex {
			get {
				return this._disposal2InvoiceContentIndex.GetEntity();
			}
			set {
				this._disposal2InvoiceContentIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Author", Storage="_authorId", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AuthorId {
			get {
				return this._authorId;
			}
			set {
				if ((value != this._authorId)) {
					this.OnPropertyChanging("AuthorId", this._authorId);
					this._authorId = value;
					this.OnPropertyChanged("AuthorId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Author", Storage="_author", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string Author {
			get {
				return this._author;
			}
			set {
				if ((value != this._author)) {
					this.OnPropertyChanging("Author", this._author);
					this._author = value;
					this.OnPropertyChanged("Author");
				}
			}
		}
		
		private void OnDisposal2PCNIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal2PCNID", this._disposal2PCNID.Clone());
		}
		
		private void OnDisposal2PCNIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal2PCNID");
		}
		
		private void OnDisposal2PCNIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal0.Add(this);
			}
			else {
				e.Item.Disposal0.Remove(this);
			}
		}
		
		private void OnDisposal2ClearenceIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal2ClearenceIndex", this._disposal2ClearenceIndex.Clone());
		}
		
		private void OnDisposal2ClearenceIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal2ClearenceIndex");
		}
		
		private void OnDisposal2ClearenceIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal.Add(this);
			}
			else {
				e.Item.Disposal.Remove(this);
			}
		}
		
		private void OnJSOXCustomsSummaryIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("JSOXCustomsSummaryIndex", this._jSOXCustomsSummaryIndex.Clone());
		}
		
		private void OnJSOXCustomsSummaryIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("JSOXCustomsSummaryIndex");
		}
		
		private void OnJSOXCustomsSummaryIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXCustomsSummary> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal.Add(this);
			}
			else {
				e.Item.Disposal.Remove(this);
			}
		}
		
		private void OnDisposal2BatchIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal2BatchIndex", this._disposal2BatchIndex.Clone());
		}
		
		private void OnDisposal2BatchIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal2BatchIndex");
		}
		
		private void OnDisposal2BatchIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal.Add(this);
			}
			else {
				e.Item.Disposal.Remove(this);
			}
		}
		
		private void OnDisposal2IPRIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal2IPRIndex", this._disposal2IPRIndex.Clone());
		}
		
		private void OnDisposal2IPRIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal2IPRIndex");
		}
		
		private void OnDisposal2IPRIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal.Add(this);
			}
			else {
				e.Item.Disposal.Remove(this);
			}
		}
		
		private void OnDisposal2MaterialIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal2MaterialIndex", this._disposal2MaterialIndex.Clone());
		}
		
		private void OnDisposal2MaterialIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal2MaterialIndex");
		}
		
		private void OnDisposal2MaterialIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Material> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal.Add(this);
			}
			else {
				e.Item.Disposal.Remove(this);
			}
		}
		
		private void OnDisposal2InvoiceContentIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal2InvoiceContentIndex", this._disposal2InvoiceContentIndex.Clone());
		}
		
		private void OnDisposal2InvoiceContentIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal2InvoiceContentIndex");
		}
		
		private void OnDisposal2InvoiceContentIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceContent> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal.Add(this);
			}
			else {
				e.Item.Disposal.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// My Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="DisposalDeclaration", Id="0x0100641EF9D66D6B4A05A05A8C38062DFFD8")]
	public partial class DisposalDeclaration : Element {
		
		private System.Nullable<System.DateTime> _entryDate;
		
		private System.Nullable<double> _no;
		
		private string _cWDescription;
		
		private System.Nullable<double> _decalredToCleared;
		
		private System.Nullable<double> _quantityAvailable;
		
		private System.Nullable<double> _packageAvailable;
		
		private System.Nullable<double> _quantityToCleared;
		
		private System.Nullable<double> _packageToCleared;
		
		private System.Nullable<double> _addedToClearDeclared;
		
		private string _procedure;
		
		private Microsoft.SharePoint.Linq.EntityRef<Batch> _disposalsDeclaration2BatchIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DisposalDeclaration() {
			this._disposalsDeclaration2BatchIndex = new Microsoft.SharePoint.Linq.EntityRef<Batch>();
			this._disposalsDeclaration2BatchIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnDisposalsDeclaration2BatchIndexSync);
			this._disposalsDeclaration2BatchIndex.OnChanged += new System.EventHandler(this.OnDisposalsDeclaration2BatchIndexChanged);
			this._disposalsDeclaration2BatchIndex.OnChanging += new System.EventHandler(this.OnDisposalsDeclaration2BatchIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EntryDate", Storage="_entryDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> EntryDate {
			get {
				return this._entryDate;
			}
			set {
				if ((value != this._entryDate)) {
					this.OnPropertyChanging("EntryDate", this._entryDate);
					this._entryDate = value;
					this.OnPropertyChanged("EntryDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="No", Storage="_no", FieldType="Number")]
		public System.Nullable<double> No {
			get {
				return this._no;
			}
			set {
				if ((value != this._no)) {
					this.OnPropertyChanging("No", this._no);
					this._no = value;
					this.OnPropertyChanged("No");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CWDescription", Storage="_cWDescription", FieldType="Text")]
		public string CWDescription {
			get {
				return this._cWDescription;
			}
			set {
				if ((value != this._cWDescription)) {
					this.OnPropertyChanging("CWDescription", this._cWDescription);
					this._cWDescription = value;
					this.OnPropertyChanged("CWDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DecalredToCleared", Storage="_decalredToCleared", FieldType="Number")]
		public System.Nullable<double> DecalredToCleared {
			get {
				return this._decalredToCleared;
			}
			set {
				if ((value != this._decalredToCleared)) {
					this.OnPropertyChanging("DecalredToCleared", this._decalredToCleared);
					this._decalredToCleared = value;
					this.OnPropertyChanged("DecalredToCleared");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="QuantityAvailable", Storage="_quantityAvailable", FieldType="Number")]
		public System.Nullable<double> QuantityAvailable {
			get {
				return this._quantityAvailable;
			}
			set {
				if ((value != this._quantityAvailable)) {
					this.OnPropertyChanging("QuantityAvailable", this._quantityAvailable);
					this._quantityAvailable = value;
					this.OnPropertyChanged("QuantityAvailable");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PackageAvailable", Storage="_packageAvailable", FieldType="Number")]
		public System.Nullable<double> PackageAvailable {
			get {
				return this._packageAvailable;
			}
			set {
				if ((value != this._packageAvailable)) {
					this.OnPropertyChanging("PackageAvailable", this._packageAvailable);
					this._packageAvailable = value;
					this.OnPropertyChanged("PackageAvailable");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="QuantityToCleared", Storage="_quantityToCleared", FieldType="Number")]
		public System.Nullable<double> QuantityToCleared {
			get {
				return this._quantityToCleared;
			}
			set {
				if ((value != this._quantityToCleared)) {
					this.OnPropertyChanging("QuantityToCleared", this._quantityToCleared);
					this._quantityToCleared = value;
					this.OnPropertyChanged("QuantityToCleared");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PackageToCleared", Storage="_packageToCleared", FieldType="Number")]
		public System.Nullable<double> PackageToCleared {
			get {
				return this._packageToCleared;
			}
			set {
				if ((value != this._packageToCleared)) {
					this.OnPropertyChanging("PackageToCleared", this._packageToCleared);
					this._packageToCleared = value;
					this.OnPropertyChanged("PackageToCleared");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AddedToClearDeclared", Storage="_addedToClearDeclared", FieldType="Number")]
		public System.Nullable<double> AddedToClearDeclared {
			get {
				return this._addedToClearDeclared;
			}
			set {
				if ((value != this._addedToClearDeclared)) {
					this.OnPropertyChanging("AddedToClearDeclared", this._addedToClearDeclared);
					this._addedToClearDeclared = value;
					this.OnPropertyChanged("AddedToClearDeclared");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Procedure", Storage="_procedure", FieldType="Text")]
		public string Procedure {
			get {
				return this._procedure;
			}
			set {
				if ((value != this._procedure)) {
					this.OnPropertyChanging("Procedure", this._procedure);
					this._procedure = value;
					this.OnPropertyChanged("Procedure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DisposalsDeclaration2BatchIndex", Storage="_disposalsDeclaration2BatchIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Batch")]
		public Batch DisposalsDeclaration2BatchIndex {
			get {
				return this._disposalsDeclaration2BatchIndex.GetEntity();
			}
			set {
				this._disposalsDeclaration2BatchIndex.SetEntity(value);
			}
		}
		
		private void OnDisposalsDeclaration2BatchIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("DisposalsDeclaration2BatchIndex", this._disposalsDeclaration2BatchIndex.Clone());
		}
		
		private void OnDisposalsDeclaration2BatchIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("DisposalsDeclaration2BatchIndex");
		}
		
		private void OnDisposalsDeclaration2BatchIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.DisposalDeclaration.Add(this);
			}
			else {
				e.Item.DisposalDeclaration.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Dust List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Dust", Id="0x0100E2A6EE8469AA524286812782556DFFF0")]
	public partial class Dust : Element {
		
		private System.Nullable<double> _dustRatio;
		
		private System.Nullable<ProductType> _productType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Dust() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DustRatio", Storage="_dustRatio", FieldType="Number")]
		public System.Nullable<double> DustRatio {
			get {
				return this._dustRatio;
			}
			set {
				if ((value != this._dustRatio)) {
					this.OnPropertyChanging("DustRatio", this._dustRatio);
					this._dustRatio = value;
					this.OnPropertyChanged("DustRatio");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Dust.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Dust.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
	}
	
	/// <summary>
	/// Format List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Format", Id="0x01008229B51223914BB3B88F3ABDB737237B")]
	public partial class Format : Element {
		
		private string _cigaretteLenght;
		
		private string _filterLenght;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Format() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CigaretteLenght", Storage="_cigaretteLenght", Required=true, FieldType="Text")]
		public string CigaretteLenght {
			get {
				return this._cigaretteLenght;
			}
			set {
				if ((value != this._cigaretteLenght)) {
					this.OnPropertyChanging("CigaretteLenght", this._cigaretteLenght);
					this._cigaretteLenght = value;
					this.OnPropertyChanged("CigaretteLenght");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FilterLenght", Storage="_filterLenght", Required=true, FieldType="Text")]
		public string FilterLenght {
			get {
				return this._filterLenght;
			}
			set {
				if ((value != this._filterLenght)) {
					this.OnPropertyChanging("FilterLenght", this._filterLenght);
					this._filterLenght = value;
					this.OnPropertyChanged("FilterLenght");
				}
			}
		}
	}
	
	/// <summary>
	/// Invoice Content List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="InvoiceContent", Id="0x010082E2FD28F40C4269AC5C796F220F10C3")]
	public partial class InvoiceContent : Element {
		
		private string _sKUDescription;
		
		private System.Nullable<double> _quantity;
		
		private string _units;
		
		private System.Nullable<ProductType> _productType;
		
		private System.Nullable<InvoiceContentStatus> _invoiceContentStatus;
		
		private Microsoft.SharePoint.Linq.EntitySet<Disposal> _disposal;
		
		private Microsoft.SharePoint.Linq.EntityRef<InvoiceLib> _invoiceIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<Batch> _invoiceContent2BatchIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public InvoiceContent() {
			this._disposal = new Microsoft.SharePoint.Linq.EntitySet<Disposal>();
			this._disposal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal>>(this.OnDisposalSync);
			this._disposal.OnChanged += new System.EventHandler(this.OnDisposalChanged);
			this._disposal.OnChanging += new System.EventHandler(this.OnDisposalChanging);
			this._invoiceIndex = new Microsoft.SharePoint.Linq.EntityRef<InvoiceLib>();
			this._invoiceIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceLib>>(this.OnInvoiceIndexSync);
			this._invoiceIndex.OnChanged += new System.EventHandler(this.OnInvoiceIndexChanged);
			this._invoiceIndex.OnChanging += new System.EventHandler(this.OnInvoiceIndexChanging);
			this._invoiceContent2BatchIndex = new Microsoft.SharePoint.Linq.EntityRef<Batch>();
			this._invoiceContent2BatchIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnInvoiceContent2BatchIndexSync);
			this._invoiceContent2BatchIndex.OnChanged += new System.EventHandler(this.OnInvoiceContent2BatchIndexChanged);
			this._invoiceContent2BatchIndex.OnChanging += new System.EventHandler(this.OnInvoiceContent2BatchIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKUDescription", Storage="_sKUDescription", FieldType="Text")]
		public string SKUDescription {
			get {
				return this._sKUDescription;
			}
			set {
				if ((value != this._sKUDescription)) {
					this.OnPropertyChanging("SKUDescription", this._sKUDescription);
					this._sKUDescription = value;
					this.OnPropertyChanged("SKUDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Quantity", Storage="_quantity", FieldType="Number")]
		public System.Nullable<double> Quantity {
			get {
				return this._quantity;
			}
			set {
				if ((value != this._quantity)) {
					this.OnPropertyChanging("Quantity", this._quantity);
					this._quantity = value;
					this.OnPropertyChanged("Quantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceContentStatus", Storage="_invoiceContentStatus", FieldType="Choice")]
		public System.Nullable<InvoiceContentStatus> InvoiceContentStatus {
			get {
				return this._invoiceContentStatus;
			}
			set {
				if ((value != this._invoiceContentStatus)) {
					this.OnPropertyChanging("InvoiceContentStatus", this._invoiceContentStatus);
					this._invoiceContentStatus = value;
					this.OnPropertyChanged("InvoiceContentStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2InvoiceContentIndex", Storage="_disposal", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposal")]
		public Microsoft.SharePoint.Linq.EntitySet<Disposal> Disposal {
			get {
				return this._disposal;
			}
			set {
				this._disposal.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="InvoiceIndex", Storage="_invoiceIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Invoice Library")]
		public InvoiceLib InvoiceIndex {
			get {
				return this._invoiceIndex.GetEntity();
			}
			set {
				this._invoiceIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="InvoiceContent2BatchIndex", Storage="_invoiceContent2BatchIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Batch")]
		public Batch InvoiceContent2BatchIndex {
			get {
				return this._invoiceContent2BatchIndex.GetEntity();
			}
			set {
				this._invoiceContent2BatchIndex.SetEntity(value);
			}
		}
		
		private void OnDisposalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal", this._disposal.Clone());
		}
		
		private void OnDisposalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal");
		}
		
		private void OnDisposalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal2InvoiceContentIndex = this;
			}
			else {
				e.Item.Disposal2InvoiceContentIndex = null;
			}
		}
		
		private void OnInvoiceIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("InvoiceIndex", this._invoiceIndex.Clone());
		}
		
		private void OnInvoiceIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("InvoiceIndex");
		}
		
		private void OnInvoiceIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.InvoiceContent.Add(this);
			}
			else {
				e.Item.InvoiceContent.Remove(this);
			}
		}
		
		private void OnInvoiceContent2BatchIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("InvoiceContent2BatchIndex", this._invoiceContent2BatchIndex.Clone());
		}
		
		private void OnInvoiceContent2BatchIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("InvoiceContent2BatchIndex");
		}
		
		private void OnInvoiceContent2BatchIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.InvoiceContent.Add(this);
			}
			else {
				e.Item.InvoiceContent.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// IPR List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="IPR", Id="0x0100BB872D605E9F0F49B05D98D6A01655F8")]
	public partial class IPR : Element {
		
		private System.Nullable<System.DateTime> _validFromDate;
		
		private System.Nullable<System.DateTime> _validToDate;
		
		private System.Nullable<double> _productivityRateMin;
		
		private System.Nullable<double> _productivityRateMax;
		
		private System.Nullable<double> _consentPeriod;
		
		private string _documentNo;
		
		private System.Nullable<System.DateTime> _customsDebtDate;
		
		private System.Nullable<System.DateTime> _oGLValidTo;
		
		private string _tobaccoName;
		
		private string _grade;
		
		private string _sKU;
		
		private string _batch;
		
		private string _dutyName;
		
		private System.Nullable<double> _duty;
		
		private System.Nullable<double> _iPRDutyPerUnit;
		
		private string _vATName;
		
		private System.Nullable<double> _vAT;
		
		private System.Nullable<double> _iPRVATPerUnit;
		
		private System.Nullable<double> _netMass;
		
		private System.Nullable<double> _grossMass;
		
		private System.Nullable<double> _cartons;
		
		private string _invoiceNo;
		
		private System.Nullable<double> _value;
		
		private string _currency;
		
		private System.Nullable<double> _iPRUnitPrice;
		
		private System.Nullable<System.DateTime> _closingDate;
		
		private System.Nullable<double> _accountBalance;
		
		private System.Nullable<double> _tobaccoNotAllocated;
		
		private System.Nullable<bool> _accountClosed;
		
		private Microsoft.SharePoint.Linq.EntitySet<Disposal> _disposal;
		
		private Microsoft.SharePoint.Linq.EntityRef<Consent> _iPR2ConsentTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<PCNCode> _iPR2PCNPCN;
		
		private Microsoft.SharePoint.Linq.EntityRef<JSOXLib> _iPR2JSOXIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<Clearence> _clearenceIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<IPRLib> _iPRLibraryIndex;
		
		private Microsoft.SharePoint.Linq.EntitySet<BalanceIPR> _balanceIPR;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public IPR() {
			this._disposal = new Microsoft.SharePoint.Linq.EntitySet<Disposal>();
			this._disposal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal>>(this.OnDisposalSync);
			this._disposal.OnChanged += new System.EventHandler(this.OnDisposalChanged);
			this._disposal.OnChanging += new System.EventHandler(this.OnDisposalChanging);
			this._iPR2ConsentTitle = new Microsoft.SharePoint.Linq.EntityRef<Consent>();
			this._iPR2ConsentTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Consent>>(this.OnIPR2ConsentTitleSync);
			this._iPR2ConsentTitle.OnChanged += new System.EventHandler(this.OnIPR2ConsentTitleChanged);
			this._iPR2ConsentTitle.OnChanging += new System.EventHandler(this.OnIPR2ConsentTitleChanging);
			this._iPR2PCNPCN = new Microsoft.SharePoint.Linq.EntityRef<PCNCode>();
			this._iPR2PCNPCN.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode>>(this.OnIPR2PCNPCNSync);
			this._iPR2PCNPCN.OnChanged += new System.EventHandler(this.OnIPR2PCNPCNChanged);
			this._iPR2PCNPCN.OnChanging += new System.EventHandler(this.OnIPR2PCNPCNChanging);
			this._iPR2JSOXIndex = new Microsoft.SharePoint.Linq.EntityRef<JSOXLib>();
			this._iPR2JSOXIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXLib>>(this.OnIPR2JSOXIndexSync);
			this._iPR2JSOXIndex.OnChanged += new System.EventHandler(this.OnIPR2JSOXIndexChanged);
			this._iPR2JSOXIndex.OnChanging += new System.EventHandler(this.OnIPR2JSOXIndexChanging);
			this._clearenceIndex = new Microsoft.SharePoint.Linq.EntityRef<Clearence>();
			this._clearenceIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnClearenceIndexSync);
			this._clearenceIndex.OnChanged += new System.EventHandler(this.OnClearenceIndexChanged);
			this._clearenceIndex.OnChanging += new System.EventHandler(this.OnClearenceIndexChanging);
			this._iPRLibraryIndex = new Microsoft.SharePoint.Linq.EntityRef<IPRLib>();
			this._iPRLibraryIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPRLib>>(this.OnIPRLibraryIndexSync);
			this._iPRLibraryIndex.OnChanged += new System.EventHandler(this.OnIPRLibraryIndexChanged);
			this._iPRLibraryIndex.OnChanging += new System.EventHandler(this.OnIPRLibraryIndexChanging);
			this._balanceIPR = new Microsoft.SharePoint.Linq.EntitySet<BalanceIPR>();
			this._balanceIPR.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BalanceIPR>>(this.OnBalanceIPRSync);
			this._balanceIPR.OnChanged += new System.EventHandler(this.OnBalanceIPRChanged);
			this._balanceIPR.OnChanging += new System.EventHandler(this.OnBalanceIPRChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValidFromDate", Storage="_validFromDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ValidFromDate {
			get {
				return this._validFromDate;
			}
			set {
				if ((value != this._validFromDate)) {
					this.OnPropertyChanging("ValidFromDate", this._validFromDate);
					this._validFromDate = value;
					this.OnPropertyChanged("ValidFromDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValidToDate", Storage="_validToDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ValidToDate {
			get {
				return this._validToDate;
			}
			set {
				if ((value != this._validToDate)) {
					this.OnPropertyChanging("ValidToDate", this._validToDate);
					this._validToDate = value;
					this.OnPropertyChanged("ValidToDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductivityRateMin", Storage="_productivityRateMin", FieldType="Number")]
		public System.Nullable<double> ProductivityRateMin {
			get {
				return this._productivityRateMin;
			}
			set {
				if ((value != this._productivityRateMin)) {
					this.OnPropertyChanging("ProductivityRateMin", this._productivityRateMin);
					this._productivityRateMin = value;
					this.OnPropertyChanged("ProductivityRateMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductivityRateMax", Storage="_productivityRateMax", FieldType="Number")]
		public System.Nullable<double> ProductivityRateMax {
			get {
				return this._productivityRateMax;
			}
			set {
				if ((value != this._productivityRateMax)) {
					this.OnPropertyChanging("ProductivityRateMax", this._productivityRateMax);
					this._productivityRateMax = value;
					this.OnPropertyChanged("ProductivityRateMax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ConsentPeriod", Storage="_consentPeriod", FieldType="Number")]
		public System.Nullable<double> ConsentPeriod {
			get {
				return this._consentPeriod;
			}
			set {
				if ((value != this._consentPeriod)) {
					this.OnPropertyChanging("ConsentPeriod", this._consentPeriod);
					this._consentPeriod = value;
					this.OnPropertyChanged("ConsentPeriod");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNo", Storage="_documentNo", FieldType="Text")]
		public string DocumentNo {
			get {
				return this._documentNo;
			}
			set {
				if ((value != this._documentNo)) {
					this.OnPropertyChanging("DocumentNo", this._documentNo);
					this._documentNo = value;
					this.OnPropertyChanged("DocumentNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsDebtDate", Storage="_customsDebtDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CustomsDebtDate {
			get {
				return this._customsDebtDate;
			}
			set {
				if ((value != this._customsDebtDate)) {
					this.OnPropertyChanging("CustomsDebtDate", this._customsDebtDate);
					this._customsDebtDate = value;
					this.OnPropertyChanged("CustomsDebtDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OGLValidTo", Storage="_oGLValidTo", FieldType="DateTime")]
		public System.Nullable<System.DateTime> OGLValidTo {
			get {
				return this._oGLValidTo;
			}
			set {
				if ((value != this._oGLValidTo)) {
					this.OnPropertyChanging("OGLValidTo", this._oGLValidTo);
					this._oGLValidTo = value;
					this.OnPropertyChanged("OGLValidTo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoName", Storage="_tobaccoName", FieldType="Text")]
		public string TobaccoName {
			get {
				return this._tobaccoName;
			}
			set {
				if ((value != this._tobaccoName)) {
					this.OnPropertyChanging("TobaccoName", this._tobaccoName);
					this._tobaccoName = value;
					this.OnPropertyChanged("TobaccoName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Grade", Storage="_grade", FieldType="Text")]
		public string Grade {
			get {
				return this._grade;
			}
			set {
				if ((value != this._grade)) {
					this.OnPropertyChanging("Grade", this._grade);
					this._grade = value;
					this.OnPropertyChanged("Grade");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyName", Storage="_dutyName", FieldType="Text")]
		public string DutyName {
			get {
				return this._dutyName;
			}
			set {
				if ((value != this._dutyName)) {
					this.OnPropertyChanging("DutyName", this._dutyName);
					this._dutyName = value;
					this.OnPropertyChanged("DutyName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Duty", Storage="_duty", FieldType="Number")]
		public System.Nullable<double> Duty {
			get {
				return this._duty;
			}
			set {
				if ((value != this._duty)) {
					this.OnPropertyChanging("Duty", this._duty);
					this._duty = value;
					this.OnPropertyChanged("Duty");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRDutyPerUnit", Storage="_iPRDutyPerUnit", FieldType="Number")]
		public System.Nullable<double> IPRDutyPerUnit {
			get {
				return this._iPRDutyPerUnit;
			}
			set {
				if ((value != this._iPRDutyPerUnit)) {
					this.OnPropertyChanging("IPRDutyPerUnit", this._iPRDutyPerUnit);
					this._iPRDutyPerUnit = value;
					this.OnPropertyChanged("IPRDutyPerUnit");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VATName", Storage="_vATName", FieldType="Text")]
		public string VATName {
			get {
				return this._vATName;
			}
			set {
				if ((value != this._vATName)) {
					this.OnPropertyChanging("VATName", this._vATName);
					this._vATName = value;
					this.OnPropertyChanged("VATName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VAT", Storage="_vAT", FieldType="Number")]
		public System.Nullable<double> VAT {
			get {
				return this._vAT;
			}
			set {
				if ((value != this._vAT)) {
					this.OnPropertyChanging("VAT", this._vAT);
					this._vAT = value;
					this.OnPropertyChanged("VAT");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRVATPerUnit", Storage="_iPRVATPerUnit", FieldType="Number")]
		public System.Nullable<double> IPRVATPerUnit {
			get {
				return this._iPRVATPerUnit;
			}
			set {
				if ((value != this._iPRVATPerUnit)) {
					this.OnPropertyChanging("IPRVATPerUnit", this._iPRVATPerUnit);
					this._iPRVATPerUnit = value;
					this.OnPropertyChanged("IPRVATPerUnit");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NetMass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GrossMass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Cartons", Storage="_cartons", FieldType="Number")]
		public System.Nullable<double> Cartons {
			get {
				return this._cartons;
			}
			set {
				if ((value != this._cartons)) {
					this.OnPropertyChanging("Cartons", this._cartons);
					this._cartons = value;
					this.OnPropertyChanged("Cartons");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceNo", Storage="_invoiceNo", FieldType="Text")]
		public string InvoiceNo {
			get {
				return this._invoiceNo;
			}
			set {
				if ((value != this._invoiceNo)) {
					this.OnPropertyChanging("InvoiceNo", this._invoiceNo);
					this._invoiceNo = value;
					this.OnPropertyChanged("InvoiceNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Value", Storage="_value", FieldType="Number")]
		public System.Nullable<double> Value {
			get {
				return this._value;
			}
			set {
				if ((value != this._value)) {
					this.OnPropertyChanging("Value", this._value);
					this._value = value;
					this.OnPropertyChanged("Value");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Currency", Storage="_currency", FieldType="Text")]
		public string Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRUnitPrice", Storage="_iPRUnitPrice", FieldType="Number")]
		public System.Nullable<double> IPRUnitPrice {
			get {
				return this._iPRUnitPrice;
			}
			set {
				if ((value != this._iPRUnitPrice)) {
					this.OnPropertyChanging("IPRUnitPrice", this._iPRUnitPrice);
					this._iPRUnitPrice = value;
					this.OnPropertyChanged("IPRUnitPrice");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ClosingDate", Storage="_closingDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ClosingDate {
			get {
				return this._closingDate;
			}
			set {
				if ((value != this._closingDate)) {
					this.OnPropertyChanging("ClosingDate", this._closingDate);
					this._closingDate = value;
					this.OnPropertyChanged("ClosingDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AccountBalance", Storage="_accountBalance", Required=true, FieldType="Number")]
		public System.Nullable<double> AccountBalance {
			get {
				return this._accountBalance;
			}
			set {
				if ((value != this._accountBalance)) {
					this.OnPropertyChanging("AccountBalance", this._accountBalance);
					this._accountBalance = value;
					this.OnPropertyChanged("AccountBalance");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoNotAllocated", Storage="_tobaccoNotAllocated", FieldType="Number")]
		public System.Nullable<double> TobaccoNotAllocated {
			get {
				return this._tobaccoNotAllocated;
			}
			set {
				if ((value != this._tobaccoNotAllocated)) {
					this.OnPropertyChanging("TobaccoNotAllocated", this._tobaccoNotAllocated);
					this._tobaccoNotAllocated = value;
					this.OnPropertyChanged("TobaccoNotAllocated");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AccountClosed", Storage="_accountClosed", Required=true, FieldType="Boolean")]
		public System.Nullable<bool> AccountClosed {
			get {
				return this._accountClosed;
			}
			set {
				if ((value != this._accountClosed)) {
					this.OnPropertyChanging("AccountClosed", this._accountClosed);
					this._accountClosed = value;
					this.OnPropertyChanged("AccountClosed");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2IPRIndex", Storage="_disposal", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposal")]
		public Microsoft.SharePoint.Linq.EntitySet<Disposal> Disposal {
			get {
				return this._disposal;
			}
			set {
				this._disposal.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPR2ConsentTitle", Storage="_iPR2ConsentTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Consent")]
		public Consent IPR2ConsentTitle {
			get {
				return this._iPR2ConsentTitle.GetEntity();
			}
			set {
				this._iPR2ConsentTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPR2PCNPCN", Storage="_iPR2PCNPCN", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="PCN Code")]
		public PCNCode IPR2PCNPCN {
			get {
				return this._iPR2PCNPCN.GetEntity();
			}
			set {
				this._iPR2PCNPCN.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPR2JSOXIndex", Storage="_iPR2JSOXIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JSOX Library")]
		public JSOXLib IPR2JSOXIndex {
			get {
				return this._iPR2JSOXIndex.GetEntity();
			}
			set {
				this._iPR2JSOXIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ClearenceIndex", Storage="_clearenceIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Clearence")]
		public Clearence ClearenceIndex {
			get {
				return this._clearenceIndex.GetEntity();
			}
			set {
				this._clearenceIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPRLibraryIndex", Storage="_iPRLibraryIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="IPR Library")]
		public IPRLib IPRLibraryIndex {
			get {
				return this._iPRLibraryIndex.GetEntity();
			}
			set {
				this._iPRLibraryIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPRIndex", Storage="_balanceIPR", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Balance IPR")]
		public Microsoft.SharePoint.Linq.EntitySet<BalanceIPR> BalanceIPR {
			get {
				return this._balanceIPR;
			}
			set {
				this._balanceIPR.Assign(value);
			}
		}
		
		private void OnDisposalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal", this._disposal.Clone());
		}
		
		private void OnDisposalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal");
		}
		
		private void OnDisposalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal2IPRIndex = this;
			}
			else {
				e.Item.Disposal2IPRIndex = null;
			}
		}
		
		private void OnIPR2ConsentTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPR2ConsentTitle", this._iPR2ConsentTitle.Clone());
		}
		
		private void OnIPR2ConsentTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPR2ConsentTitle");
		}
		
		private void OnIPR2ConsentTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Consent> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPR.Add(this);
			}
			else {
				e.Item.IPR.Remove(this);
			}
		}
		
		private void OnIPR2PCNPCNChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPR2PCNPCN", this._iPR2PCNPCN.Clone());
		}
		
		private void OnIPR2PCNPCNChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPR2PCNPCN");
		}
		
		private void OnIPR2PCNPCNSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPR.Add(this);
			}
			else {
				e.Item.IPR.Remove(this);
			}
		}
		
		private void OnIPR2JSOXIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPR2JSOXIndex", this._iPR2JSOXIndex.Clone());
		}
		
		private void OnIPR2JSOXIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPR2JSOXIndex");
		}
		
		private void OnIPR2JSOXIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPR.Add(this);
			}
			else {
				e.Item.IPR.Remove(this);
			}
		}
		
		private void OnClearenceIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ClearenceIndex", this._clearenceIndex.Clone());
		}
		
		private void OnClearenceIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ClearenceIndex");
		}
		
		private void OnClearenceIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
		}
		
		private void OnIPRLibraryIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPRLibraryIndex", this._iPRLibraryIndex.Clone());
		}
		
		private void OnIPRLibraryIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPRLibraryIndex");
		}
		
		private void OnIPRLibraryIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPRLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPR.Add(this);
			}
			else {
				e.Item.IPR.Remove(this);
			}
		}
		
		private void OnBalanceIPRChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BalanceIPR", this._balanceIPR.Clone());
		}
		
		private void OnBalanceIPRChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BalanceIPR");
		}
		
		private void OnBalanceIPRSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BalanceIPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPRIndex = this;
			}
			else {
				e.Item.IPRIndex = null;
			}
		}
	}
	
	/// <summary>
	/// JSOX Customs Summary List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="JSOXCustomsSummary", Id="0x0100C94F6A12898E497EAE5EFEFDC240C3F4")]
	public partial class JSOXCustomsSummary : Element {
		
		private string _exportOrFreeCirculationSAD;
		
		private System.Nullable<System.DateTime> _sADDate;
		
		private string _invoiceNo;
		
		private string _introducingSADNo;
		
		private System.Nullable<System.DateTime> _introducingSADDate;
		
		private string _compensationGood;
		
		private System.Nullable<double> _totalAmount;
		
		private System.Nullable<double> _remainingQuantity;
		
		private string _customsProcedure;
		
		private Microsoft.SharePoint.Linq.EntitySet<Disposal> _disposal;
		
		private Microsoft.SharePoint.Linq.EntityRef<JSOXLib> _jSOXCustomsSummary2JSOXIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public JSOXCustomsSummary() {
			this._disposal = new Microsoft.SharePoint.Linq.EntitySet<Disposal>();
			this._disposal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal>>(this.OnDisposalSync);
			this._disposal.OnChanged += new System.EventHandler(this.OnDisposalChanged);
			this._disposal.OnChanging += new System.EventHandler(this.OnDisposalChanging);
			this._jSOXCustomsSummary2JSOXIndex = new Microsoft.SharePoint.Linq.EntityRef<JSOXLib>();
			this._jSOXCustomsSummary2JSOXIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXLib>>(this.OnJSOXCustomsSummary2JSOXIndexSync);
			this._jSOXCustomsSummary2JSOXIndex.OnChanged += new System.EventHandler(this.OnJSOXCustomsSummary2JSOXIndexChanged);
			this._jSOXCustomsSummary2JSOXIndex.OnChanging += new System.EventHandler(this.OnJSOXCustomsSummary2JSOXIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExportOrFreeCirculationSAD", Storage="_exportOrFreeCirculationSAD", FieldType="Text")]
		public string ExportOrFreeCirculationSAD {
			get {
				return this._exportOrFreeCirculationSAD;
			}
			set {
				if ((value != this._exportOrFreeCirculationSAD)) {
					this.OnPropertyChanging("ExportOrFreeCirculationSAD", this._exportOrFreeCirculationSAD);
					this._exportOrFreeCirculationSAD = value;
					this.OnPropertyChanged("ExportOrFreeCirculationSAD");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDate", Storage="_sADDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> SADDate {
			get {
				return this._sADDate;
			}
			set {
				if ((value != this._sADDate)) {
					this.OnPropertyChanging("SADDate", this._sADDate);
					this._sADDate = value;
					this.OnPropertyChanged("SADDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceNo", Storage="_invoiceNo", FieldType="Text")]
		public string InvoiceNo {
			get {
				return this._invoiceNo;
			}
			set {
				if ((value != this._invoiceNo)) {
					this.OnPropertyChanging("InvoiceNo", this._invoiceNo);
					this._invoiceNo = value;
					this.OnPropertyChanged("InvoiceNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IntroducingSADNo", Storage="_introducingSADNo", FieldType="Text")]
		public string IntroducingSADNo {
			get {
				return this._introducingSADNo;
			}
			set {
				if ((value != this._introducingSADNo)) {
					this.OnPropertyChanging("IntroducingSADNo", this._introducingSADNo);
					this._introducingSADNo = value;
					this.OnPropertyChanged("IntroducingSADNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IntroducingSADDate", Storage="_introducingSADDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> IntroducingSADDate {
			get {
				return this._introducingSADDate;
			}
			set {
				if ((value != this._introducingSADDate)) {
					this.OnPropertyChanging("IntroducingSADDate", this._introducingSADDate);
					this._introducingSADDate = value;
					this.OnPropertyChanged("IntroducingSADDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompensationGood", Storage="_compensationGood", FieldType="Text")]
		public string CompensationGood {
			get {
				return this._compensationGood;
			}
			set {
				if ((value != this._compensationGood)) {
					this.OnPropertyChanging("CompensationGood", this._compensationGood);
					this._compensationGood = value;
					this.OnPropertyChanged("CompensationGood");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TotalAmount", Storage="_totalAmount", FieldType="Number")]
		public System.Nullable<double> TotalAmount {
			get {
				return this._totalAmount;
			}
			set {
				if ((value != this._totalAmount)) {
					this.OnPropertyChanging("TotalAmount", this._totalAmount);
					this._totalAmount = value;
					this.OnPropertyChanged("TotalAmount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RemainingQuantity", Storage="_remainingQuantity", FieldType="Number")]
		public System.Nullable<double> RemainingQuantity {
			get {
				return this._remainingQuantity;
			}
			set {
				if ((value != this._remainingQuantity)) {
					this.OnPropertyChanging("RemainingQuantity", this._remainingQuantity);
					this._remainingQuantity = value;
					this.OnPropertyChanged("RemainingQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsProcedure", Storage="_customsProcedure", FieldType="Text")]
		public string CustomsProcedure {
			get {
				return this._customsProcedure;
			}
			set {
				if ((value != this._customsProcedure)) {
					this.OnPropertyChanging("CustomsProcedure", this._customsProcedure);
					this._customsProcedure = value;
					this.OnPropertyChanged("CustomsProcedure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="JSOXCustomsSummaryIndex", Storage="_disposal", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposal")]
		public Microsoft.SharePoint.Linq.EntitySet<Disposal> Disposal {
			get {
				return this._disposal;
			}
			set {
				this._disposal.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="JSOXCustomsSummary2JSOXIndex", Storage="_jSOXCustomsSummary2JSOXIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JSOX Library")]
		public JSOXLib JSOXCustomsSummary2JSOXIndex {
			get {
				return this._jSOXCustomsSummary2JSOXIndex.GetEntity();
			}
			set {
				this._jSOXCustomsSummary2JSOXIndex.SetEntity(value);
			}
		}
		
		private void OnDisposalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal", this._disposal.Clone());
		}
		
		private void OnDisposalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal");
		}
		
		private void OnDisposalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.JSOXCustomsSummaryIndex = this;
			}
			else {
				e.Item.JSOXCustomsSummaryIndex = null;
			}
		}
		
		private void OnJSOXCustomsSummary2JSOXIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("JSOXCustomsSummary2JSOXIndex", this._jSOXCustomsSummary2JSOXIndex.Clone());
		}
		
		private void OnJSOXCustomsSummary2JSOXIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("JSOXCustomsSummary2JSOXIndex");
		}
		
		private void OnJSOXCustomsSummary2JSOXIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.JSOXCustomsSummary.Add(this);
			}
			else {
				e.Item.JSOXCustomsSummary.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Material List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Material", Id="0x01004D0C63D616EA814E8B077CF59ADDB12B")]
	public partial class Material : Element {
		
		private string _sKUDescription;
		
		private string _sKU;
		
		private string _batch;
		
		private string _productID;
		
		private string _storLoc;
		
		private System.Nullable<double> _fGQuantity;
		
		private System.Nullable<double> _tobaccoQuantity;
		
		private string _units;
		
		private System.Nullable<double> _overuse;
		
		private System.Nullable<double> _dust;
		
		private System.Nullable<double> _waste;
		
		private System.Nullable<double> _tobacco;
		
		private System.Nullable<double> _sHMenthol;
		
		private System.Nullable<ProductType> _productType;
		
		private Microsoft.SharePoint.Linq.EntitySet<Disposal> _disposal;
		
		private Microsoft.SharePoint.Linq.EntityRef<Batch> _material2BatchIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Material() {
			this._disposal = new Microsoft.SharePoint.Linq.EntitySet<Disposal>();
			this._disposal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal>>(this.OnDisposalSync);
			this._disposal.OnChanged += new System.EventHandler(this.OnDisposalChanged);
			this._disposal.OnChanging += new System.EventHandler(this.OnDisposalChanging);
			this._material2BatchIndex = new Microsoft.SharePoint.Linq.EntityRef<Batch>();
			this._material2BatchIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnMaterial2BatchIndexSync);
			this._material2BatchIndex.OnChanged += new System.EventHandler(this.OnMaterial2BatchIndexChanged);
			this._material2BatchIndex.OnChanging += new System.EventHandler(this.OnMaterial2BatchIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKUDescription", Storage="_sKUDescription", FieldType="Text")]
		public string SKUDescription {
			get {
				return this._sKUDescription;
			}
			set {
				if ((value != this._sKUDescription)) {
					this.OnPropertyChanging("SKUDescription", this._sKUDescription);
					this._sKUDescription = value;
					this.OnPropertyChanged("SKUDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductID", Storage="_productID", FieldType="Text")]
		public string ProductID {
			get {
				return this._productID;
			}
			set {
				if ((value != this._productID)) {
					this.OnPropertyChanging("ProductID", this._productID);
					this._productID = value;
					this.OnPropertyChanged("ProductID");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StorLoc", Storage="_storLoc", FieldType="Text")]
		public string StorLoc {
			get {
				return this._storLoc;
			}
			set {
				if ((value != this._storLoc)) {
					this.OnPropertyChanging("StorLoc", this._storLoc);
					this._storLoc = value;
					this.OnPropertyChanged("StorLoc");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FGQuantity", Storage="_fGQuantity", FieldType="Number")]
		public System.Nullable<double> FGQuantity {
			get {
				return this._fGQuantity;
			}
			set {
				if ((value != this._fGQuantity)) {
					this.OnPropertyChanging("FGQuantity", this._fGQuantity);
					this._fGQuantity = value;
					this.OnPropertyChanged("FGQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoQuantity", Storage="_tobaccoQuantity", FieldType="Number")]
		public System.Nullable<double> TobaccoQuantity {
			get {
				return this._tobaccoQuantity;
			}
			set {
				if ((value != this._tobaccoQuantity)) {
					this.OnPropertyChanging("TobaccoQuantity", this._tobaccoQuantity);
					this._tobaccoQuantity = value;
					this.OnPropertyChanged("TobaccoQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Overuse", Storage="_overuse", FieldType="Number")]
		public System.Nullable<double> Overuse {
			get {
				return this._overuse;
			}
			set {
				if ((value != this._overuse)) {
					this.OnPropertyChanging("Overuse", this._overuse);
					this._overuse = value;
					this.OnPropertyChanged("Overuse");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous-kolumna'overuse')*xls/Dictionaries/dust
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dust", Storage="_dust", FieldType="Number")]
		public System.Nullable<double> Dust {
			get {
				return this._dust;
			}
			set {
				if ((value != this._dust)) {
					this.OnPropertyChanging("Dust", this._dust);
					this._dust = value;
					this.OnPropertyChanged("Dust");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous-kolumna'overuse')*xls/Dictionaries/waste
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Waste", Storage="_waste", FieldType="Number")]
		public System.Nullable<double> Waste {
			get {
				return this._waste;
			}
			set {
				if ((value != this._waste)) {
					this.OnPropertyChanging("Waste", this._waste);
					this._waste = value;
					this.OnPropertyChanged("Waste");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous)-kolumna'overuse'-kolumna'dust'-kolumna'waste'-kolumna'shmenthol'
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Tobacco", Storage="_tobacco", FieldType="Number")]
		public System.Nullable<double> Tobacco {
			get {
				return this._tobacco;
			}
			set {
				if ((value != this._tobacco)) {
					this.OnPropertyChanging("Tobacco", this._tobacco);
					this._tobacco = value;
					this.OnPropertyChanged("Tobacco");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous-kolumna'overuse')*xls/Dictionaries/SHMenthol
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHMenthol", Storage="_sHMenthol", FieldType="Number")]
		public System.Nullable<double> SHMenthol {
			get {
				return this._sHMenthol;
			}
			set {
				if ((value != this._sHMenthol)) {
					this.OnPropertyChanging("SHMenthol", this._sHMenthol);
					this._sHMenthol = value;
					this.OnPropertyChanged("SHMenthol");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2MaterialIndex", Storage="_disposal", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposal")]
		public Microsoft.SharePoint.Linq.EntitySet<Disposal> Disposal {
			get {
				return this._disposal;
			}
			set {
				this._disposal.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Material2BatchIndex", Storage="_material2BatchIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Batch")]
		public Batch Material2BatchIndex {
			get {
				return this._material2BatchIndex.GetEntity();
			}
			set {
				this._material2BatchIndex.SetEntity(value);
			}
		}
		
		private void OnDisposalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal", this._disposal.Clone());
		}
		
		private void OnDisposalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal");
		}
		
		private void OnDisposalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal2MaterialIndex = this;
			}
			else {
				e.Item.Disposal2MaterialIndex = null;
			}
		}
		
		private void OnMaterial2BatchIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Material2BatchIndex", this._material2BatchIndex.Clone());
		}
		
		private void OnMaterial2BatchIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Material2BatchIndex");
		}
		
		private void OnMaterial2BatchIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Material.Add(this);
			}
			else {
				e.Item.Material.Remove(this);
			}
		}


  }
	
	/// <summary>
	/// PCN Code List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="PCNCode", Id="0x01002E9F09B06ACF47F7ADA76C12453C7AF7")]
	public partial class PCNCode : Element {
		
		private string _productCodeNumber;
		
		private string _compensationGood;
		
		private System.Nullable<bool> _disposal;
		
		private Microsoft.SharePoint.Linq.EntitySet<Disposal> _disposal0;
		
		private Microsoft.SharePoint.Linq.EntitySet<IPR> _iPR;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PCNCode() {
			this._disposal0 = new Microsoft.SharePoint.Linq.EntitySet<Disposal>();
			this._disposal0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal>>(this.OnDisposal0Sync);
			this._disposal0.OnChanged += new System.EventHandler(this.OnDisposal0Changed);
			this._disposal0.OnChanging += new System.EventHandler(this.OnDisposal0Changing);
			this._iPR = new Microsoft.SharePoint.Linq.EntitySet<IPR>();
			this._iPR.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR>>(this.OnIPRSync);
			this._iPR.OnChanged += new System.EventHandler(this.OnIPRChanged);
			this._iPR.OnChanging += new System.EventHandler(this.OnIPRChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductCodeNumber", Storage="_productCodeNumber", FieldType="Text")]
		public string ProductCodeNumber {
			get {
				return this._productCodeNumber;
			}
			set {
				if ((value != this._productCodeNumber)) {
					this.OnPropertyChanging("ProductCodeNumber", this._productCodeNumber);
					this._productCodeNumber = value;
					this.OnPropertyChanged("ProductCodeNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompensationGood", Storage="_compensationGood", FieldType="Text")]
		public string CompensationGood {
			get {
				return this._compensationGood;
			}
			set {
				if ((value != this._compensationGood)) {
					this.OnPropertyChanging("CompensationGood", this._compensationGood);
					this._compensationGood = value;
					this.OnPropertyChanged("CompensationGood");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Disposal", Storage="_disposal", FieldType="Boolean")]
		public System.Nullable<bool> Disposal {
			get {
				return this._disposal;
			}
			set {
				if ((value != this._disposal)) {
					this.OnPropertyChanging("Disposal", this._disposal);
					this._disposal = value;
					this.OnPropertyChanged("Disposal");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2PCNID", Storage="_disposal0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposal")]
		public Microsoft.SharePoint.Linq.EntitySet<Disposal> Disposal0 {
			get {
				return this._disposal0;
			}
			set {
				this._disposal0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPR2PCNPCN", Storage="_iPR", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="IPR")]
		public Microsoft.SharePoint.Linq.EntitySet<IPR> IPR {
			get {
				return this._iPR;
			}
			set {
				this._iPR.Assign(value);
			}
		}
		
		private void OnDisposal0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal0", this._disposal0.Clone());
		}
		
		private void OnDisposal0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal0");
		}
		
		private void OnDisposal0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal2PCNID = this;
			}
			else {
				e.Item.Disposal2PCNID = null;
			}
		}
		
		private void OnIPRChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPR", this._iPR.Clone());
		}
		
		private void OnIPRChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPR");
		}
		
		private void OnIPRSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPR2PCNPCN = this;
			}
			else {
				e.Item.IPR2PCNPCN = null;
			}
		}
	}
	
	/// <summary>
	/// SAD Document Type List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADDocumentType", Id="0x0100844099FC49B54D30A1516EA17A6883FC")]
	public partial class SADDocumentType : Element {
		
		private string _referenceNumber;
		
		private System.Nullable<System.DateTime> _customsDebtDate;
		
		private string _documentNumber;
		
		private string _currency;
		
		private System.Nullable<double> _exchangeRate;
		
		private System.Nullable<double> _grossMass;
		
		private System.Nullable<double> _netMass;
		
		private string _systemID;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADDocumentLib> _sADDocumenLibrarytIndex;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADGood> _sADGood;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADDocumentType() {
			this._sADDocumenLibrarytIndex = new Microsoft.SharePoint.Linq.EntityRef<SADDocumentLib>();
			this._sADDocumenLibrarytIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentLib>>(this.OnSADDocumenLibrarytIndexSync);
			this._sADDocumenLibrarytIndex.OnChanged += new System.EventHandler(this.OnSADDocumenLibrarytIndexChanged);
			this._sADDocumenLibrarytIndex.OnChanging += new System.EventHandler(this.OnSADDocumenLibrarytIndexChanging);
			this._sADGood = new Microsoft.SharePoint.Linq.EntitySet<SADGood>();
			this._sADGood.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodSync);
			this._sADGood.OnChanged += new System.EventHandler(this.OnSADGoodChanged);
			this._sADGood.OnChanging += new System.EventHandler(this.OnSADGoodChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// SAD Document Reference Number - box 7.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReferenceNumber", Storage="_referenceNumber", FieldType="Text")]
		public string ReferenceNumber {
			get {
				return this._referenceNumber;
			}
			set {
				if ((value != this._referenceNumber)) {
					this.OnPropertyChanging("ReferenceNumber", this._referenceNumber);
					this._referenceNumber = value;
					this.OnPropertyChanged("ReferenceNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsDebtDate", Storage="_customsDebtDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CustomsDebtDate {
			get {
				return this._customsDebtDate;
			}
			set {
				if ((value != this._customsDebtDate)) {
					this.OnPropertyChanging("CustomsDebtDate", this._customsDebtDate);
					this._customsDebtDate = value;
					this.OnPropertyChanged("CustomsDebtDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNumber", Storage="_documentNumber", FieldType="Text")]
		public string DocumentNumber {
			get {
				return this._documentNumber;
			}
			set {
				if ((value != this._documentNumber)) {
					this.OnPropertyChanging("DocumentNumber", this._documentNumber);
					this._documentNumber = value;
					this.OnPropertyChanged("DocumentNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Currency", Storage="_currency", FieldType="Text")]
		public string Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExchangeRate", Storage="_exchangeRate", FieldType="Number")]
		public System.Nullable<double> ExchangeRate {
			get {
				return this._exchangeRate;
			}
			set {
				if ((value != this._exchangeRate)) {
					this.OnPropertyChanging("ExchangeRate", this._exchangeRate);
					this._exchangeRate = value;
					this.OnPropertyChanged("ExchangeRate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GrossMass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NetMass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SystemID", Storage="_systemID", FieldType="Text")]
		public string SystemID {
			get {
				return this._systemID;
			}
			set {
				if ((value != this._systemID)) {
					this.OnPropertyChanging("SystemID", this._systemID);
					this._systemID = value;
					this.OnPropertyChanged("SystemID");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumenLibrarytIndex", Storage="_sADDocumenLibrarytIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Document Library")]
		public SADDocumentLib SADDocumenLibrarytIndex {
			get {
				return this._sADDocumenLibrarytIndex.GetEntity();
			}
			set {
				this._sADDocumenLibrarytIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumentIndex", Storage="_sADGood", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Good")]
		public Microsoft.SharePoint.Linq.EntitySet<SADGood> SADGood {
			get {
				return this._sADGood;
			}
			set {
				this._sADGood.Assign(value);
			}
		}
		
		private void OnSADDocumenLibrarytIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDocumenLibrarytIndex", this._sADDocumenLibrarytIndex.Clone());
		}
		
		private void OnSADDocumenLibrarytIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDocumenLibrarytIndex");
		}
		
		private void OnSADDocumenLibrarytIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDocumentType.Add(this);
			}
			else {
				e.Item.SADDocumentType.Remove(this);
			}
		}
		
		private void OnSADGoodChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGood", this._sADGood.Clone());
		}
		
		private void OnSADGoodChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGood");
		}
		
		private void OnSADGoodSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDocumentIndex = this;
			}
			else {
				e.Item.SADDocumentIndex = null;
			}
		}
	}
	
	/// <summary>
	/// SAD Duties List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADDuties", Id="0x0100307F2A8F2886D24FBF3393F84E0E616B")]
	public partial class SADDuties : Element {
		
		private string _dutyType;
		
		private System.Nullable<double> _amount;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADDuties2SADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADDuties() {
			this._sADDuties2SADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADDuties2SADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADDuties2SADGoodIDSync);
			this._sADDuties2SADGoodID.OnChanged += new System.EventHandler(this.OnSADDuties2SADGoodIDChanged);
			this._sADDuties2SADGoodID.OnChanging += new System.EventHandler(this.OnSADDuties2SADGoodIDChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyType", Storage="_dutyType", FieldType="Text")]
		public string DutyType {
			get {
				return this._dutyType;
			}
			set {
				if ((value != this._dutyType)) {
					this.OnPropertyChanging("DutyType", this._dutyType);
					this._dutyType = value;
					this.OnPropertyChanged("DutyType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Amount", Storage="_amount", FieldType="Number")]
		public System.Nullable<double> Amount {
			get {
				return this._amount;
			}
			set {
				if ((value != this._amount)) {
					this.OnPropertyChanging("Amount", this._amount);
					this._amount = value;
					this.OnPropertyChanged("Amount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDuties2SADGoodID", Storage="_sADDuties2SADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADDuties2SADGoodID {
			get {
				return this._sADDuties2SADGoodID.GetEntity();
			}
			set {
				this._sADDuties2SADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADDuties2SADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDuties2SADGoodID", this._sADDuties2SADGoodID.Clone());
		}
		
		private void OnSADDuties2SADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDuties2SADGoodID");
		}
		
		private void OnSADDuties2SADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDuties.Add(this);
			}
			else {
				e.Item.SADDuties.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// SAD Good List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADGood", Id="0x01003016924817E4AF4A9AD790284C0BAE65")]
	public partial class SADGood : Element {
		
		private System.Nullable<double> _itemNo;
		
		private string _goodsDescription;
		
		private string _pCNTariffCode;
		
		private System.Nullable<double> _grossMass;
		
		private string _procedure;
		
		private System.Nullable<double> _totalAmountInvoiced;
		
		private System.Nullable<double> _netMass;
		
		private Microsoft.SharePoint.Linq.EntitySet<Clearence> _clearence;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADDuties> _sADDuties;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADDocumentType> _sADDocumentIndex;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADPackage> _sADPackage;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADQuantity> _sADQuantity;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADRequiredDocuments> _sADRequiredDocuments;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADGood() {
			this._clearence = new Microsoft.SharePoint.Linq.EntitySet<Clearence>();
			this._clearence.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnClearenceSync);
			this._clearence.OnChanged += new System.EventHandler(this.OnClearenceChanged);
			this._clearence.OnChanging += new System.EventHandler(this.OnClearenceChanging);
			this._sADDuties = new Microsoft.SharePoint.Linq.EntitySet<SADDuties>();
			this._sADDuties.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDuties>>(this.OnSADDutiesSync);
			this._sADDuties.OnChanged += new System.EventHandler(this.OnSADDutiesChanged);
			this._sADDuties.OnChanging += new System.EventHandler(this.OnSADDutiesChanging);
			this._sADDocumentIndex = new Microsoft.SharePoint.Linq.EntityRef<SADDocumentType>();
			this._sADDocumentIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType>>(this.OnSADDocumentIndexSync);
			this._sADDocumentIndex.OnChanged += new System.EventHandler(this.OnSADDocumentIndexChanged);
			this._sADDocumentIndex.OnChanging += new System.EventHandler(this.OnSADDocumentIndexChanging);
			this._sADPackage = new Microsoft.SharePoint.Linq.EntitySet<SADPackage>();
			this._sADPackage.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADPackage>>(this.OnSADPackageSync);
			this._sADPackage.OnChanged += new System.EventHandler(this.OnSADPackageChanged);
			this._sADPackage.OnChanging += new System.EventHandler(this.OnSADPackageChanging);
			this._sADQuantity = new Microsoft.SharePoint.Linq.EntitySet<SADQuantity>();
			this._sADQuantity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADQuantity>>(this.OnSADQuantitySync);
			this._sADQuantity.OnChanged += new System.EventHandler(this.OnSADQuantityChanged);
			this._sADQuantity.OnChanging += new System.EventHandler(this.OnSADQuantityChanging);
			this._sADRequiredDocuments = new Microsoft.SharePoint.Linq.EntitySet<SADRequiredDocuments>();
			this._sADRequiredDocuments.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADRequiredDocuments>>(this.OnSADRequiredDocumentsSync);
			this._sADRequiredDocuments.OnChanged += new System.EventHandler(this.OnSADRequiredDocumentsChanged);
			this._sADRequiredDocuments.OnChanging += new System.EventHandler(this.OnSADRequiredDocumentsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsDescription", Storage="_goodsDescription", FieldType="Text")]
		public string GoodsDescription {
			get {
				return this._goodsDescription;
			}
			set {
				if ((value != this._goodsDescription)) {
					this.OnPropertyChanging("GoodsDescription", this._goodsDescription);
					this._goodsDescription = value;
					this.OnPropertyChanged("GoodsDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PCNTariffCode", Storage="_pCNTariffCode", FieldType="Text")]
		public string PCNTariffCode {
			get {
				return this._pCNTariffCode;
			}
			set {
				if ((value != this._pCNTariffCode)) {
					this.OnPropertyChanging("PCNTariffCode", this._pCNTariffCode);
					this._pCNTariffCode = value;
					this.OnPropertyChanged("PCNTariffCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GrossMass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Procedure", Storage="_procedure", FieldType="Text")]
		public string Procedure {
			get {
				return this._procedure;
			}
			set {
				if ((value != this._procedure)) {
					this.OnPropertyChanging("Procedure", this._procedure);
					this._procedure = value;
					this.OnPropertyChanged("Procedure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TotalAmountInvoiced", Storage="_totalAmountInvoiced", FieldType="Number")]
		public System.Nullable<double> TotalAmountInvoiced {
			get {
				return this._totalAmountInvoiced;
			}
			set {
				if ((value != this._totalAmountInvoiced)) {
					this.OnPropertyChanging("TotalAmountInvoiced", this._totalAmountInvoiced);
					this._totalAmountInvoiced = value;
					this.OnPropertyChanged("TotalAmountInvoiced");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NetMass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Clearence2SadGoodID", Storage="_clearence", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Clearence")]
		public Microsoft.SharePoint.Linq.EntitySet<Clearence> Clearence {
			get {
				return this._clearence;
			}
			set {
				this._clearence.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDuties2SADGoodID", Storage="_sADDuties", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Duties")]
		public Microsoft.SharePoint.Linq.EntitySet<SADDuties> SADDuties {
			get {
				return this._sADDuties;
			}
			set {
				this._sADDuties.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumentIndex", Storage="_sADDocumentIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Document")]
		public SADDocumentType SADDocumentIndex {
			get {
				return this._sADDocumentIndex.GetEntity();
			}
			set {
				this._sADDocumentIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADPackage2SADGoodID", Storage="_sADPackage", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Package")]
		public Microsoft.SharePoint.Linq.EntitySet<SADPackage> SADPackage {
			get {
				return this._sADPackage;
			}
			set {
				this._sADPackage.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADQuantity2SADGoodID", Storage="_sADQuantity", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Quantity")]
		public Microsoft.SharePoint.Linq.EntitySet<SADQuantity> SADQuantity {
			get {
				return this._sADQuantity;
			}
			set {
				this._sADQuantity.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADRequiredDoc2SADGoodID", Storage="_sADRequiredDocuments", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Required Documents")]
		public Microsoft.SharePoint.Linq.EntitySet<SADRequiredDocuments> SADRequiredDocuments {
			get {
				return this._sADRequiredDocuments;
			}
			set {
				this._sADRequiredDocuments.Assign(value);
			}
		}
		
		private void OnClearenceChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Clearence", this._clearence.Clone());
		}
		
		private void OnClearenceChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Clearence");
		}
		
		private void OnClearenceSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Clearence2SadGoodID = this;
			}
			else {
				e.Item.Clearence2SadGoodID = null;
			}
		}
		
		private void OnSADDutiesChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDuties", this._sADDuties.Clone());
		}
		
		private void OnSADDutiesChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDuties");
		}
		
		private void OnSADDutiesSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDuties> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDuties2SADGoodID = this;
			}
			else {
				e.Item.SADDuties2SADGoodID = null;
			}
		}
		
		private void OnSADDocumentIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDocumentIndex", this._sADDocumentIndex.Clone());
		}
		
		private void OnSADDocumentIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDocumentIndex");
		}
		
		private void OnSADDocumentIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADGood.Add(this);
			}
			else {
				e.Item.SADGood.Remove(this);
			}
		}
		
		private void OnSADPackageChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADPackage", this._sADPackage.Clone());
		}
		
		private void OnSADPackageChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADPackage");
		}
		
		private void OnSADPackageSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADPackage> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADPackage2SADGoodID = this;
			}
			else {
				e.Item.SADPackage2SADGoodID = null;
			}
		}
		
		private void OnSADQuantityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADQuantity", this._sADQuantity.Clone());
		}
		
		private void OnSADQuantityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADQuantity");
		}
		
		private void OnSADQuantitySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADQuantity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADQuantity2SADGoodID = this;
			}
			else {
				e.Item.SADQuantity2SADGoodID = null;
			}
		}
		
		private void OnSADRequiredDocumentsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADRequiredDocuments", this._sADRequiredDocuments.Clone());
		}
		
		private void OnSADRequiredDocumentsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADRequiredDocuments");
		}
		
		private void OnSADRequiredDocumentsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADRequiredDocuments> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADRequiredDoc2SADGoodID = this;
			}
			else {
				e.Item.SADRequiredDoc2SADGoodID = null;
			}
		}
	}
	
	/// <summary>
	/// SAD Package List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADPackage", Id="0x01007F42F9669FE35A41801B017E1D69C7D9")]
	public partial class SADPackage : Element {
		
		private System.Nullable<double> _itemNo;
		
		private string _package;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADPackage2SADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADPackage() {
			this._sADPackage2SADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADPackage2SADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADPackage2SADGoodIDSync);
			this._sADPackage2SADGoodID.OnChanged += new System.EventHandler(this.OnSADPackage2SADGoodIDChanged);
			this._sADPackage2SADGoodID.OnChanging += new System.EventHandler(this.OnSADPackage2SADGoodIDChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Package", Storage="_package", FieldType="Text")]
		public string Package {
			get {
				return this._package;
			}
			set {
				if ((value != this._package)) {
					this.OnPropertyChanging("Package", this._package);
					this._package = value;
					this.OnPropertyChanged("Package");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADPackage2SADGoodID", Storage="_sADPackage2SADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADPackage2SADGoodID {
			get {
				return this._sADPackage2SADGoodID.GetEntity();
			}
			set {
				this._sADPackage2SADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADPackage2SADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADPackage2SADGoodID", this._sADPackage2SADGoodID.Clone());
		}
		
		private void OnSADPackage2SADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADPackage2SADGoodID");
		}
		
		private void OnSADPackage2SADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADPackage.Add(this);
			}
			else {
				e.Item.SADPackage.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// SAD Quantity List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADQuantity", Id="0x010016BC5B99EA5169458266BB52B8784B3F")]
	public partial class SADQuantity : Element {
		
		private System.Nullable<double> _itemNo;
		
		private System.Nullable<double> _netMass;
		
		private string _units;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADQuantity2SADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADQuantity() {
			this._sADQuantity2SADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADQuantity2SADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADQuantity2SADGoodIDSync);
			this._sADQuantity2SADGoodID.OnChanged += new System.EventHandler(this.OnSADQuantity2SADGoodIDChanged);
			this._sADQuantity2SADGoodID.OnChanging += new System.EventHandler(this.OnSADQuantity2SADGoodIDChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NetMass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADQuantity2SADGoodID", Storage="_sADQuantity2SADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADQuantity2SADGoodID {
			get {
				return this._sADQuantity2SADGoodID.GetEntity();
			}
			set {
				this._sADQuantity2SADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADQuantity2SADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADQuantity2SADGoodID", this._sADQuantity2SADGoodID.Clone());
		}
		
		private void OnSADQuantity2SADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADQuantity2SADGoodID");
		}
		
		private void OnSADQuantity2SADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADQuantity.Add(this);
			}
			else {
				e.Item.SADQuantity.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// SAD Required Documents List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADRequiredDocuments", Id="0x0100CAF95BD14627B343981DE5345DD0BD37")]
	public partial class SADRequiredDocuments : Element {
		
		private string _code;
		
		private string _number;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADRequiredDoc2SADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADRequiredDocuments() {
			this._sADRequiredDoc2SADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADRequiredDoc2SADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADRequiredDoc2SADGoodIDSync);
			this._sADRequiredDoc2SADGoodID.OnChanged += new System.EventHandler(this.OnSADRequiredDoc2SADGoodIDChanged);
			this._sADRequiredDoc2SADGoodID.OnChanging += new System.EventHandler(this.OnSADRequiredDoc2SADGoodIDChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Code", Storage="_code", FieldType="Text")]
		public string Code {
			get {
				return this._code;
			}
			set {
				if ((value != this._code)) {
					this.OnPropertyChanging("Code", this._code);
					this._code = value;
					this.OnPropertyChanged("Code");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Number", Storage="_number", FieldType="Text")]
		public string Number {
			get {
				return this._number;
			}
			set {
				if ((value != this._number)) {
					this.OnPropertyChanging("Number", this._number);
					this._number = value;
					this.OnPropertyChanged("Number");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADRequiredDoc2SADGoodID", Storage="_sADRequiredDoc2SADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADRequiredDoc2SADGoodID {
			get {
				return this._sADRequiredDoc2SADGoodID.GetEntity();
			}
			set {
				this._sADRequiredDoc2SADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADRequiredDoc2SADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADRequiredDoc2SADGoodID", this._sADRequiredDoc2SADGoodID.Clone());
		}
		
		private void OnSADRequiredDoc2SADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADRequiredDoc2SADGoodID");
		}
		
		private void OnSADRequiredDoc2SADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADRequiredDocuments.Add(this);
			}
			else {
				e.Item.SADRequiredDocuments.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Settings List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Settings", Id="0x01007860DD9E4A2C4C28A13C4DD2E6F0B710")]
	public partial class Settings : Element {
		
		private string _keyValue;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Settings() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="KeyValue", Storage="_keyValue", Required=true, FieldType="Text")]
		public string KeyValue {
			get {
				return this._keyValue;
			}
			set {
				if ((value != this._keyValue)) {
					this.OnPropertyChanging("KeyValue", this._keyValue);
					this._keyValue = value;
					this.OnPropertyChanged("KeyValue");
				}
			}
		}
	}
	
	/// <summary>
	/// SH Menthol List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SHMenthol", Id="0x010029964D9D2D53F84CB1083741C40FA8D1")]
	public partial class SHMenthol : Element {
		
		private System.Nullable<double> _sHMentholRatio;
		
		private System.Nullable<ProductType> _productType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SHMenthol() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHMentholRatio", Storage="_sHMentholRatio", Required=true, FieldType="Number")]
		public System.Nullable<double> SHMentholRatio {
			get {
				return this._sHMentholRatio;
			}
			set {
				if ((value != this._sHMentholRatio)) {
					this.OnPropertyChanging("SHMentholRatio", this._sHMentholRatio);
					this._sHMentholRatio = value;
					this.OnPropertyChanged("SHMentholRatio");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type SHMenthol.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type SHMenthol.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", Required=true, FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
	}
	
	/// <summary>
	/// SKU Common Part List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SKUCommonPart", Id="0x010014C98F440FB04C679F1D9D39ACC92D8A")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SKUCigarette))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SKUCutfiller))]
	public partial class SKUCommonPart : Element {
		
		private string _sKU;
		
		private System.Nullable<bool> _iPRMaterial;
		
		private System.Nullable<ProductType> _productType;
		
		private Microsoft.SharePoint.Linq.EntitySet<Batch> _batch;
		
		private Microsoft.SharePoint.Linq.EntityRef<Format> _formatIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<Document> _sKULibraryIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SKUCommonPart() {
			this._batch = new Microsoft.SharePoint.Linq.EntitySet<Batch>();
			this._batch.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchSync);
			this._batch.OnChanged += new System.EventHandler(this.OnBatchChanged);
			this._batch.OnChanging += new System.EventHandler(this.OnBatchChanging);
			this._formatIndex = new Microsoft.SharePoint.Linq.EntityRef<Format>();
			this._formatIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Format>>(this.OnFormatIndexSync);
			this._formatIndex.OnChanged += new System.EventHandler(this.OnFormatIndexChanged);
			this._formatIndex.OnChanging += new System.EventHandler(this.OnFormatIndexChanging);
			this._sKULibraryIndex = new Microsoft.SharePoint.Linq.EntityRef<Document>();
			this._sKULibraryIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Document>>(this.OnSKULibraryIndexSync);
			this._sKULibraryIndex.OnChanged += new System.EventHandler(this.OnSKULibraryIndexChanged);
			this._sKULibraryIndex.OnChanging += new System.EventHandler(this.OnSKULibraryIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRMaterial", Storage="_iPRMaterial", FieldType="Boolean")]
		public System.Nullable<bool> IPRMaterial {
			get {
				return this._iPRMaterial;
			}
			set {
				if ((value != this._iPRMaterial)) {
					this.OnPropertyChanging("IPRMaterial", this._iPRMaterial);
					this._iPRMaterial = value;
					this.OnPropertyChanged("IPRMaterial");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SKUIndex", Storage="_batch", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Batch")]
		public Microsoft.SharePoint.Linq.EntitySet<Batch> Batch {
			get {
				return this._batch;
			}
			set {
				this._batch.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FormatIndex", Storage="_formatIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Format")]
		public Format FormatIndex {
			get {
				return this._formatIndex.GetEntity();
			}
			set {
				this._formatIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SKULibraryIndex", Storage="_sKULibraryIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SKU Library")]
		public Document SKULibraryIndex {
			get {
				return this._sKULibraryIndex.GetEntity();
			}
			set {
				this._sKULibraryIndex.SetEntity(value);
			}
		}
		
		private void OnBatchChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Batch", this._batch.Clone());
		}
		
		private void OnBatchChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Batch");
		}
		
		private void OnBatchSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SKUIndex = this;
			}
			else {
				e.Item.SKUIndex = null;
			}
		}
		
		private void OnFormatIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FormatIndex", this._formatIndex.Clone());
		}
		
		private void OnFormatIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FormatIndex");
		}
		
		private void OnFormatIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Format> e) {
		}
		
		private void OnSKULibraryIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SKULibraryIndex", this._sKULibraryIndex.Clone());
		}
		
		private void OnSKULibraryIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SKULibraryIndex");
		}
		
		private void OnSKULibraryIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Document> e) {
		}
	}
	
	/// <summary>
	/// Stock Entry List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="StockEntry", Id="0x0100060FE33D5AAE473ABDC2777AE86FED6C")]
	public partial class StockEntry : Element {
		
		private string _sKU;
		
		private string _storLoc;
		
		private string _units;
		
		private string _batch;
		
		private System.Nullable<double> _unrestricted;
		
		private System.Nullable<double> _inQualityInsp;
		
		private System.Nullable<double> _restrictedUse;
		
		private System.Nullable<double> _blocked;
		
		private System.Nullable<double> _quantity;
		
		private System.Nullable<bool> _iPRType;
		
		private System.Nullable<ProductType> _productType;
		
		private Microsoft.SharePoint.Linq.EntityRef<Batch> _batchIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<StockLib> _stockLibraryIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public StockEntry() {
			this._batchIndex = new Microsoft.SharePoint.Linq.EntityRef<Batch>();
			this._batchIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchIndexSync);
			this._batchIndex.OnChanged += new System.EventHandler(this.OnBatchIndexChanged);
			this._batchIndex.OnChanging += new System.EventHandler(this.OnBatchIndexChanging);
			this._stockLibraryIndex = new Microsoft.SharePoint.Linq.EntityRef<StockLib>();
			this._stockLibraryIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<StockLib>>(this.OnStockLibraryIndexSync);
			this._stockLibraryIndex.OnChanged += new System.EventHandler(this.OnStockLibraryIndexChanged);
			this._stockLibraryIndex.OnChanging += new System.EventHandler(this.OnStockLibraryIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StorLoc", Storage="_storLoc", FieldType="Text")]
		public string StorLoc {
			get {
				return this._storLoc;
			}
			set {
				if ((value != this._storLoc)) {
					this.OnPropertyChanging("StorLoc", this._storLoc);
					this._storLoc = value;
					this.OnPropertyChanged("StorLoc");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Unrestricted", Storage="_unrestricted", FieldType="Number")]
		public System.Nullable<double> Unrestricted {
			get {
				return this._unrestricted;
			}
			set {
				if ((value != this._unrestricted)) {
					this.OnPropertyChanging("Unrestricted", this._unrestricted);
					this._unrestricted = value;
					this.OnPropertyChanged("Unrestricted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InQualityInsp", Storage="_inQualityInsp", FieldType="Number")]
		public System.Nullable<double> InQualityInsp {
			get {
				return this._inQualityInsp;
			}
			set {
				if ((value != this._inQualityInsp)) {
					this.OnPropertyChanging("InQualityInsp", this._inQualityInsp);
					this._inQualityInsp = value;
					this.OnPropertyChanged("InQualityInsp");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RestrictedUse", Storage="_restrictedUse", FieldType="Number")]
		public System.Nullable<double> RestrictedUse {
			get {
				return this._restrictedUse;
			}
			set {
				if ((value != this._restrictedUse)) {
					this.OnPropertyChanging("RestrictedUse", this._restrictedUse);
					this._restrictedUse = value;
					this.OnPropertyChanged("RestrictedUse");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Blocked", Storage="_blocked", FieldType="Number")]
		public System.Nullable<double> Blocked {
			get {
				return this._blocked;
			}
			set {
				if ((value != this._blocked)) {
					this.OnPropertyChanging("Blocked", this._blocked);
					this._blocked = value;
					this.OnPropertyChanged("Blocked");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Quantity", Storage="_quantity", FieldType="Number")]
		public System.Nullable<double> Quantity {
			get {
				return this._quantity;
			}
			set {
				if ((value != this._quantity)) {
					this.OnPropertyChanging("Quantity", this._quantity);
					this._quantity = value;
					this.OnPropertyChanged("Quantity");
				}
			}
		}
		
		/// <summary>
		/// IPR Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRType", Storage="_iPRType", FieldType="Boolean")]
		public System.Nullable<bool> IPRType {
			get {
				return this._iPRType;
			}
			set {
				if ((value != this._iPRType)) {
					this.OnPropertyChanging("IPRType", this._iPRType);
					this._iPRType = value;
					this.OnPropertyChanged("IPRType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BatchIndex", Storage="_batchIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Batch")]
		public Batch BatchIndex {
			get {
				return this._batchIndex.GetEntity();
			}
			set {
				this._batchIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="StockLibraryIndex", Storage="_stockLibraryIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Stock Library")]
		public StockLib StockLibraryIndex {
			get {
				return this._stockLibraryIndex.GetEntity();
			}
			set {
				this._stockLibraryIndex.SetEntity(value);
			}
		}
		
		private void OnBatchIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BatchIndex", this._batchIndex.Clone());
		}
		
		private void OnBatchIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BatchIndex");
		}
		
		private void OnBatchIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.StockEntry.Add(this);
			}
			else {
				e.Item.StockEntry.Remove(this);
			}
		}
		
		private void OnStockLibraryIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("StockLibraryIndex", this._stockLibraryIndex.Clone());
		}
		
		private void OnStockLibraryIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("StockLibraryIndex");
		}
		
		private void OnStockLibraryIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<StockLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.StockEntry.Add(this);
			}
			else {
				e.Item.StockEntry.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Usage List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Usage", Id="0x01000E2260EFB66F324B9CC50EEEC274F5FD")]
	public partial class Usage : Element {
		
		private System.Nullable<double> _usageMin;
		
		private System.Nullable<double> _usageMax;
		
		private System.Nullable<double> _cTFUsageMin;
		
		private System.Nullable<double> _cTFUsageMax;
		
		private Microsoft.SharePoint.Linq.EntityRef<Format> _formatIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Usage() {
			this._formatIndex = new Microsoft.SharePoint.Linq.EntityRef<Format>();
			this._formatIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Format>>(this.OnFormatIndexSync);
			this._formatIndex.OnChanged += new System.EventHandler(this.OnFormatIndexChanged);
			this._formatIndex.OnChanging += new System.EventHandler(this.OnFormatIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UsageMin", Storage="_usageMin", FieldType="Number")]
		public System.Nullable<double> UsageMin {
			get {
				return this._usageMin;
			}
			set {
				if ((value != this._usageMin)) {
					this.OnPropertyChanging("UsageMin", this._usageMin);
					this._usageMin = value;
					this.OnPropertyChanged("UsageMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UsageMax", Storage="_usageMax", FieldType="Number")]
		public System.Nullable<double> UsageMax {
			get {
				return this._usageMax;
			}
			set {
				if ((value != this._usageMax)) {
					this.OnPropertyChanging("UsageMax", this._usageMax);
					this._usageMax = value;
					this.OnPropertyChanged("UsageMax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CTFUsageMin", Storage="_cTFUsageMin", FieldType="Number")]
		public System.Nullable<double> CTFUsageMin {
			get {
				return this._cTFUsageMin;
			}
			set {
				if ((value != this._cTFUsageMin)) {
					this.OnPropertyChanging("CTFUsageMin", this._cTFUsageMin);
					this._cTFUsageMin = value;
					this.OnPropertyChanged("CTFUsageMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CTFUsageMax", Storage="_cTFUsageMax", FieldType="Number")]
		public System.Nullable<double> CTFUsageMax {
			get {
				return this._cTFUsageMax;
			}
			set {
				if ((value != this._cTFUsageMax)) {
					this.OnPropertyChanging("CTFUsageMax", this._cTFUsageMax);
					this._cTFUsageMax = value;
					this.OnPropertyChanged("CTFUsageMax");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Usage.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Usage.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FormatIndex", Storage="_formatIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Format")]
		public Format FormatIndex {
			get {
				return this._formatIndex.GetEntity();
			}
			set {
				this._formatIndex.SetEntity(value);
			}
		}
		
		private void OnFormatIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FormatIndex", this._formatIndex.Clone());
		}
		
		private void OnFormatIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FormatIndex");
		}
		
		private void OnFormatIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Format> e) {
		}
	}
	
	/// <summary>
	/// Warehouse List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Warehouse", Id="0x01001E57547208B49B46B4AA7CB4536B1A55")]
	public partial class Warehouse : Element {
		
		private string _warehouseName;
		
		private string _procedure;
		
		private System.Nullable<ProductType> _productType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Warehouse() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WarehouseName", Storage="_warehouseName", Required=true, FieldType="Text")]
		public string WarehouseName {
			get {
				return this._warehouseName;
			}
			set {
				if ((value != this._warehouseName)) {
					this.OnPropertyChanging("WarehouseName", this._warehouseName);
					this._warehouseName = value;
					this.OnPropertyChanged("WarehouseName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Procedure", Storage="_procedure", Required=true, FieldType="Text")]
		public string Procedure {
			get {
				return this._procedure;
			}
			set {
				if ((value != this._procedure)) {
					this.OnPropertyChanging("Procedure", this._procedure);
					this._procedure = value;
					this.OnPropertyChanged("Procedure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", Required=true, FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
	}
	
	/// <summary>
	/// Waste List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Waste", Id="0x01002D6DCE3B847D5942ACDD176925283176")]
	public partial class Waste : Element {
		
		private System.Nullable<double> _wasteRatio;
		
		private System.Nullable<ProductType> _productType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Waste() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WasteRatio", Storage="_wasteRatio", FieldType="Number")]
		public System.Nullable<double> WasteRatio {
			get {
				return this._wasteRatio;
			}
			set {
				if ((value != this._wasteRatio)) {
					this.OnPropertyChanging("WasteRatio", this._wasteRatio);
					this._wasteRatio = value;
					this.OnPropertyChanged("WasteRatio");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Waste.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Waste.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
	}
	
	/// <summary>
	/// It contains information about the type of shipped goods.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Commodity", Id="0x01003A76AB24637A7541B0D982B65D5916CE")]
	public partial class Commodity : Element {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Commodity() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// City
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="City", Id="0x01003C7CE387CDAEA94B89FEB3FC6264FB71")]
	public partial class City : Element {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public City() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// Tobacco Batch Summary List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TobaccoBatchSummary", Id="0x0100A10A60051D134AAC8EA8B57D80FA78F8")]
	public partial class TobaccoBatchSummary : Element {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TobaccoBatchSummary() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// Country
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Country", Id="0x0100CE031DC456C86C409854D818EDA7E1F3")]
	public partial class Country : Element {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Country() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// Activity Log List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ActivityLogCT", Id="0x0104005C85A6C821F245D582FCC9CDC2D3688C")]
	public partial class ActivityLogCT : Announcement {
		
		private string _activityPriority;
		
		private string _activitySource;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ActivityLogCT() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ActivityPriority", Storage="_activityPriority", FieldType="Text")]
		public string ActivityPriority {
			get {
				return this._activityPriority;
			}
			set {
				if ((value != this._activityPriority)) {
					this.OnPropertyChanging("ActivityPriority", this._activityPriority);
					this._activityPriority = value;
					this.OnPropertyChanged("ActivityPriority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ActivitySource", Storage="_activitySource", FieldType="Text")]
		public string ActivitySource {
			get {
				return this._activitySource;
			}
			set {
				if ((value != this._activitySource)) {
					this.OnPropertyChanging("ActivitySource", this._activitySource);
					this._activitySource = value;
					this.OnPropertyChanged("ActivitySource");
				}
			}
		}
	}
	
	/// <summary>
	/// Batch Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="BatchLib", Id="0x01010057CD1193DB9A48F4B4E6E9B55FBAC70A")]
	public partial class BatchLib : Document {
		
		private System.Nullable<bool> _batchLibraryOK;
		
		private string _batchLibraryComments;
		
		private Microsoft.SharePoint.Linq.EntitySet<Batch> _batch;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public BatchLib() {
			this._batch = new Microsoft.SharePoint.Linq.EntitySet<Batch>();
			this._batch.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchSync);
			this._batch.OnChanged += new System.EventHandler(this.OnBatchChanged);
			this._batch.OnChanging += new System.EventHandler(this.OnBatchChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchLibraryOK", Storage="_batchLibraryOK", FieldType="Boolean")]
		public System.Nullable<bool> BatchLibraryOK {
			get {
				return this._batchLibraryOK;
			}
			set {
				if ((value != this._batchLibraryOK)) {
					this.OnPropertyChanging("BatchLibraryOK", this._batchLibraryOK);
					this._batchLibraryOK = value;
					this.OnPropertyChanged("BatchLibraryOK");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchLibraryComments", Storage="_batchLibraryComments", FieldType="Text")]
		public string BatchLibraryComments {
			get {
				return this._batchLibraryComments;
			}
			set {
				if ((value != this._batchLibraryComments)) {
					this.OnPropertyChanging("BatchLibraryComments", this._batchLibraryComments);
					this._batchLibraryComments = value;
					this.OnPropertyChanged("BatchLibraryComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BatchLibraryIndex", Storage="_batch", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Batch")]
		public Microsoft.SharePoint.Linq.EntitySet<Batch> Batch {
			get {
				return this._batch;
			}
			set {
				this._batch.Assign(value);
			}
		}
		
		private void OnBatchChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Batch", this._batch.Clone());
		}
		
		private void OnBatchChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Batch");
		}
		
		private void OnBatchSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.BatchLibraryIndex = this;
			}
			else {
				e.Item.BatchLibraryIndex = null;
			}
		}
	}
	
	/// <summary>
	/// Invoice Document Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="InvoiceLib", Id="0x0101003054E4EBB5DE4C6391CA389A60DCD926")]
	public partial class InvoiceLib : Document {
		
		private string _billDoc;
		
		private System.Nullable<System.DateTime> _invoiceCreationDate;
		
		private System.Nullable<bool> _invoiceLibraryStatus;
		
		private System.Nullable<bool> _invoiceLibraryReadOnly;
		
		private System.Nullable<bool> _isExport;
		
		private Microsoft.SharePoint.Linq.EntitySet<InvoiceContent> _invoiceContent;
		
		private Microsoft.SharePoint.Linq.EntityRef<Clearence> _clearenceIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public InvoiceLib() {
			this._invoiceContent = new Microsoft.SharePoint.Linq.EntitySet<InvoiceContent>();
			this._invoiceContent.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceContent>>(this.OnInvoiceContentSync);
			this._invoiceContent.OnChanged += new System.EventHandler(this.OnInvoiceContentChanged);
			this._invoiceContent.OnChanging += new System.EventHandler(this.OnInvoiceContentChanging);
			this._clearenceIndex = new Microsoft.SharePoint.Linq.EntityRef<Clearence>();
			this._clearenceIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnClearenceIndexSync);
			this._clearenceIndex.OnChanged += new System.EventHandler(this.OnClearenceIndexChanged);
			this._clearenceIndex.OnChanging += new System.EventHandler(this.OnClearenceIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BillDoc", Storage="_billDoc", FieldType="Text")]
		public string BillDoc {
			get {
				return this._billDoc;
			}
			set {
				if ((value != this._billDoc)) {
					this.OnPropertyChanging("BillDoc", this._billDoc);
					this._billDoc = value;
					this.OnPropertyChanged("BillDoc");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceCreationDate", Storage="_invoiceCreationDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceCreationDate {
			get {
				return this._invoiceCreationDate;
			}
			set {
				if ((value != this._invoiceCreationDate)) {
					this.OnPropertyChanging("InvoiceCreationDate", this._invoiceCreationDate);
					this._invoiceCreationDate = value;
					this.OnPropertyChanged("InvoiceCreationDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceLibraryStatus", Storage="_invoiceLibraryStatus", FieldType="Boolean")]
		public System.Nullable<bool> InvoiceLibraryStatus {
			get {
				return this._invoiceLibraryStatus;
			}
			set {
				if ((value != this._invoiceLibraryStatus)) {
					this.OnPropertyChanging("InvoiceLibraryStatus", this._invoiceLibraryStatus);
					this._invoiceLibraryStatus = value;
					this.OnPropertyChanged("InvoiceLibraryStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceLibraryReadOnly", Storage="_invoiceLibraryReadOnly", FieldType="Boolean")]
		public System.Nullable<bool> InvoiceLibraryReadOnly {
			get {
				return this._invoiceLibraryReadOnly;
			}
			set {
				if ((value != this._invoiceLibraryReadOnly)) {
					this.OnPropertyChanging("InvoiceLibraryReadOnly", this._invoiceLibraryReadOnly);
					this._invoiceLibraryReadOnly = value;
					this.OnPropertyChanged("InvoiceLibraryReadOnly");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsExport", Storage="_isExport", FieldType="Boolean")]
		public System.Nullable<bool> IsExport {
			get {
				return this._isExport;
			}
			set {
				if ((value != this._isExport)) {
					this.OnPropertyChanging("IsExport", this._isExport);
					this._isExport = value;
					this.OnPropertyChanged("IsExport");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="InvoiceIndex", Storage="_invoiceContent", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Invoice Content")]
		public Microsoft.SharePoint.Linq.EntitySet<InvoiceContent> InvoiceContent {
			get {
				return this._invoiceContent;
			}
			set {
				this._invoiceContent.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ClearenceIndex", Storage="_clearenceIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Clearence")]
		public Clearence ClearenceIndex {
			get {
				return this._clearenceIndex.GetEntity();
			}
			set {
				this._clearenceIndex.SetEntity(value);
			}
		}
		
		private void OnInvoiceContentChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("InvoiceContent", this._invoiceContent.Clone());
		}
		
		private void OnInvoiceContentChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("InvoiceContent");
		}
		
		private void OnInvoiceContentSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceContent> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.InvoiceIndex = this;
			}
			else {
				e.Item.InvoiceIndex = null;
			}
		}
		
		private void OnClearenceIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ClearenceIndex", this._clearenceIndex.Clone());
		}
		
		private void OnClearenceIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ClearenceIndex");
		}
		
		private void OnClearenceIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
		}
	}
	
	/// <summary>
	/// IPR Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="IPRLib", Id="0x0101001DF8B050E523400BAA45A84C96B5D8AD")]
	public partial class IPRLib : Document {
		
		private string _documentNo;
		
		private Microsoft.SharePoint.Linq.EntitySet<IPR> _iPR;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public IPRLib() {
			this._iPR = new Microsoft.SharePoint.Linq.EntitySet<IPR>();
			this._iPR.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR>>(this.OnIPRSync);
			this._iPR.OnChanged += new System.EventHandler(this.OnIPRChanged);
			this._iPR.OnChanging += new System.EventHandler(this.OnIPRChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNo", Storage="_documentNo", FieldType="Text")]
		public string DocumentNo {
			get {
				return this._documentNo;
			}
			set {
				if ((value != this._documentNo)) {
					this.OnPropertyChanging("DocumentNo", this._documentNo);
					this._documentNo = value;
					this.OnPropertyChanged("DocumentNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPRLibraryIndex", Storage="_iPR", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="IPR")]
		public Microsoft.SharePoint.Linq.EntitySet<IPR> IPR {
			get {
				return this._iPR;
			}
			set {
				this._iPR.Assign(value);
			}
		}
		
		private void OnIPRChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPR", this._iPR.Clone());
		}
		
		private void OnIPRChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPR");
		}
		
		private void OnIPRSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPRLibraryIndex = this;
			}
			else {
				e.Item.IPRLibraryIndex = null;
			}
		}
	}
	
	/// <summary>
	/// JSOX Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="JSOXLib", Id="0x0101002CFEC8BBC3F440D69B724CC2B95FFF93")]
	public partial class JSOXLib : Document {
		
		private System.Nullable<System.DateTime> _previousMonthDate;
		
		private System.Nullable<double> _previousMonthQuantity;
		
		private System.Nullable<System.DateTime> _introducingDateStart;
		
		private System.Nullable<System.DateTime> _introducingDateEnd;
		
		private System.Nullable<double> _introducingQuantity;
		
		private System.Nullable<System.DateTime> _outboundDateStart;
		
		private System.Nullable<System.DateTime> _outboundDateEnd;
		
		private System.Nullable<double> _outboundQuantity;
		
		private System.Nullable<System.DateTime> _balanceDate;
		
		private System.Nullable<double> _balanceQuantity;
		
		private System.Nullable<System.DateTime> _situationDate;
		
		private System.Nullable<double> _situationQuantity;
		
		private System.Nullable<double> _reassumeQuantity;
		
		private System.Nullable<bool> _jSOXLibraryReadOnly;
		
		private Microsoft.SharePoint.Linq.EntitySet<IPR> _iPR;
		
		private Microsoft.SharePoint.Linq.EntitySet<JSOXCustomsSummary> _jSOXCustomsSummary;
		
		private Microsoft.SharePoint.Linq.EntitySet<StockLib> _stockLib;
		
		private Microsoft.SharePoint.Linq.EntitySet<BalanceBatch> _balanceBatch;
		
		private Microsoft.SharePoint.Linq.EntitySet<BalanceIPR> _balanceIPR;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public JSOXLib() {
			this._iPR = new Microsoft.SharePoint.Linq.EntitySet<IPR>();
			this._iPR.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR>>(this.OnIPRSync);
			this._iPR.OnChanged += new System.EventHandler(this.OnIPRChanged);
			this._iPR.OnChanging += new System.EventHandler(this.OnIPRChanging);
			this._jSOXCustomsSummary = new Microsoft.SharePoint.Linq.EntitySet<JSOXCustomsSummary>();
			this._jSOXCustomsSummary.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXCustomsSummary>>(this.OnJSOXCustomsSummarySync);
			this._jSOXCustomsSummary.OnChanged += new System.EventHandler(this.OnJSOXCustomsSummaryChanged);
			this._jSOXCustomsSummary.OnChanging += new System.EventHandler(this.OnJSOXCustomsSummaryChanging);
			this._stockLib = new Microsoft.SharePoint.Linq.EntitySet<StockLib>();
			this._stockLib.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<StockLib>>(this.OnStockLibSync);
			this._stockLib.OnChanged += new System.EventHandler(this.OnStockLibChanged);
			this._stockLib.OnChanging += new System.EventHandler(this.OnStockLibChanging);
			this._balanceBatch = new Microsoft.SharePoint.Linq.EntitySet<BalanceBatch>();
			this._balanceBatch.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BalanceBatch>>(this.OnBalanceBatchSync);
			this._balanceBatch.OnChanged += new System.EventHandler(this.OnBalanceBatchChanged);
			this._balanceBatch.OnChanging += new System.EventHandler(this.OnBalanceBatchChanging);
			this._balanceIPR = new Microsoft.SharePoint.Linq.EntitySet<BalanceIPR>();
			this._balanceIPR.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BalanceIPR>>(this.OnBalanceIPRSync);
			this._balanceIPR.OnChanged += new System.EventHandler(this.OnBalanceIPRChanged);
			this._balanceIPR.OnChanging += new System.EventHandler(this.OnBalanceIPRChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PreviousMonthDate", Storage="_previousMonthDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> PreviousMonthDate {
			get {
				return this._previousMonthDate;
			}
			set {
				if ((value != this._previousMonthDate)) {
					this.OnPropertyChanging("PreviousMonthDate", this._previousMonthDate);
					this._previousMonthDate = value;
					this.OnPropertyChanged("PreviousMonthDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PreviousMonthQuantity", Storage="_previousMonthQuantity", FieldType="Number")]
		public System.Nullable<double> PreviousMonthQuantity {
			get {
				return this._previousMonthQuantity;
			}
			set {
				if ((value != this._previousMonthQuantity)) {
					this.OnPropertyChanging("PreviousMonthQuantity", this._previousMonthQuantity);
					this._previousMonthQuantity = value;
					this.OnPropertyChanged("PreviousMonthQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IntroducingDateStart", Storage="_introducingDateStart", FieldType="DateTime")]
		public System.Nullable<System.DateTime> IntroducingDateStart {
			get {
				return this._introducingDateStart;
			}
			set {
				if ((value != this._introducingDateStart)) {
					this.OnPropertyChanging("IntroducingDateStart", this._introducingDateStart);
					this._introducingDateStart = value;
					this.OnPropertyChanged("IntroducingDateStart");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IntroducingDateEnd", Storage="_introducingDateEnd", FieldType="DateTime")]
		public System.Nullable<System.DateTime> IntroducingDateEnd {
			get {
				return this._introducingDateEnd;
			}
			set {
				if ((value != this._introducingDateEnd)) {
					this.OnPropertyChanging("IntroducingDateEnd", this._introducingDateEnd);
					this._introducingDateEnd = value;
					this.OnPropertyChanged("IntroducingDateEnd");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IntroducingQuantity", Storage="_introducingQuantity", FieldType="Number")]
		public System.Nullable<double> IntroducingQuantity {
			get {
				return this._introducingQuantity;
			}
			set {
				if ((value != this._introducingQuantity)) {
					this.OnPropertyChanging("IntroducingQuantity", this._introducingQuantity);
					this._introducingQuantity = value;
					this.OnPropertyChanged("IntroducingQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OutboundDateStart", Storage="_outboundDateStart", FieldType="DateTime")]
		public System.Nullable<System.DateTime> OutboundDateStart {
			get {
				return this._outboundDateStart;
			}
			set {
				if ((value != this._outboundDateStart)) {
					this.OnPropertyChanging("OutboundDateStart", this._outboundDateStart);
					this._outboundDateStart = value;
					this.OnPropertyChanged("OutboundDateStart");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OutboundDateEnd", Storage="_outboundDateEnd", FieldType="DateTime")]
		public System.Nullable<System.DateTime> OutboundDateEnd {
			get {
				return this._outboundDateEnd;
			}
			set {
				if ((value != this._outboundDateEnd)) {
					this.OnPropertyChanging("OutboundDateEnd", this._outboundDateEnd);
					this._outboundDateEnd = value;
					this.OnPropertyChanged("OutboundDateEnd");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OutboundQuantity", Storage="_outboundQuantity", FieldType="Number")]
		public System.Nullable<double> OutboundQuantity {
			get {
				return this._outboundQuantity;
			}
			set {
				if ((value != this._outboundQuantity)) {
					this.OnPropertyChanging("OutboundQuantity", this._outboundQuantity);
					this._outboundQuantity = value;
					this.OnPropertyChanged("OutboundQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BalanceDate", Storage="_balanceDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> BalanceDate {
			get {
				return this._balanceDate;
			}
			set {
				if ((value != this._balanceDate)) {
					this.OnPropertyChanging("BalanceDate", this._balanceDate);
					this._balanceDate = value;
					this.OnPropertyChanged("BalanceDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BalanceQuantity", Storage="_balanceQuantity", FieldType="Number")]
		public System.Nullable<double> BalanceQuantity {
			get {
				return this._balanceQuantity;
			}
			set {
				if ((value != this._balanceQuantity)) {
					this.OnPropertyChanging("BalanceQuantity", this._balanceQuantity);
					this._balanceQuantity = value;
					this.OnPropertyChanged("BalanceQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SituationDate", Storage="_situationDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> SituationDate {
			get {
				return this._situationDate;
			}
			set {
				if ((value != this._situationDate)) {
					this.OnPropertyChanging("SituationDate", this._situationDate);
					this._situationDate = value;
					this.OnPropertyChanged("SituationDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SituationQuantity", Storage="_situationQuantity", FieldType="Number")]
		public System.Nullable<double> SituationQuantity {
			get {
				return this._situationQuantity;
			}
			set {
				if ((value != this._situationQuantity)) {
					this.OnPropertyChanging("SituationQuantity", this._situationQuantity);
					this._situationQuantity = value;
					this.OnPropertyChanged("SituationQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReassumeQuantity", Storage="_reassumeQuantity", FieldType="Number")]
		public System.Nullable<double> ReassumeQuantity {
			get {
				return this._reassumeQuantity;
			}
			set {
				if ((value != this._reassumeQuantity)) {
					this.OnPropertyChanging("ReassumeQuantity", this._reassumeQuantity);
					this._reassumeQuantity = value;
					this.OnPropertyChanged("ReassumeQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="JSOXLibraryReadOnly", Storage="_jSOXLibraryReadOnly", FieldType="Boolean")]
		public System.Nullable<bool> JSOXLibraryReadOnly {
			get {
				return this._jSOXLibraryReadOnly;
			}
			set {
				if ((value != this._jSOXLibraryReadOnly)) {
					this.OnPropertyChanging("JSOXLibraryReadOnly", this._jSOXLibraryReadOnly);
					this._jSOXLibraryReadOnly = value;
					this.OnPropertyChanged("JSOXLibraryReadOnly");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPR2JSOXIndex", Storage="_iPR", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="IPR")]
		public Microsoft.SharePoint.Linq.EntitySet<IPR> IPR {
			get {
				return this._iPR;
			}
			set {
				this._iPR.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="JSOXCustomsSummary2JSOXIndex", Storage="_jSOXCustomsSummary", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="JSOX Customs Summary")]
		public Microsoft.SharePoint.Linq.EntitySet<JSOXCustomsSummary> JSOXCustomsSummary {
			get {
				return this._jSOXCustomsSummary;
			}
			set {
				this._jSOXCustomsSummary.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Stock2JSOXLibraryIndex", Storage="_stockLib", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Stock Library")]
		public Microsoft.SharePoint.Linq.EntitySet<StockLib> StockLib {
			get {
				return this._stockLib;
			}
			set {
				this._stockLib.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Balance2JSOXLibraryIndex", Storage="_balanceBatch", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Balance Batch")]
		public Microsoft.SharePoint.Linq.EntitySet<BalanceBatch> BalanceBatch {
			get {
				return this._balanceBatch;
			}
			set {
				this._balanceBatch.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BalanceIPR2JSOXIndex", Storage="_balanceIPR", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Balance IPR")]
		public Microsoft.SharePoint.Linq.EntitySet<BalanceIPR> BalanceIPR {
			get {
				return this._balanceIPR;
			}
			set {
				this._balanceIPR.Assign(value);
			}
		}
		
		private void OnIPRChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPR", this._iPR.Clone());
		}
		
		private void OnIPRChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPR");
		}
		
		private void OnIPRSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPR2JSOXIndex = this;
			}
			else {
				e.Item.IPR2JSOXIndex = null;
			}
		}
		
		private void OnJSOXCustomsSummaryChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("JSOXCustomsSummary", this._jSOXCustomsSummary.Clone());
		}
		
		private void OnJSOXCustomsSummaryChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("JSOXCustomsSummary");
		}
		
		private void OnJSOXCustomsSummarySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXCustomsSummary> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.JSOXCustomsSummary2JSOXIndex = this;
			}
			else {
				e.Item.JSOXCustomsSummary2JSOXIndex = null;
			}
		}
		
		private void OnStockLibChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("StockLib", this._stockLib.Clone());
		}
		
		private void OnStockLibChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("StockLib");
		}
		
		private void OnStockLibSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<StockLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Stock2JSOXLibraryIndex = this;
			}
			else {
				e.Item.Stock2JSOXLibraryIndex = null;
			}
		}
		
		private void OnBalanceBatchChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BalanceBatch", this._balanceBatch.Clone());
		}
		
		private void OnBalanceBatchChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BalanceBatch");
		}
		
		private void OnBalanceBatchSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BalanceBatch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Balance2JSOXLibraryIndex = this;
			}
			else {
				e.Item.Balance2JSOXLibraryIndex = null;
			}
		}
		
		private void OnBalanceIPRChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BalanceIPR", this._balanceIPR.Clone());
		}
		
		private void OnBalanceIPRChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BalanceIPR");
		}
		
		private void OnBalanceIPRSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BalanceIPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.BalanceIPR2JSOXIndex = this;
			}
			else {
				e.Item.BalanceIPR2JSOXIndex = null;
			}
		}
	}
	
	/// <summary>
	/// SAD Consignment Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADConsignment", Id="0x0101002E7FB2D305D04B84ADEEA8E71EBD1561")]
	public partial class SADConsignment : Document {
		
		private Microsoft.SharePoint.Linq.EntitySet<Clearence> _clearence;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADConsignment() {
			this._clearence = new Microsoft.SharePoint.Linq.EntitySet<Clearence>();
			this._clearence.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnClearenceSync);
			this._clearence.OnChanged += new System.EventHandler(this.OnClearenceChanged);
			this._clearence.OnChanging += new System.EventHandler(this.OnClearenceChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADConsignmentLibraryIndex", Storage="_clearence", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Clearence")]
		public Microsoft.SharePoint.Linq.EntitySet<Clearence> Clearence {
			get {
				return this._clearence;
			}
			set {
				this._clearence.Assign(value);
			}
		}
		
		private void OnClearenceChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Clearence", this._clearence.Clone());
		}
		
		private void OnClearenceChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Clearence");
		}
		
		private void OnClearenceSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADConsignmentLibraryIndex = this;
			}
			else {
				e.Item.SADConsignmentLibraryIndex = null;
			}
		}
	}
	
	/// <summary>
	/// SAD Document Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADDocumentLib", Id="0x010100475F601A85C84D02B51F765E42311C86")]
	public partial class SADDocumentLib : Document {
		
		private System.Nullable<bool> _sADDocumentLibraryOK;
		
		private string _sADDocumentLibraryComments;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADDocumentType> _sADDocumentType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADDocumentLib() {
			this._sADDocumentType = new Microsoft.SharePoint.Linq.EntitySet<SADDocumentType>();
			this._sADDocumentType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType>>(this.OnSADDocumentTypeSync);
			this._sADDocumentType.OnChanged += new System.EventHandler(this.OnSADDocumentTypeChanged);
			this._sADDocumentType.OnChanging += new System.EventHandler(this.OnSADDocumentTypeChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDocumentLibraryOK", Storage="_sADDocumentLibraryOK", FieldType="Boolean")]
		public System.Nullable<bool> SADDocumentLibraryOK {
			get {
				return this._sADDocumentLibraryOK;
			}
			set {
				if ((value != this._sADDocumentLibraryOK)) {
					this.OnPropertyChanging("SADDocumentLibraryOK", this._sADDocumentLibraryOK);
					this._sADDocumentLibraryOK = value;
					this.OnPropertyChanged("SADDocumentLibraryOK");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDocumentLibraryComments", Storage="_sADDocumentLibraryComments", FieldType="Text")]
		public string SADDocumentLibraryComments {
			get {
				return this._sADDocumentLibraryComments;
			}
			set {
				if ((value != this._sADDocumentLibraryComments)) {
					this.OnPropertyChanging("SADDocumentLibraryComments", this._sADDocumentLibraryComments);
					this._sADDocumentLibraryComments = value;
					this.OnPropertyChanged("SADDocumentLibraryComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumenLibrarytIndex", Storage="_sADDocumentType", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Document")]
		public Microsoft.SharePoint.Linq.EntitySet<SADDocumentType> SADDocumentType {
			get {
				return this._sADDocumentType;
			}
			set {
				this._sADDocumentType.Assign(value);
			}
		}
		
		private void OnSADDocumentTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDocumentType", this._sADDocumentType.Clone());
		}
		
		private void OnSADDocumentTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDocumentType");
		}
		
		private void OnSADDocumentTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDocumenLibrarytIndex = this;
			}
			else {
				e.Item.SADDocumenLibrarytIndex = null;
			}
		}
	}
	
	/// <summary>
	/// Stock Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="StockLib", Id="0x0101001A9445DBA29F4E1DB1813989F34483DF")]
	public partial class StockLib : Document {
		
		private Microsoft.SharePoint.Linq.EntitySet<StockEntry> _stockEntry;
		
		private Microsoft.SharePoint.Linq.EntityRef<JSOXLib> _stock2JSOXLibraryIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public StockLib() {
			this._stockEntry = new Microsoft.SharePoint.Linq.EntitySet<StockEntry>();
			this._stockEntry.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<StockEntry>>(this.OnStockEntrySync);
			this._stockEntry.OnChanged += new System.EventHandler(this.OnStockEntryChanged);
			this._stockEntry.OnChanging += new System.EventHandler(this.OnStockEntryChanging);
			this._stock2JSOXLibraryIndex = new Microsoft.SharePoint.Linq.EntityRef<JSOXLib>();
			this._stock2JSOXLibraryIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXLib>>(this.OnStock2JSOXLibraryIndexSync);
			this._stock2JSOXLibraryIndex.OnChanged += new System.EventHandler(this.OnStock2JSOXLibraryIndexChanged);
			this._stock2JSOXLibraryIndex.OnChanging += new System.EventHandler(this.OnStock2JSOXLibraryIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="StockLibraryIndex", Storage="_stockEntry", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Stock Entry")]
		public Microsoft.SharePoint.Linq.EntitySet<StockEntry> StockEntry {
			get {
				return this._stockEntry;
			}
			set {
				this._stockEntry.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Stock2JSOXLibraryIndex", Storage="_stock2JSOXLibraryIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JSOX Library")]
		public JSOXLib Stock2JSOXLibraryIndex {
			get {
				return this._stock2JSOXLibraryIndex.GetEntity();
			}
			set {
				this._stock2JSOXLibraryIndex.SetEntity(value);
			}
		}
		
		private void OnStockEntryChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("StockEntry", this._stockEntry.Clone());
		}
		
		private void OnStockEntryChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("StockEntry");
		}
		
		private void OnStockEntrySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<StockEntry> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.StockLibraryIndex = this;
			}
			else {
				e.Item.StockLibraryIndex = null;
			}
		}
		
		private void OnStock2JSOXLibraryIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Stock2JSOXLibraryIndex", this._stock2JSOXLibraryIndex.Clone());
		}
		
		private void OnStock2JSOXLibraryIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Stock2JSOXLibraryIndex");
		}
		
		private void OnStock2JSOXLibraryIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.StockLib.Add(this);
			}
			else {
				e.Item.StockLib.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Balance Batch List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="BalanceBatch", Id="0x0100BC0DDC1827F346ED911D777504830C5200673B96617EA2407484DB22020E9F5289")]
	public partial class BalanceBatch : ReportsCommonPart {
		
		private System.Nullable<double> _tobaccoInWarehouse;
		
		private System.Nullable<double> _tobaccoInCigarettesWarehouse;
		
		private System.Nullable<double> _tobaccoInCigarettesProduction;
		
		private System.Nullable<double> _tobaccoInCutfillerWarehouse;
		
		private System.Nullable<double> _balance;
		
		private Microsoft.SharePoint.Linq.EntityRef<JSOXLib> _balance2JSOXLibraryIndex;
		
		private Microsoft.SharePoint.Linq.EntitySet<BalanceIPR> _balanceIPR;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public BalanceBatch() {
			this._balance2JSOXLibraryIndex = new Microsoft.SharePoint.Linq.EntityRef<JSOXLib>();
			this._balance2JSOXLibraryIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXLib>>(this.OnBalance2JSOXLibraryIndexSync);
			this._balance2JSOXLibraryIndex.OnChanged += new System.EventHandler(this.OnBalance2JSOXLibraryIndexChanged);
			this._balance2JSOXLibraryIndex.OnChanging += new System.EventHandler(this.OnBalance2JSOXLibraryIndexChanging);
			this._balanceIPR = new Microsoft.SharePoint.Linq.EntitySet<BalanceIPR>();
			this._balanceIPR.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BalanceIPR>>(this.OnBalanceIPRSync);
			this._balanceIPR.OnChanged += new System.EventHandler(this.OnBalanceIPRChanged);
			this._balanceIPR.OnChanging += new System.EventHandler(this.OnBalanceIPRChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInWarehouse", Storage="_tobaccoInWarehouse", FieldType="Number")]
		public System.Nullable<double> TobaccoInWarehouse {
			get {
				return this._tobaccoInWarehouse;
			}
			set {
				if ((value != this._tobaccoInWarehouse)) {
					this.OnPropertyChanging("TobaccoInWarehouse", this._tobaccoInWarehouse);
					this._tobaccoInWarehouse = value;
					this.OnPropertyChanged("TobaccoInWarehouse");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInCigarettesWarehouse", Storage="_tobaccoInCigarettesWarehouse", FieldType="Number")]
		public System.Nullable<double> TobaccoInCigarettesWarehouse {
			get {
				return this._tobaccoInCigarettesWarehouse;
			}
			set {
				if ((value != this._tobaccoInCigarettesWarehouse)) {
					this.OnPropertyChanging("TobaccoInCigarettesWarehouse", this._tobaccoInCigarettesWarehouse);
					this._tobaccoInCigarettesWarehouse = value;
					this.OnPropertyChanged("TobaccoInCigarettesWarehouse");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInCigarettesProduction", Storage="_tobaccoInCigarettesProduction", FieldType="Number")]
		public System.Nullable<double> TobaccoInCigarettesProduction {
			get {
				return this._tobaccoInCigarettesProduction;
			}
			set {
				if ((value != this._tobaccoInCigarettesProduction)) {
					this.OnPropertyChanging("TobaccoInCigarettesProduction", this._tobaccoInCigarettesProduction);
					this._tobaccoInCigarettesProduction = value;
					this.OnPropertyChanged("TobaccoInCigarettesProduction");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInCutfillerWarehouse", Storage="_tobaccoInCutfillerWarehouse", FieldType="Number")]
		public System.Nullable<double> TobaccoInCutfillerWarehouse {
			get {
				return this._tobaccoInCutfillerWarehouse;
			}
			set {
				if ((value != this._tobaccoInCutfillerWarehouse)) {
					this.OnPropertyChanging("TobaccoInCutfillerWarehouse", this._tobaccoInCutfillerWarehouse);
					this._tobaccoInCutfillerWarehouse = value;
					this.OnPropertyChanged("TobaccoInCutfillerWarehouse");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Balance", Storage="_balance", FieldType="Number")]
		public System.Nullable<double> Balance {
			get {
				return this._balance;
			}
			set {
				if ((value != this._balance)) {
					this.OnPropertyChanging("Balance", this._balance);
					this._balance = value;
					this.OnPropertyChanged("Balance");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Balance2JSOXLibraryIndex", Storage="_balance2JSOXLibraryIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JSOX Library")]
		public JSOXLib Balance2JSOXLibraryIndex {
			get {
				return this._balance2JSOXLibraryIndex.GetEntity();
			}
			set {
				this._balance2JSOXLibraryIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BalanceBatchIndex", Storage="_balanceIPR", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Balance IPR")]
		public Microsoft.SharePoint.Linq.EntitySet<BalanceIPR> BalanceIPR {
			get {
				return this._balanceIPR;
			}
			set {
				this._balanceIPR.Assign(value);
			}
		}
		
		private void OnBalance2JSOXLibraryIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Balance2JSOXLibraryIndex", this._balance2JSOXLibraryIndex.Clone());
		}
		
		private void OnBalance2JSOXLibraryIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Balance2JSOXLibraryIndex");
		}
		
		private void OnBalance2JSOXLibraryIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.BalanceBatch.Add(this);
			}
			else {
				e.Item.BalanceBatch.Remove(this);
			}
		}
		
		private void OnBalanceIPRChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BalanceIPR", this._balanceIPR.Clone());
		}
		
		private void OnBalanceIPRChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BalanceIPR");
		}
		
		private void OnBalanceIPRSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BalanceIPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.BalanceBatchIndex = this;
			}
			else {
				e.Item.BalanceBatchIndex = null;
			}
		}
	}
	
	/// <summary>
	/// Balance IPR content type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="BalanceIPR", Id="0x0100BC0DDC1827F346ED911D777504830C520093C91F91096944EAA9091C44F55FA587")]
	public partial class BalanceIPR : ReportsCommonPart {
		
		private string _customsProcedure;
		
		private string _invoiceNo;
		
		private string _oGLIntroduction;
		
		private System.Nullable<double> _balance;
		
		private Microsoft.SharePoint.Linq.EntityRef<BalanceBatch> _balanceBatchIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<JSOXLib> _balanceIPR2JSOXIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<IPR> _iPRIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public BalanceIPR() {
			this._balanceBatchIndex = new Microsoft.SharePoint.Linq.EntityRef<BalanceBatch>();
			this._balanceBatchIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BalanceBatch>>(this.OnBalanceBatchIndexSync);
			this._balanceBatchIndex.OnChanged += new System.EventHandler(this.OnBalanceBatchIndexChanged);
			this._balanceBatchIndex.OnChanging += new System.EventHandler(this.OnBalanceBatchIndexChanging);
			this._balanceIPR2JSOXIndex = new Microsoft.SharePoint.Linq.EntityRef<JSOXLib>();
			this._balanceIPR2JSOXIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXLib>>(this.OnBalanceIPR2JSOXIndexSync);
			this._balanceIPR2JSOXIndex.OnChanged += new System.EventHandler(this.OnBalanceIPR2JSOXIndexChanged);
			this._balanceIPR2JSOXIndex.OnChanging += new System.EventHandler(this.OnBalanceIPR2JSOXIndexChanging);
			this._iPRIndex = new Microsoft.SharePoint.Linq.EntityRef<IPR>();
			this._iPRIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR>>(this.OnIPRIndexSync);
			this._iPRIndex.OnChanged += new System.EventHandler(this.OnIPRIndexChanged);
			this._iPRIndex.OnChanging += new System.EventHandler(this.OnIPRIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsProcedure", Storage="_customsProcedure", FieldType="Text")]
		public string CustomsProcedure {
			get {
				return this._customsProcedure;
			}
			set {
				if ((value != this._customsProcedure)) {
					this.OnPropertyChanging("CustomsProcedure", this._customsProcedure);
					this._customsProcedure = value;
					this.OnPropertyChanged("CustomsProcedure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceNo", Storage="_invoiceNo", FieldType="Text")]
		public string InvoiceNo {
			get {
				return this._invoiceNo;
			}
			set {
				if ((value != this._invoiceNo)) {
					this.OnPropertyChanging("InvoiceNo", this._invoiceNo);
					this._invoiceNo = value;
					this.OnPropertyChanged("InvoiceNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OGLIntroduction", Storage="_oGLIntroduction", FieldType="Text")]
		public string OGLIntroduction {
			get {
				return this._oGLIntroduction;
			}
			set {
				if ((value != this._oGLIntroduction)) {
					this.OnPropertyChanging("OGLIntroduction", this._oGLIntroduction);
					this._oGLIntroduction = value;
					this.OnPropertyChanged("OGLIntroduction");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Balance", Storage="_balance", FieldType="Number")]
		public System.Nullable<double> Balance {
			get {
				return this._balance;
			}
			set {
				if ((value != this._balance)) {
					this.OnPropertyChanging("Balance", this._balance);
					this._balance = value;
					this.OnPropertyChanged("Balance");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BalanceBatchIndex", Storage="_balanceBatchIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Balance Batch")]
		public BalanceBatch BalanceBatchIndex {
			get {
				return this._balanceBatchIndex.GetEntity();
			}
			set {
				this._balanceBatchIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BalanceIPR2JSOXIndex", Storage="_balanceIPR2JSOXIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JSOX Library")]
		public JSOXLib BalanceIPR2JSOXIndex {
			get {
				return this._balanceIPR2JSOXIndex.GetEntity();
			}
			set {
				this._balanceIPR2JSOXIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPRIndex", Storage="_iPRIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="IPR")]
		public IPR IPRIndex {
			get {
				return this._iPRIndex.GetEntity();
			}
			set {
				this._iPRIndex.SetEntity(value);
			}
		}
		
		private void OnBalanceBatchIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BalanceBatchIndex", this._balanceBatchIndex.Clone());
		}
		
		private void OnBalanceBatchIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BalanceBatchIndex");
		}
		
		private void OnBalanceBatchIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BalanceBatch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.BalanceIPR.Add(this);
			}
			else {
				e.Item.BalanceIPR.Remove(this);
			}
		}
		
		private void OnBalanceIPR2JSOXIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BalanceIPR2JSOXIndex", this._balanceIPR2JSOXIndex.Clone());
		}
		
		private void OnBalanceIPR2JSOXIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BalanceIPR2JSOXIndex");
		}
		
		private void OnBalanceIPR2JSOXIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.BalanceIPR.Add(this);
			}
			else {
				e.Item.BalanceIPR.Remove(this);
			}
		}
		
		private void OnIPRIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPRIndex", this._iPRIndex.Clone());
		}
		
		private void OnIPRIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPRIndex");
		}
		
		private void OnIPRIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.BalanceIPR.Add(this);
			}
			else {
				e.Item.BalanceIPR.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Cigarette SKU List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SKUCigarette", Id="0x010014C98F440FB04C679F1D9D39ACC92D8A0029E2E9BC132C4633B01B0DF733A64ADA")]
	public partial class SKUCigarette : SKUCommonPart {
		
		private string _family;
		
		private string _brand;
		
		private string _cigaretteLenght;
		
		private string _filterLenght;
		
		private string _primeMarket;
		
		private System.Nullable<bool> _mentholMaterial;
		
		private string _menthol;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SKUCigarette() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Family", Storage="_family", FieldType="Text")]
		public string Family {
			get {
				return this._family;
			}
			set {
				if ((value != this._family)) {
					this.OnPropertyChanging("Family", this._family);
					this._family = value;
					this.OnPropertyChanged("Family");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Brand", Storage="_brand", FieldType="Text")]
		public string Brand {
			get {
				return this._brand;
			}
			set {
				if ((value != this._brand)) {
					this.OnPropertyChanging("Brand", this._brand);
					this._brand = value;
					this.OnPropertyChanged("Brand");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CigaretteLenght", Storage="_cigaretteLenght", FieldType="Text")]
		public string CigaretteLenght {
			get {
				return this._cigaretteLenght;
			}
			set {
				if ((value != this._cigaretteLenght)) {
					this.OnPropertyChanging("CigaretteLenght", this._cigaretteLenght);
					this._cigaretteLenght = value;
					this.OnPropertyChanged("CigaretteLenght");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FilterLenght", Storage="_filterLenght", FieldType="Text")]
		public string FilterLenght {
			get {
				return this._filterLenght;
			}
			set {
				if ((value != this._filterLenght)) {
					this.OnPropertyChanging("FilterLenght", this._filterLenght);
					this._filterLenght = value;
					this.OnPropertyChanged("FilterLenght");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PrimeMarket", Storage="_primeMarket", FieldType="Text")]
		public string PrimeMarket {
			get {
				return this._primeMarket;
			}
			set {
				if ((value != this._primeMarket)) {
					this.OnPropertyChanging("PrimeMarket", this._primeMarket);
					this._primeMarket = value;
					this.OnPropertyChanged("PrimeMarket");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MentholMaterial", Storage="_mentholMaterial", FieldType="Boolean")]
		public System.Nullable<bool> MentholMaterial {
			get {
				return this._mentholMaterial;
			}
			set {
				if ((value != this._mentholMaterial)) {
					this.OnPropertyChanging("MentholMaterial", this._mentholMaterial);
					this._mentholMaterial = value;
					this.OnPropertyChanged("MentholMaterial");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Menthol", Storage="_menthol", FieldType="Text")]
		public string Menthol {
			get {
				return this._menthol;
			}
			set {
				if ((value != this._menthol)) {
					this.OnPropertyChanging("Menthol", this._menthol);
					this._menthol = value;
					this.OnPropertyChanged("Menthol");
				}
			}
		}
	}
	
	/// <summary>
	/// Cutfiller SKU List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SKUCutfiller", Id="0x010014C98F440FB04C679F1D9D39ACC92D8A00AE74B7010F534DB980D221D41D0BCBA1")]
	public partial class SKUCutfiller : SKUCommonPart {
		
		private string _units;
		
		private string _blendPurpose;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SKUCutfiller() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BlendPurpose", Storage="_blendPurpose", FieldType="Text")]
		public string BlendPurpose {
			get {
				return this._blendPurpose;
			}
			set {
				if ((value != this._blendPurpose)) {
					this.OnPropertyChanging("BlendPurpose", this._blendPurpose);
					this._blendPurpose = value;
					this.OnPropertyChanged("BlendPurpose");
				}
			}
		}
	}
	
	public enum ProductType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Cutfiller")]
		Cutfiller = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Cigarette")]
		Cigarette = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco")]
		Tobacco = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="IPRTobacco")]
		IPRTobacco = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Other")]
		Other = 32,
	}
	
	public enum BatchStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Progress")]
		Progress = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Intermediate")]
		Intermediate = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Final")]
		Final = 8,
	}
	
	public enum ClearenceProcedure : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3151")]
		_3151 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3171")]
		_3171 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4051")]
		_4051 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4071")]
		_4071 = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="5100")]
		_5100 = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="5171")]
		_5171 = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="7100")]
		_7100 = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="7171")]
		_7171 = 256,
	}
	
	public enum DisposalStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Dust")]
		Dust = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="SH Menthol")]
		SHMenthol = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waste")]
		Waste = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Overuse")]
		Overuse = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Cartons")]
		Cartons = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco")]
		Tobacco = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cigaretes")]
		TobaccoInCigaretes = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cigaretes destination EU")]
		TobaccoInCigaretesDestinationEU = 256,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cigaretes production")]
		TobaccoInCigaretesProduction = 512,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cutfiller")]
		TobaccoInCutfiller = 1024,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cutfiller destination EU")]
		TobaccoInCutfillerDestinationEU = 2048,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cutfiller production")]
		TobaccoInCutfillerProduction = 4096,
	}
	
	public enum CustomsStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Not started")]
		NotStarted = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Started")]
		Started = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Finished")]
		Finished = 8,
	}
	
	public enum ClearingType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Partial winding-up")]
		PartialWindingUp = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Total winding-up")]
		TotalWindingUp = 4,
	}
	
	public enum InvoiceContentStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="OK")]
		OK = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Not enough Qnt.")]
		NotEnoughQnt = 4,
	}
}
#pragma warning restore 1591
