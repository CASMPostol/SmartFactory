//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:2.0.50727.5448
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.SmartFactory.IPR.Entities {
	using System;
	
	
	public partial class EntitiesDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public EntitiesDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// It contains logged messages.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Activity Log")]
		public Microsoft.SharePoint.Linq.EntityList<Anons> ActivityLog {
			get {
				return this.GetList<Anons>("Activity Log");
			}
		}
		
		/// <summary>
		/// SADDocument - collection of all customs declaration.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Document")]
		public Microsoft.SharePoint.Linq.EntityList<SADDocumentType> SADDocument {
			get {
				return this.GetList<SADDocumentType>("SAD Document");
			}
		}
		
		/// <summary>
		/// SAD Duties List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Duties")]
		public Microsoft.SharePoint.Linq.EntityList<SADDuties> SADDuties {
			get {
				return this.GetList<SADDuties>("SAD Duties");
			}
		}
		
		/// <summary>
		/// The SAD Good List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Good")]
		public Microsoft.SharePoint.Linq.EntityList<SADGood> SADGood {
			get {
				return this.GetList<SADGood>("SAD Good");
			}
		}
		
		/// <summary>
		/// The SAD Package List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Package")]
		public Microsoft.SharePoint.Linq.EntityList<SADPackage> SADPackage {
			get {
				return this.GetList<SADPackage>("SAD Package");
			}
		}
		
		/// <summary>
		/// The SAD Quantity List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Quantity")]
		public Microsoft.SharePoint.Linq.EntityList<SADQuantity> SADQuantity {
			get {
				return this.GetList<SADQuantity>("SAD Quantity");
			}
		}
		
		/// <summary>
		/// The SAD Required Documents List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Required Documents")]
		public Microsoft.SharePoint.Linq.EntityList<SADRequiredDocuments> SADRequiredDocuments {
			get {
				return this.GetList<SADRequiredDocuments>("SAD Required Documents");
			}
		}
		
		/// <summary>
		/// Use the style library to store style sheets, such as CSS or XSL files. The style sheets in this gallery can be used by this site or any of its subsites.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Style Library")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> StyleLibrary {
			get {
				return this.GetList<Dokument>("Style Library");
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Element", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Anons))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Dokument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADDuties))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADGood))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADPackage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADQuantity))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADRequiredDocuments))]
	public partial class Element : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _identyfikator;
		
		private System.Nullable<int> _wersja;
		
		private string _ścieżka;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		private string _tytuł;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Element() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_identyfikator", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Identyfikator {
			get {
				return this._identyfikator;
			}
			set {
				if ((value != this._identyfikator)) {
					this.OnPropertyChanging("Identyfikator", this._identyfikator);
					this._identyfikator = value;
					this.OnPropertyChanged("Identyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_wersja", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Wersja {
			get {
				return this._wersja;
			}
			set {
				if ((value != this._wersja)) {
					this.OnPropertyChanging("Wersja", this._wersja);
					this._wersja = value;
					this.OnPropertyChanged("Wersja");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_ścieżka", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Ścieżka {
			get {
				return this._ścieżka;
			}
			set {
				if ((value != this._ścieżka)) {
					this.OnPropertyChanging("Ścieżka", this._ścieżka);
					this._ścieżka = value;
					this.OnPropertyChanged("Ścieżka");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_tytuł", Required=true, FieldType="Text")]
		public virtual string Tytuł {
			get {
				return this._tytuł;
			}
			set {
				if ((value != this._tytuł)) {
					this.OnPropertyChanging("Tytuł", this._tytuł);
					this._tytuł = value;
					this.OnPropertyChanged("Tytuł");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element wiadomości, stan lub inną krótką informację.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Anons", Id="0x0104")]
	public partial class Anons : Element {
		
		private string _treść;
		
		private System.Nullable<System.DateTime> _wygasa;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Anons() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_treść", FieldType="Note")]
		public string Treść {
			get {
				return this._treść;
			}
			set {
				if ((value != this._treść)) {
					this.OnPropertyChanging("Treść", this._treść);
					this._treść = value;
					this.OnPropertyChanged("Treść");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_wygasa", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Wygasa {
			get {
				return this._wygasa;
			}
			set {
				if ((value != this._wygasa)) {
					this.OnPropertyChanging("Wygasa", this._wygasa);
					this._wygasa = value;
					this.OnPropertyChanged("Wygasa");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Dokument", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADDocumentType))]
	public partial class Dokument : Element {
		
		private string _nazwa;
		
		private string _dokumentZmodyfikowanyPrzez;
		
		private string _dokumentUtworzonyPrzez;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Dokument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_nazwa", Required=true, FieldType="File")]
		public string Nazwa {
			get {
				return this._nazwa;
			}
			set {
				if ((value != this._nazwa)) {
					this.OnPropertyChanging("Nazwa", this._nazwa);
					this._nazwa = value;
					this.OnPropertyChanged("Nazwa");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_dokumentZmodyfikowanyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentZmodyfikowanyPrzez {
			get {
				return this._dokumentZmodyfikowanyPrzez;
			}
			set {
				if ((value != this._dokumentZmodyfikowanyPrzez)) {
					this.OnPropertyChanging("DokumentZmodyfikowanyPrzez", this._dokumentZmodyfikowanyPrzez);
					this._dokumentZmodyfikowanyPrzez = value;
					this.OnPropertyChanged("DokumentZmodyfikowanyPrzez");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_dokumentUtworzonyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentUtworzonyPrzez {
			get {
				return this._dokumentUtworzonyPrzez;
			}
			set {
				if ((value != this._dokumentUtworzonyPrzez)) {
					this.OnPropertyChanging("DokumentUtworzonyPrzez", this._dokumentUtworzonyPrzez);
					this._dokumentUtworzonyPrzez = value;
					this.OnPropertyChanged("DokumentUtworzonyPrzez");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADDuties", Id="0x0100307F2A8F2886D24FBF3393F84E0E616B")]
	public partial class SADDuties : Element {
		
		private string _type;
		
		private System.Nullable<double> _amount;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADGoodLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADDuties() {
			this._sADGoodLookup = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADGoodLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodLookupSync);
			this._sADGoodLookup.OnChanged += new System.EventHandler(this.OnSADGoodLookupChanged);
			this._sADGoodLookup.OnChanging += new System.EventHandler(this.OnSADGoodLookupChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Type", Storage="_type", FieldType="Text")]
		public string Type {
			get {
				return this._type;
			}
			set {
				if ((value != this._type)) {
					this.OnPropertyChanging("Type", this._type);
					this._type = value;
					this.OnPropertyChanged("Type");
				}
			}
		}
		
		/// <summary>
		/// Amount
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Amount", Storage="_amount", FieldType="Number")]
		public System.Nullable<double> Amount {
			get {
				return this._amount;
			}
			set {
				if ((value != this._amount)) {
					this.OnPropertyChanging("Amount", this._amount);
					this._amount = value;
					this.OnPropertyChanged("Amount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADGoodIndex", Storage="_sADGoodLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADGoodLookup {
			get {
				return this._sADGoodLookup.GetEntity();
			}
			set {
				this._sADGoodLookup.SetEntity(value);
			}
		}
		
		private void OnSADGoodLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGoodLookup", this._sADGoodLookup.Clone());
		}
		
		private void OnSADGoodLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGoodLookup");
		}
		
		private void OnSADGoodLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADGood", Id="0x01003016924817E4AF4A9AD790284C0BAE65")]
	public partial class SADGood : Element {
		
		private System.Nullable<double> _itemNo;
		
		private string _goodsDescription;
		
		private string _pCNTariffCode;
		
		private System.Nullable<double> _grossMass;
		
		private string _procedure;
		
		private System.Nullable<double> _totalAmountInvoiced;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADDocumentType> _sADDocumentLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADGood() {
			this._sADDocumentLookup = new Microsoft.SharePoint.Linq.EntityRef<SADDocumentType>();
			this._sADDocumentLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType>>(this.OnSADDocumentLookupSync);
			this._sADDocumentLookup.OnChanged += new System.EventHandler(this.OnSADDocumentLookupChanged);
			this._sADDocumentLookup.OnChanging += new System.EventHandler(this.OnSADDocumentLookupChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// PozID
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		/// <summary>
		/// TBD
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsDescription", Storage="_goodsDescription", FieldType="Text")]
		public string GoodsDescription {
			get {
				return this._goodsDescription;
			}
			set {
				if ((value != this._goodsDescription)) {
					this.OnPropertyChanging("GoodsDescription", this._goodsDescription);
					this._goodsDescription = value;
					this.OnPropertyChanged("GoodsDescription");
				}
			}
		}
		
		/// <summary>
		/// Kod taryfy PCN
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PCNTariffCode", Storage="_pCNTariffCode", FieldType="Text")]
		public string PCNTariffCode {
			get {
				return this._pCNTariffCode;
			}
			set {
				if ((value != this._pCNTariffCode)) {
					this.OnPropertyChanging("PCNTariffCode", this._pCNTariffCode);
					this._pCNTariffCode = value;
					this.OnPropertyChanged("PCNTariffCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GrossMass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		/// <summary>
		/// Procedura celna
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Procedure", Storage="_procedure", FieldType="Text")]
		public string Procedure {
			get {
				return this._procedure;
			}
			set {
				if ((value != this._procedure)) {
					this.OnPropertyChanging("Procedure", this._procedure);
					this._procedure = value;
					this.OnPropertyChanged("Procedure");
				}
			}
		}
		
		/// <summary>
		/// Wartość
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TotalAmountInvoiced", Storage="_totalAmountInvoiced", FieldType="Number")]
		public System.Nullable<double> TotalAmountInvoiced {
			get {
				return this._totalAmountInvoiced;
			}
			set {
				if ((value != this._totalAmountInvoiced)) {
					this.OnPropertyChanging("TotalAmountInvoiced", this._totalAmountInvoiced);
					this._totalAmountInvoiced = value;
					this.OnPropertyChanged("TotalAmountInvoiced");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumentIndex", Storage="_sADDocumentLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Document")]
		public SADDocumentType SADDocumentLookup {
			get {
				return this._sADDocumentLookup.GetEntity();
			}
			set {
				this._sADDocumentLookup.SetEntity(value);
			}
		}
		
		private void OnSADDocumentLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDocumentLookup", this._sADDocumentLookup.Clone());
		}
		
		private void OnSADDocumentLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDocumentLookup");
		}
		
		private void OnSADDocumentLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADGood.Add(this);
			}
			else {
				e.Item.SADGood.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADPackage", Id="0x01007F42F9669FE35A41801B017E1D69C7D9")]
	public partial class SADPackage : Element {
		
		private System.Nullable<double> _itemNo;
		
		private string _package;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADGoodLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADPackage() {
			this._sADGoodLookup = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADGoodLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodLookupSync);
			this._sADGoodLookup.OnChanged += new System.EventHandler(this.OnSADGoodLookupChanged);
			this._sADGoodLookup.OnChanging += new System.EventHandler(this.OnSADGoodLookupChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// PozID
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		/// <summary>
		/// Rodzaj opakowania
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Package", Storage="_package", FieldType="Text")]
		public string Package {
			get {
				return this._package;
			}
			set {
				if ((value != this._package)) {
					this.OnPropertyChanging("Package", this._package);
					this._package = value;
					this.OnPropertyChanged("Package");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADGoodIndex", Storage="_sADGoodLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADGoodLookup {
			get {
				return this._sADGoodLookup.GetEntity();
			}
			set {
				this._sADGoodLookup.SetEntity(value);
			}
		}
		
		private void OnSADGoodLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGoodLookup", this._sADGoodLookup.Clone());
		}
		
		private void OnSADGoodLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGoodLookup");
		}
		
		private void OnSADGoodLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADQuantity", Id="0x010016BC5B99EA5169458266BB52B8784B3F")]
	public partial class SADQuantity : Element {
		
		private System.Nullable<double> _itemNo;
		
		private System.Nullable<double> _netMass;
		
		private string _units;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADGoodLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADQuantity() {
			this._sADGoodLookup = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADGoodLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodLookupSync);
			this._sADGoodLookup.OnChanged += new System.EventHandler(this.OnSADGoodLookupChanged);
			this._sADGoodLookup.OnChanging += new System.EventHandler(this.OnSADGoodLookupChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// PozID
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		/// <summary>
		/// Net mass
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NetMass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		/// <summary>
		/// j.m.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADGoodIndex", Storage="_sADGoodLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADGoodLookup {
			get {
				return this._sADGoodLookup.GetEntity();
			}
			set {
				this._sADGoodLookup.SetEntity(value);
			}
		}
		
		private void OnSADGoodLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGoodLookup", this._sADGoodLookup.Clone());
		}
		
		private void OnSADGoodLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGoodLookup");
		}
		
		private void OnSADGoodLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADRequiredDocuments", Id="0x0100CAF95BD14627B343981DE5345DD0BD37")]
	public partial class SADRequiredDocuments : Element {
		
		private string _code;
		
		private string _number;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADGoodLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADRequiredDocuments() {
			this._sADGoodLookup = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADGoodLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodLookupSync);
			this._sADGoodLookup.OnChanged += new System.EventHandler(this.OnSADGoodLookupChanged);
			this._sADGoodLookup.OnChanging += new System.EventHandler(this.OnSADGoodLookupChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Code", Storage="_code", FieldType="Text")]
		public string Code {
			get {
				return this._code;
			}
			set {
				if ((value != this._code)) {
					this.OnPropertyChanging("Code", this._code);
					this._code = value;
					this.OnPropertyChanged("Code");
				}
			}
		}
		
		/// <summary>
		/// Number
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Number", Storage="_number", FieldType="Text")]
		public string Number {
			get {
				return this._number;
			}
			set {
				if ((value != this._number)) {
					this.OnPropertyChanging("Number", this._number);
					this._number = value;
					this.OnPropertyChanged("Number");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADGoodIndex", Storage="_sADGoodLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADGoodLookup {
			get {
				return this._sADGoodLookup.GetEntity();
			}
			set {
				this._sADGoodLookup.SetEntity(value);
			}
		}
		
		private void OnSADGoodLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGoodLookup", this._sADGoodLookup.Clone());
		}
		
		private void OnSADGoodLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGoodLookup");
		}
		
		private void OnSADGoodLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADDocumentType", Id="0x010100844099FC49B54D30A1516EA17A6883FC")]
	public partial class SADDocumentType : Dokument {
		
		private string _referenceNumber;
		
		private System.Nullable<System.DateTime> _customsDebtDate;
		
		private string _documentNumber;
		
		private string _currency;
		
		private System.Nullable<double> _exchangeRate;
		
		private System.Nullable<double> _grossMass;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADGood> _sADGood;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADDocumentType() {
			this._sADGood = new Microsoft.SharePoint.Linq.EntitySet<SADGood>();
			this._sADGood.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodSync);
			this._sADGood.OnChanged += new System.EventHandler(this.OnSADGoodChanged);
			this._sADGood.OnChanging += new System.EventHandler(this.OnSADGoodChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// SAD Document Reference Number - box 7.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReferenceNumber", Storage="_referenceNumber", FieldType="Text")]
		public string ReferenceNumber {
			get {
				return this._referenceNumber;
			}
			set {
				if ((value != this._referenceNumber)) {
					this.OnPropertyChanging("ReferenceNumber", this._referenceNumber);
					this._referenceNumber = value;
					this.OnPropertyChanged("ReferenceNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsDebtDate", Storage="_customsDebtDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CustomsDebtDate {
			get {
				return this._customsDebtDate;
			}
			set {
				if ((value != this._customsDebtDate)) {
					this.OnPropertyChanging("CustomsDebtDate", this._customsDebtDate);
					this._customsDebtDate = value;
					this.OnPropertyChanged("CustomsDebtDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNumber", Storage="_documentNumber", FieldType="Text")]
		public string DocumentNumber {
			get {
				return this._documentNumber;
			}
			set {
				if ((value != this._documentNumber)) {
					this.OnPropertyChanging("DocumentNumber", this._documentNumber);
					this._documentNumber = value;
					this.OnPropertyChanged("DocumentNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Currency", Storage="_currency", FieldType="Text")]
		public string Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExchangeRate", Storage="_exchangeRate", FieldType="Number")]
		public System.Nullable<double> ExchangeRate {
			get {
				return this._exchangeRate;
			}
			set {
				if ((value != this._exchangeRate)) {
					this.OnPropertyChanging("ExchangeRate", this._exchangeRate);
					this._exchangeRate = value;
					this.OnPropertyChanged("ExchangeRate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GrossMass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumentIndex", Storage="_sADGood", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Good")]
		public Microsoft.SharePoint.Linq.EntitySet<SADGood> SADGood {
			get {
				return this._sADGood;
			}
			set {
				this._sADGood.Assign(value);
			}
		}
		
		private void OnSADGoodChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGood", this._sADGood.Clone());
		}
		
		private void OnSADGoodChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGood");
		}
		
		private void OnSADGoodSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDocumentLookup = this;
			}
			else {
				e.Item.SADDocumentLookup = null;
			}
		}
	}
}
