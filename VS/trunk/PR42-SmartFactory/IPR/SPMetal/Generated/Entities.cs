//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:2.0.50727.5448
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.SmartFactory.IPR.Entities {
	using System;
	
	
	public partial class EntitiesDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public EntitiesDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// It contains logged messages.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Activity Log")]
		public Microsoft.SharePoint.Linq.EntityList<Anons> ActivityLog {
			get {
				return this.GetList<Anons>("Activity Log");
			}
		}
		
		/// <summary>
		/// SAD xml files collection
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> SAD {
			get {
				return this.GetList<Dokument>("SAD");
			}
		}
		
		/// <summary>
		/// My List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SADCommodity")]
		public Microsoft.SharePoint.Linq.EntityList<SADCommodity> SADCommodity {
			get {
				return this.GetList<SADCommodity>("SADCommodity");
			}
		}
		
		/// <summary>
		/// Use the style library to store style sheets, such as CSS or XSL files. The style sheets in this gallery can be used by this site or any of its subsites.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Style Library")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> StyleLibrary {
			get {
				return this.GetList<Dokument>("Style Library");
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Element", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Anons))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Dokument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADCommodity))]
	public partial class Element : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _identyfikator;
		
		private System.Nullable<int> _wersja;
		
		private string _ścieżka;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		private string _tytuł;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Element() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_identyfikator", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Identyfikator {
			get {
				return this._identyfikator;
			}
			set {
				if ((value != this._identyfikator)) {
					this.OnPropertyChanging("Identyfikator", this._identyfikator);
					this._identyfikator = value;
					this.OnPropertyChanged("Identyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_wersja", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Wersja {
			get {
				return this._wersja;
			}
			set {
				if ((value != this._wersja)) {
					this.OnPropertyChanging("Wersja", this._wersja);
					this._wersja = value;
					this.OnPropertyChanged("Wersja");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_ścieżka", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Ścieżka {
			get {
				return this._ścieżka;
			}
			set {
				if ((value != this._ścieżka)) {
					this.OnPropertyChanging("Ścieżka", this._ścieżka);
					this._ścieżka = value;
					this.OnPropertyChanged("Ścieżka");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_tytuł", Required=true, FieldType="Text")]
		public virtual string Tytuł {
			get {
				return this._tytuł;
			}
			set {
				if ((value != this._tytuł)) {
					this.OnPropertyChanging("Tytuł", this._tytuł);
					this._tytuł = value;
					this.OnPropertyChanged("Tytuł");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element wiadomości, stan lub inną krótką informację.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Anons", Id="0x0104")]
	public partial class Anons : Element {
		
		private string _treść;
		
		private System.Nullable<System.DateTime> _wygasa;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Anons() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_treść", FieldType="Note")]
		public string Treść {
			get {
				return this._treść;
			}
			set {
				if ((value != this._treść)) {
					this.OnPropertyChanging("Treść", this._treść);
					this._treść = value;
					this.OnPropertyChanged("Treść");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_wygasa", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Wygasa {
			get {
				return this._wygasa;
			}
			set {
				if ((value != this._wygasa)) {
					this.OnPropertyChanging("Wygasa", this._wygasa);
					this._wygasa = value;
					this.OnPropertyChanged("Wygasa");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Dokument", Id="0x0101")]
	public partial class Dokument : Element {
		
		private string _nazwa;
		
		private string _dokumentZmodyfikowanyPrzez;
		
		private string _dokumentUtworzonyPrzez;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Dokument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_nazwa", Required=true, FieldType="File")]
		public string Nazwa {
			get {
				return this._nazwa;
			}
			set {
				if ((value != this._nazwa)) {
					this.OnPropertyChanging("Nazwa", this._nazwa);
					this._nazwa = value;
					this.OnPropertyChanged("Nazwa");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_dokumentZmodyfikowanyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentZmodyfikowanyPrzez {
			get {
				return this._dokumentZmodyfikowanyPrzez;
			}
			set {
				if ((value != this._dokumentZmodyfikowanyPrzez)) {
					this.OnPropertyChanging("DokumentZmodyfikowanyPrzez", this._dokumentZmodyfikowanyPrzez);
					this._dokumentZmodyfikowanyPrzez = value;
					this.OnPropertyChanged("DokumentZmodyfikowanyPrzez");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_dokumentUtworzonyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentUtworzonyPrzez {
			get {
				return this._dokumentUtworzonyPrzez;
			}
			set {
				if ((value != this._dokumentUtworzonyPrzez)) {
					this.OnPropertyChanging("DokumentUtworzonyPrzez", this._dokumentUtworzonyPrzez);
					this._dokumentUtworzonyPrzez = value;
					this.OnPropertyChanged("DokumentUtworzonyPrzez");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SAD.Commodity", Id="0x01003016924817E4AF4A9AD790284C0BAE65")]
	public partial class SADCommodity : Element {
		
		private string _goodsName;
		
		private System.Nullable<double> _type;
		
		private string _sKU;
		
		private string _batch;
		
		private System.Nullable<double> _netMass;
		
		private string _pCNTariffCode;
		
		private System.Nullable<double> _grossMass;
		
		private string _procedure;
		
		private string _package;
		
		private string _totalAmountInvoiced;
		
		private System.Nullable<double> _duty;
		
		private System.Nullable<double> _vAT;
		
		private string _units;
		
		private System.Nullable<double> _cartonsInKg;
		
		private System.Nullable<double> _unitPrice;
		
		private System.Nullable<double> _dutyUnit;
		
		private System.Nullable<double> _vATUnit;
		
		private System.Nullable<double> _itemNo;
		
		private System.Nullable<int> _parentListIdentyfikator;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADCommodity() {
			this.OnCreated();
		}
		
		/// <summary>
		/// Nazwa
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsName", Storage="_goodsName", FieldType="Text")]
		public string GoodsName {
			get {
				return this._goodsName;
			}
			set {
				if ((value != this._goodsName)) {
					this.OnPropertyChanging("GoodsName", this._goodsName);
					this._goodsName = value;
					this.OnPropertyChanged("GoodsName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Type", Storage="_type", FieldType="Number")]
		public System.Nullable<double> Type {
			get {
				return this._type;
			}
			set {
				if ((value != this._type)) {
					this.OnPropertyChanging("Type", this._type);
					this._type = value;
					this.OnPropertyChanged("Type");
				}
			}
		}
		
		/// <summary>
		/// sku
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		/// <summary>
		/// Batch
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Net_x0020_mass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		/// <summary>
		/// Kod taryfy PCN
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PCN_x0020_tariff_x0020_code", Storage="_pCNTariffCode", FieldType="Text")]
		public string PCNTariffCode {
			get {
				return this._pCNTariffCode;
			}
			set {
				if ((value != this._pCNTariffCode)) {
					this.OnPropertyChanging("PCNTariffCode", this._pCNTariffCode);
					this._pCNTariffCode = value;
					this.OnPropertyChanged("PCNTariffCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Gross_x0020_mass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		/// <summary>
		/// Procedura celna
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Procedure", Storage="_procedure", FieldType="Text")]
		public string Procedure {
			get {
				return this._procedure;
			}
			set {
				if ((value != this._procedure)) {
					this.OnPropertyChanging("Procedure", this._procedure);
					this._procedure = value;
					this.OnPropertyChanged("Procedure");
				}
			}
		}
		
		/// <summary>
		/// Rodzaj opakowania
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Package", Storage="_package", FieldType="Text")]
		public string Package {
			get {
				return this._package;
			}
			set {
				if ((value != this._package)) {
					this.OnPropertyChanging("Package", this._package);
					this._package = value;
					this.OnPropertyChanged("Package");
				}
			}
		}
		
		/// <summary>
		/// Wartość
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Total_x0020_amount_x0020_invoice", Storage="_totalAmountInvoiced", FieldType="Text")]
		public string TotalAmountInvoiced {
			get {
				return this._totalAmountInvoiced;
			}
			set {
				if ((value != this._totalAmountInvoiced)) {
					this.OnPropertyChanging("TotalAmountInvoiced", this._totalAmountInvoiced);
					this._totalAmountInvoiced = value;
					this.OnPropertyChanged("TotalAmountInvoiced");
				}
			}
		}
		
		/// <summary>
		/// Cło
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Duty", Storage="_duty", FieldType="Number")]
		public System.Nullable<double> Duty {
			get {
				return this._duty;
			}
			set {
				if ((value != this._duty)) {
					this.OnPropertyChanging("Duty", this._duty);
					this._duty = value;
					this.OnPropertyChanged("Duty");
				}
			}
		}
		
		/// <summary>
		/// Vat
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VAT", Storage="_vAT", FieldType="Number")]
		public System.Nullable<double> VAT {
			get {
				return this._vAT;
			}
			set {
				if ((value != this._vAT)) {
					this.OnPropertyChanging("VAT", this._vAT);
					this._vAT = value;
					this.OnPropertyChanged("VAT");
				}
			}
		}
		
		/// <summary>
		/// j.m.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		/// <summary>
		/// Kartony w kg
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Cartons_x0020_in_x0020_kg", Storage="_cartonsInKg", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> CartonsInKg {
			get {
				return this._cartonsInKg;
			}
			set {
				if ((value != this._cartonsInKg)) {
					this.OnPropertyChanging("CartonsInKg", this._cartonsInKg);
					this._cartonsInKg = value;
					this.OnPropertyChanged("CartonsInKg");
				}
			}
		}
		
		/// <summary>
		/// Cena jednostkowa
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Unit_x0020_price", Storage="_unitPrice", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> UnitPrice {
			get {
				return this._unitPrice;
			}
			set {
				if ((value != this._unitPrice)) {
					this.OnPropertyChanging("UnitPrice", this._unitPrice);
					this._unitPrice = value;
					this.OnPropertyChanged("UnitPrice");
				}
			}
		}
		
		/// <summary>
		/// Cło na j.m.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Duty_x002e_Unit", Storage="_dutyUnit", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> DutyUnit {
			get {
				return this._dutyUnit;
			}
			set {
				if ((value != this._dutyUnit)) {
					this.OnPropertyChanging("DutyUnit", this._dutyUnit);
					this._dutyUnit = value;
					this.OnPropertyChanged("DutyUnit");
				}
			}
		}
		
		/// <summary>
		/// VAT na j.m.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VAT_x002e_Unit", Storage="_vATUnit", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> VATUnit {
			get {
				return this._vATUnit;
			}
			set {
				if ((value != this._vATUnit)) {
					this.OnPropertyChanging("VATUnit", this._vATUnit);
					this._vATUnit = value;
					this.OnPropertyChanged("VATUnit");
				}
			}
		}
		
		/// <summary>
		/// PozID
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Item_x0020_No", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		/// <summary>
		/// Foreign key
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParentList", Storage="_parentListIdentyfikator", Required=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> ParentListIdentyfikator {
			get {
				return this._parentListIdentyfikator;
			}
			set {
				if ((value != this._parentListIdentyfikator)) {
					this.OnPropertyChanging("ParentListIdentyfikator", this._parentListIdentyfikator);
					this._parentListIdentyfikator = value;
					this.OnPropertyChanged("ParentListIdentyfikator");
				}
			}
		}
	}
}
