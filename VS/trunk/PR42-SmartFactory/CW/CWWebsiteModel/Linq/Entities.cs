//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.SmartFactory.CW.WebsiteModel.Linq {
	using System;
	
	
	public partial class Entities : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public Entities(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// Activity Log List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Activity Log")]
		public Microsoft.SharePoint.Linq.EntityList<ActivityLogCT> ActivityLog {
			get {
				return this.GetList<ActivityLogCT>("Activity Log");
			}
		}
		
		/// <summary>
		/// Bin Card Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Bin Card Library")]
		public Microsoft.SharePoint.Linq.EntityList<BinCardLib> BinCardLibrary {
			get {
				return this.GetList<BinCardLib>("Bin Card Library");
			}
		}
		
		/// <summary>
		/// Clearence List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Clearence")]
		public Microsoft.SharePoint.Linq.EntityList<Clearence> Clearence {
			get {
				return this.GetList<Clearence>("Clearence");
			}
		}
		
		/// <summary>
		/// Consent List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Consent")]
		public Microsoft.SharePoint.Linq.EntityList<Consent> Consent {
			get {
				return this.GetList<Consent>("Consent");
			}
		}
		
		/// <summary>
		/// Customs Union List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Customs Union")]
		public Microsoft.SharePoint.Linq.EntityList<CustomsUnion> CustomsUnion {
			get {
				return this.GetList<CustomsUnion>("Customs Union");
			}
		}
		
		/// <summary>
		/// Customs Warehouse List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Customs Warehouse")]
		public Microsoft.SharePoint.Linq.EntityList<CustomsWarehouse> CustomsWarehouse {
			get {
				return this.GetList<CustomsWarehouse>("Customs Warehouse");
			}
		}
		
		/// <summary>
		/// Customs Warehouse Disposal List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Customs Warehouse Disposal")]
		public Microsoft.SharePoint.Linq.EntityList<CustomsWarehouseDisposal> CustomsWarehouseDisposal {
			get {
				return this.GetList<CustomsWarehouseDisposal>("Customs Warehouse Disposal");
			}
		}
		
		/// <summary>
		/// Customs Warehouse Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Customs Warehouse Library")]
		public Microsoft.SharePoint.Linq.EntityList<CustomsWarehouseLib> CustomsWarehouseLibrary {
			get {
				return this.GetList<CustomsWarehouseLib>("Customs Warehouse Library");
			}
		}
		
		/// <summary>
		/// Disposa Request Content List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Disposa Request Content")]
		public Microsoft.SharePoint.Linq.EntityList<DisposalRequestContent> DisposaRequestContent {
			get {
				return this.GetList<DisposalRequestContent>("Disposa Request Content");
			}
		}
		
		/// <summary>
		/// Disposal Request Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Disposal Request Library")]
		public Microsoft.SharePoint.Linq.EntityList<DisposalRequestLib> DisposalRequestLibrary {
			get {
				return this.GetList<DisposalRequestLib>("Disposal Request Library");
			}
		}
		
		/// <summary>
		/// PCN Code List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="PCN Code")]
		public Microsoft.SharePoint.Linq.EntityList<PCNCode> PCNCode {
			get {
				return this.GetList<PCNCode>("PCN Code");
			}
		}
		
		/// <summary>
		/// SAD Consignment Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Consignment")]
		public Microsoft.SharePoint.Linq.EntityList<SADConsignment> SADConsignment {
			get {
				return this.GetList<SADConsignment>("SAD Consignment");
			}
		}
		
		/// <summary>
		/// My List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Document")]
		public Microsoft.SharePoint.Linq.EntityList<SADDocumentType> SADDocument {
			get {
				return this.GetList<SADDocumentType>("SAD Document");
			}
		}
		
		/// <summary>
		/// SAD Document Library List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Document Library")]
		public Microsoft.SharePoint.Linq.EntityList<SADDocumentLib> SADDocumentLibrary {
			get {
				return this.GetList<SADDocumentLib>("SAD Document Library");
			}
		}
		
		/// <summary>
		/// SAD Duties List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Duties")]
		public Microsoft.SharePoint.Linq.EntityList<SADDuties> SADDuties {
			get {
				return this.GetList<SADDuties>("SAD Duties");
			}
		}
		
		/// <summary>
		/// The SAD Good List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Good")]
		public Microsoft.SharePoint.Linq.EntityList<SADGood> SADGood {
			get {
				return this.GetList<SADGood>("SAD Good");
			}
		}
		
		/// <summary>
		/// The SAD Package List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Package")]
		public Microsoft.SharePoint.Linq.EntityList<SADPackage> SADPackage {
			get {
				return this.GetList<SADPackage>("SAD Package");
			}
		}
		
		/// <summary>
		/// The SAD Quantity List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Quantity")]
		public Microsoft.SharePoint.Linq.EntityList<SADQuantitySADQuantity> SADQuantity {
			get {
				return this.GetList<SADQuantitySADQuantity>("SAD Quantity");
			}
		}
		
		/// <summary>
		/// The SAD Required Documents List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Required Documents")]
		public Microsoft.SharePoint.Linq.EntityList<SADRequiredDocuments> SADRequiredDocuments {
			get {
				return this.GetList<SADRequiredDocuments>("SAD Required Documents");
			}
		}
		
		/// <summary>
		/// Settings List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Settings")]
		public Microsoft.SharePoint.Linq.EntityList<Settings> Settings {
			get {
				return this.GetList<Settings>("Settings");
			}
		}
		
		/// <summary>
		/// Vendor List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Vendor")]
		public Microsoft.SharePoint.Linq.EntityList<Vendor> Vendor {
			get {
				return this.GetList<Vendor>("Vendor");
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Announcement))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Document))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Clearence))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Consent))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CustomsUnion))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CustomsWarehouse))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CustomsWarehouseDisposal))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DisposalRequestContent))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PCNCode))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADDocumentType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADDuties))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADGood))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADPackage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADQuantity))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADRequiredDocuments))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Settings))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Vendor))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Warehouse))]
	public partial class Element : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _version;
		
		private string _path;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		private string _title;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Element() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Id {
			get {
				return this._id;
			}
			set {
				if ((value != this._id)) {
					this.OnPropertyChanging("Id", this._id);
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Version {
			get {
				return this._version;
			}
			set {
				if ((value != this._version)) {
					this.OnPropertyChanging("Version", this._version);
					this._version = value;
					this.OnPropertyChanged("Version");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Path {
			get {
				return this._path;
			}
			set {
				if ((value != this._path)) {
					this.OnPropertyChanging("Path", this._path);
					this._path = value;
					this.OnPropertyChanged("Path");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
		public string Title {
			get {
				return this._title;
			}
			set {
				if ((value != this._title)) {
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Create a new news item, status or other short piece of information.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Announcement", Id="0x0104")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ActivityLogCT))]
	public partial class Announcement : Element {
		
		private string _body;
		
		private System.Nullable<System.DateTime> _expires;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Announcement() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_expires", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Expires {
			get {
				return this._expires;
			}
			set {
				if ((value != this._expires)) {
					this.OnPropertyChanging("Expires", this._expires);
					this._expires = value;
					this.OnPropertyChanged("Expires");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(BinCardLib))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CustomsWarehouseLib))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DisposalRequestLib))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADConsignment))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADDocumentLib))]
	public partial class Document : Element {
		
		private string _name;
		
		private string _documentModifiedBy;
		
		private string _documentCreatedBy;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Document() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_documentModifiedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentModifiedBy {
			get {
				return this._documentModifiedBy;
			}
			set {
				if ((value != this._documentModifiedBy)) {
					this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
					this._documentModifiedBy = value;
					this.OnPropertyChanged("DocumentModifiedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_documentCreatedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentCreatedBy {
			get {
				return this._documentCreatedBy;
			}
			set {
				if ((value != this._documentCreatedBy)) {
					this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
					this._documentCreatedBy = value;
					this.OnPropertyChanged("DocumentCreatedBy");
				}
			}
		}
	}
	
	/// <summary>
	/// Clearance List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Clearence", Id="0x010024D8E558C8B92D4094E6420B75D7AEDD")]
	public partial class Clearence : Element {
		
		private string _documentNo;
		
		private string _referenceNumber;
		
		private System.Nullable<bool> _status;
		
		private string _procedureCode;
		
		private System.Nullable<ClearenceProcedure> _clearenceProcedure;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADConsignment> _sADConsignmentLibraryIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _clearence2SadGoodID;
		
		private Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse> _customsWarehouse;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Clearence() {
			this._sADConsignmentLibraryIndex = new Microsoft.SharePoint.Linq.EntityRef<SADConsignment>();
			this._sADConsignmentLibraryIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADConsignment>>(this.OnSADConsignmentLibraryIndexSync);
			this._sADConsignmentLibraryIndex.OnChanged += new System.EventHandler(this.OnSADConsignmentLibraryIndexChanged);
			this._sADConsignmentLibraryIndex.OnChanging += new System.EventHandler(this.OnSADConsignmentLibraryIndexChanging);
			this._clearence2SadGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._clearence2SadGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnClearence2SadGoodIDSync);
			this._clearence2SadGoodID.OnChanged += new System.EventHandler(this.OnClearence2SadGoodIDChanged);
			this._clearence2SadGoodID.OnChanging += new System.EventHandler(this.OnClearence2SadGoodIDChanging);
			this._customsWarehouse = new Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse>();
			this._customsWarehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouse>>(this.OnCustomsWarehouseSync);
			this._customsWarehouse.OnChanged += new System.EventHandler(this.OnCustomsWarehouseChanged);
			this._customsWarehouse.OnChanging += new System.EventHandler(this.OnCustomsWarehouseChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNo", Storage="_documentNo", FieldType="Text")]
		public string DocumentNo {
			get {
				return this._documentNo;
			}
			set {
				if ((value != this._documentNo)) {
					this.OnPropertyChanging("DocumentNo", this._documentNo);
					this._documentNo = value;
					this.OnPropertyChanged("DocumentNo");
				}
			}
		}
		
		/// <summary>
		/// SAD Document Reference Number - box 7.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReferenceNumber", Storage="_referenceNumber", FieldType="Text")]
		public string ReferenceNumber {
			get {
				return this._referenceNumber;
			}
			set {
				if ((value != this._referenceNumber)) {
					this.OnPropertyChanging("ReferenceNumber", this._referenceNumber);
					this._referenceNumber = value;
					this.OnPropertyChanged("ReferenceNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_status", FieldType="Boolean")]
		public System.Nullable<bool> Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProcedureCode", Storage="_procedureCode", FieldType="Text")]
		public string ProcedureCode {
			get {
				return this._procedureCode;
			}
			set {
				if ((value != this._procedureCode)) {
					this.OnPropertyChanging("ProcedureCode", this._procedureCode);
					this._procedureCode = value;
					this.OnPropertyChanged("ProcedureCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ClearenceProcedure", Storage="_clearenceProcedure", FieldType="Choice")]
		public System.Nullable<ClearenceProcedure> ClearenceProcedure {
			get {
				return this._clearenceProcedure;
			}
			set {
				if ((value != this._clearenceProcedure)) {
					this.OnPropertyChanging("ClearenceProcedure", this._clearenceProcedure);
					this._clearenceProcedure = value;
					this.OnPropertyChanged("ClearenceProcedure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADConsignmentLibraryIndex", Storage="_sADConsignmentLibraryIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Consignment")]
		public SADConsignment SADConsignmentLibraryIndex {
			get {
				return this._sADConsignmentLibraryIndex.GetEntity();
			}
			set {
				this._sADConsignmentLibraryIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Clearence2SadGoodID", Storage="_clearence2SadGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood Clearence2SadGoodID {
			get {
				return this._clearence2SadGoodID.GetEntity();
			}
			set {
				this._clearence2SadGoodID.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CW2ClearenceID", Storage="_customsWarehouse", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Customs Warehouse")]
		public Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse> CustomsWarehouse {
			get {
				return this._customsWarehouse;
			}
			set {
				this._customsWarehouse.Assign(value);
			}
		}
		
		private void OnSADConsignmentLibraryIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADConsignmentLibraryIndex", this._sADConsignmentLibraryIndex.Clone());
		}
		
		private void OnSADConsignmentLibraryIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADConsignmentLibraryIndex");
		}
		
		private void OnSADConsignmentLibraryIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADConsignment> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Clearence.Add(this);
			}
			else {
				e.Item.Clearence.Remove(this);
			}
		}
		
		private void OnClearence2SadGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Clearence2SadGoodID", this._clearence2SadGoodID.Clone());
		}
		
		private void OnClearence2SadGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Clearence2SadGoodID");
		}
		
		private void OnClearence2SadGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Clearence.Add(this);
			}
			else {
				e.Item.Clearence.Remove(this);
			}
		}
		
		private void OnCustomsWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CustomsWarehouse", this._customsWarehouse.Clone());
		}
		
		private void OnCustomsWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CustomsWarehouse");
		}
		
		private void OnCustomsWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CWL_CW2ClearenceID = this;
			}
			else {
				e.Item.CWL_CW2ClearenceID = null;
			}
		}
	}
	
	/// <summary>
	/// Consent List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Consent", Id="0x0100A7FE6CFCCADBB7409C1F0FA102B9C573")]
	public partial class Consent : Element {
		
		private System.Nullable<System.DateTime> _consentDate;
		
		private System.Nullable<System.DateTime> _validFromDate;
		
		private System.Nullable<System.DateTime> _validToDate;
		
		private System.Nullable<double> _productivityRateMin;
		
		private System.Nullable<double> _productivityRateMax;
		
		private System.Nullable<double> _consentPeriod;
		
		private System.Nullable<bool> _isIPR;
		
		private Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse> _customsWarehouse;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Consent() {
			this._customsWarehouse = new Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse>();
			this._customsWarehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouse>>(this.OnCustomsWarehouseSync);
			this._customsWarehouse.OnChanged += new System.EventHandler(this.OnCustomsWarehouseChanged);
			this._customsWarehouse.OnChanging += new System.EventHandler(this.OnCustomsWarehouseChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ConsentDate", Storage="_consentDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ConsentDate {
			get {
				return this._consentDate;
			}
			set {
				if ((value != this._consentDate)) {
					this.OnPropertyChanging("ConsentDate", this._consentDate);
					this._consentDate = value;
					this.OnPropertyChanged("ConsentDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValidFromDate", Storage="_validFromDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ValidFromDate {
			get {
				return this._validFromDate;
			}
			set {
				if ((value != this._validFromDate)) {
					this.OnPropertyChanging("ValidFromDate", this._validFromDate);
					this._validFromDate = value;
					this.OnPropertyChanged("ValidFromDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValidToDate", Storage="_validToDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ValidToDate {
			get {
				return this._validToDate;
			}
			set {
				if ((value != this._validToDate)) {
					this.OnPropertyChanging("ValidToDate", this._validToDate);
					this._validToDate = value;
					this.OnPropertyChanged("ValidToDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductivityRateMin", Storage="_productivityRateMin", FieldType="Number")]
		public System.Nullable<double> ProductivityRateMin {
			get {
				return this._productivityRateMin;
			}
			set {
				if ((value != this._productivityRateMin)) {
					this.OnPropertyChanging("ProductivityRateMin", this._productivityRateMin);
					this._productivityRateMin = value;
					this.OnPropertyChanged("ProductivityRateMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductivityRateMax", Storage="_productivityRateMax", FieldType="Number")]
		public System.Nullable<double> ProductivityRateMax {
			get {
				return this._productivityRateMax;
			}
			set {
				if ((value != this._productivityRateMax)) {
					this.OnPropertyChanging("ProductivityRateMax", this._productivityRateMax);
					this._productivityRateMax = value;
					this.OnPropertyChanged("ProductivityRateMax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ConsentPeriod", Storage="_consentPeriod", FieldType="Number")]
		public System.Nullable<double> ConsentPeriod {
			get {
				return this._consentPeriod;
			}
			set {
				if ((value != this._consentPeriod)) {
					this.OnPropertyChanging("ConsentPeriod", this._consentPeriod);
					this._consentPeriod = value;
					this.OnPropertyChanged("ConsentPeriod");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsIPR", Storage="_isIPR", FieldType="Boolean")]
		public System.Nullable<bool> IsIPR {
			get {
				return this._isIPR;
			}
			set {
				if ((value != this._isIPR)) {
					this.OnPropertyChanging("IsIPR", this._isIPR);
					this._isIPR = value;
					this.OnPropertyChanged("IsIPR");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CW2ConsentTitle", Storage="_customsWarehouse", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Customs Warehouse")]
		public Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse> CustomsWarehouse {
			get {
				return this._customsWarehouse;
			}
			set {
				this._customsWarehouse.Assign(value);
			}
		}
		
		private void OnCustomsWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CustomsWarehouse", this._customsWarehouse.Clone());
		}
		
		private void OnCustomsWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CustomsWarehouse");
		}
		
		private void OnCustomsWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CWL_CW2ConsentTitle = this;
			}
			else {
				e.Item.CWL_CW2ConsentTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Customs Union List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CustomsUnion", Id="0x0100700A5727DB0A43069A5E0A479E3B80A7")]
	public partial class CustomsUnion : Element {
		
		private string _eUPrimeMarket;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CustomsUnion() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EUPrimeMarket", Storage="_eUPrimeMarket", FieldType="Text")]
		public string EUPrimeMarket {
			get {
				return this._eUPrimeMarket;
			}
			set {
				if ((value != this._eUPrimeMarket)) {
					this.OnPropertyChanging("EUPrimeMarket", this._eUPrimeMarket);
					this._eUPrimeMarket = value;
					this.OnPropertyChanged("EUPrimeMarket");
				}
			}
		}
	}
	
	/// <summary>
	/// Customs Warehouse Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CustomsWarehouse", Id="0x0100537ABB20EDAC43A6ABD0F3E10DB2BECE")]
	public partial class CustomsWarehouse : Element {
		
		private System.Nullable<System.DateTime> _cWC_EntryDate;
		
		private string _documentNo;
		
		private System.Nullable<System.DateTime> _customsDebtDate;
		
		private string _tobaccoName;
		
		private string _grade;
		
		private string _sKU;
		
		private string _batch;
		
		private System.Nullable<double> _cW_Quantity;
		
		private string _units;
		
		private System.Nullable<double> _netMass;
		
		private System.Nullable<double> _grossMass;
		
		private System.Nullable<double> _cW_PackageUnits;
		
		private System.Nullable<double> _cW_PackageKg;
		
		private System.Nullable<double> _cW_MassPerPackage;
		
		private System.Nullable<double> _value;
		
		private string _currency;
		
		private System.Nullable<double> _cW_UnitPrice;
		
		private string _dutyName;
		
		private System.Nullable<double> _duty;
		
		private string _vATName;
		
		private System.Nullable<double> _vAT;
		
		private string _cW_PzNo;
		
		private string _invoiceNo;
		
		private System.Nullable<double> _accountBalance;
		
		private System.Nullable<double> _tobaccoNotAllocated;
		
		private string _cW_CertificateOfOrgin;
		
		private System.Nullable<System.DateTime> _cW_CODate;
		
		private string _cW_CertificateOfAuthenticity;
		
		private System.Nullable<System.DateTime> _cW_COADate;
		
		private System.Nullable<System.DateTime> _validToDate;
		
		private System.Nullable<System.DateTime> _closingDate;
		
		private Microsoft.SharePoint.Linq.EntityRef<Consent> _cWL_CW2ConsentTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<PCNCode> _cWL_CW2PCNID;
		
		private System.Nullable<int> _cWL_CW2CWLibraryIDId;
		
		private Microsoft.SharePoint.Linq.EntityRef<Vendor> _cWL_CW2VendorTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Clearence> _cWL_CW2ClearenceID;
		
		private Microsoft.SharePoint.Linq.EntityRef<BinCardLib> _cWL_CW2BinCardTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CustomsWarehouse() {
			this._cWL_CW2ConsentTitle = new Microsoft.SharePoint.Linq.EntityRef<Consent>();
			this._cWL_CW2ConsentTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Consent>>(this.OnCWL_CW2ConsentTitleSync);
			this._cWL_CW2ConsentTitle.OnChanged += new System.EventHandler(this.OnCWL_CW2ConsentTitleChanged);
			this._cWL_CW2ConsentTitle.OnChanging += new System.EventHandler(this.OnCWL_CW2ConsentTitleChanging);
			this._cWL_CW2PCNID = new Microsoft.SharePoint.Linq.EntityRef<PCNCode>();
			this._cWL_CW2PCNID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode>>(this.OnCWL_CW2PCNIDSync);
			this._cWL_CW2PCNID.OnChanged += new System.EventHandler(this.OnCWL_CW2PCNIDChanged);
			this._cWL_CW2PCNID.OnChanging += new System.EventHandler(this.OnCWL_CW2PCNIDChanging);
			this._cWL_CW2VendorTitle = new Microsoft.SharePoint.Linq.EntityRef<Vendor>();
			this._cWL_CW2VendorTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Vendor>>(this.OnCWL_CW2VendorTitleSync);
			this._cWL_CW2VendorTitle.OnChanged += new System.EventHandler(this.OnCWL_CW2VendorTitleChanged);
			this._cWL_CW2VendorTitle.OnChanging += new System.EventHandler(this.OnCWL_CW2VendorTitleChanging);
			this._cWL_CW2ClearenceID = new Microsoft.SharePoint.Linq.EntityRef<Clearence>();
			this._cWL_CW2ClearenceID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnCWL_CW2ClearenceIDSync);
			this._cWL_CW2ClearenceID.OnChanged += new System.EventHandler(this.OnCWL_CW2ClearenceIDChanged);
			this._cWL_CW2ClearenceID.OnChanging += new System.EventHandler(this.OnCWL_CW2ClearenceIDChanging);
			this._cWL_CW2BinCardTitle = new Microsoft.SharePoint.Linq.EntityRef<BinCardLib>();
			this._cWL_CW2BinCardTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BinCardLib>>(this.OnCWL_CW2BinCardTitleSync);
			this._cWL_CW2BinCardTitle.OnChanged += new System.EventHandler(this.OnCWL_CW2BinCardTitleChanged);
			this._cWL_CW2BinCardTitle.OnChanging += new System.EventHandler(this.OnCWL_CW2BinCardTitleChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CWC_EntryDate", Storage="_cWC_EntryDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CWC_EntryDate {
			get {
				return this._cWC_EntryDate;
			}
			set {
				if ((value != this._cWC_EntryDate)) {
					this.OnPropertyChanging("CWC_EntryDate", this._cWC_EntryDate);
					this._cWC_EntryDate = value;
					this.OnPropertyChanged("CWC_EntryDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNo", Storage="_documentNo", FieldType="Text")]
		public string DocumentNo {
			get {
				return this._documentNo;
			}
			set {
				if ((value != this._documentNo)) {
					this.OnPropertyChanging("DocumentNo", this._documentNo);
					this._documentNo = value;
					this.OnPropertyChanged("DocumentNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsDebtDate", Storage="_customsDebtDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CustomsDebtDate {
			get {
				return this._customsDebtDate;
			}
			set {
				if ((value != this._customsDebtDate)) {
					this.OnPropertyChanging("CustomsDebtDate", this._customsDebtDate);
					this._customsDebtDate = value;
					this.OnPropertyChanged("CustomsDebtDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoName", Storage="_tobaccoName", FieldType="Text")]
		public string TobaccoName {
			get {
				return this._tobaccoName;
			}
			set {
				if ((value != this._tobaccoName)) {
					this.OnPropertyChanging("TobaccoName", this._tobaccoName);
					this._tobaccoName = value;
					this.OnPropertyChanged("TobaccoName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Grade", Storage="_grade", FieldType="Text")]
		public string Grade {
			get {
				return this._grade;
			}
			set {
				if ((value != this._grade)) {
					this.OnPropertyChanging("Grade", this._grade);
					this._grade = value;
					this.OnPropertyChanged("Grade");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_Quantity", Storage="_cW_Quantity", FieldType="Number")]
		public System.Nullable<double> CW_Quantity {
			get {
				return this._cW_Quantity;
			}
			set {
				if ((value != this._cW_Quantity)) {
					this.OnPropertyChanging("CW_Quantity", this._cW_Quantity);
					this._cW_Quantity = value;
					this.OnPropertyChanged("CW_Quantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NetMass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GrossMass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_PackageUnits", Storage="_cW_PackageUnits", FieldType="Number")]
		public System.Nullable<double> CW_PackageUnits {
			get {
				return this._cW_PackageUnits;
			}
			set {
				if ((value != this._cW_PackageUnits)) {
					this.OnPropertyChanging("CW_PackageUnits", this._cW_PackageUnits);
					this._cW_PackageUnits = value;
					this.OnPropertyChanged("CW_PackageUnits");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_PackageKg", Storage="_cW_PackageKg", FieldType="Number")]
		public System.Nullable<double> CW_PackageKg {
			get {
				return this._cW_PackageKg;
			}
			set {
				if ((value != this._cW_PackageKg)) {
					this.OnPropertyChanging("CW_PackageKg", this._cW_PackageKg);
					this._cW_PackageKg = value;
					this.OnPropertyChanged("CW_PackageKg");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_MassPerPackage", Storage="_cW_MassPerPackage", FieldType="Number")]
		public System.Nullable<double> CW_MassPerPackage {
			get {
				return this._cW_MassPerPackage;
			}
			set {
				if ((value != this._cW_MassPerPackage)) {
					this.OnPropertyChanging("CW_MassPerPackage", this._cW_MassPerPackage);
					this._cW_MassPerPackage = value;
					this.OnPropertyChanged("CW_MassPerPackage");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Value", Storage="_value", FieldType="Number")]
		public System.Nullable<double> Value {
			get {
				return this._value;
			}
			set {
				if ((value != this._value)) {
					this.OnPropertyChanging("Value", this._value);
					this._value = value;
					this.OnPropertyChanged("Value");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Currency", Storage="_currency", FieldType="Text")]
		public string Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_UnitPrice", Storage="_cW_UnitPrice", FieldType="Number")]
		public System.Nullable<double> CW_UnitPrice {
			get {
				return this._cW_UnitPrice;
			}
			set {
				if ((value != this._cW_UnitPrice)) {
					this.OnPropertyChanging("CW_UnitPrice", this._cW_UnitPrice);
					this._cW_UnitPrice = value;
					this.OnPropertyChanged("CW_UnitPrice");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyName", Storage="_dutyName", FieldType="Text")]
		public string DutyName {
			get {
				return this._dutyName;
			}
			set {
				if ((value != this._dutyName)) {
					this.OnPropertyChanging("DutyName", this._dutyName);
					this._dutyName = value;
					this.OnPropertyChanged("DutyName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Duty", Storage="_duty", FieldType="Number")]
		public System.Nullable<double> Duty {
			get {
				return this._duty;
			}
			set {
				if ((value != this._duty)) {
					this.OnPropertyChanging("Duty", this._duty);
					this._duty = value;
					this.OnPropertyChanged("Duty");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VATName", Storage="_vATName", FieldType="Text")]
		public string VATName {
			get {
				return this._vATName;
			}
			set {
				if ((value != this._vATName)) {
					this.OnPropertyChanging("VATName", this._vATName);
					this._vATName = value;
					this.OnPropertyChanged("VATName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VAT", Storage="_vAT", FieldType="Number")]
		public System.Nullable<double> VAT {
			get {
				return this._vAT;
			}
			set {
				if ((value != this._vAT)) {
					this.OnPropertyChanging("VAT", this._vAT);
					this._vAT = value;
					this.OnPropertyChanged("VAT");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_PzNo", Storage="_cW_PzNo", FieldType="Text")]
		public string CW_PzNo {
			get {
				return this._cW_PzNo;
			}
			set {
				if ((value != this._cW_PzNo)) {
					this.OnPropertyChanging("CW_PzNo", this._cW_PzNo);
					this._cW_PzNo = value;
					this.OnPropertyChanged("CW_PzNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceNo", Storage="_invoiceNo", FieldType="Text")]
		public string InvoiceNo {
			get {
				return this._invoiceNo;
			}
			set {
				if ((value != this._invoiceNo)) {
					this.OnPropertyChanging("InvoiceNo", this._invoiceNo);
					this._invoiceNo = value;
					this.OnPropertyChanged("InvoiceNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AccountBalance", Storage="_accountBalance", Required=true, FieldType="Number")]
		public System.Nullable<double> AccountBalance {
			get {
				return this._accountBalance;
			}
			set {
				if ((value != this._accountBalance)) {
					this.OnPropertyChanging("AccountBalance", this._accountBalance);
					this._accountBalance = value;
					this.OnPropertyChanged("AccountBalance");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoNotAllocated", Storage="_tobaccoNotAllocated", FieldType="Number")]
		public System.Nullable<double> TobaccoNotAllocated {
			get {
				return this._tobaccoNotAllocated;
			}
			set {
				if ((value != this._tobaccoNotAllocated)) {
					this.OnPropertyChanging("TobaccoNotAllocated", this._tobaccoNotAllocated);
					this._tobaccoNotAllocated = value;
					this.OnPropertyChanged("TobaccoNotAllocated");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_CertificateOfOrgin", Storage="_cW_CertificateOfOrgin", FieldType="Text")]
		public string CW_CertificateOfOrgin {
			get {
				return this._cW_CertificateOfOrgin;
			}
			set {
				if ((value != this._cW_CertificateOfOrgin)) {
					this.OnPropertyChanging("CW_CertificateOfOrgin", this._cW_CertificateOfOrgin);
					this._cW_CertificateOfOrgin = value;
					this.OnPropertyChanged("CW_CertificateOfOrgin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_CODate", Storage="_cW_CODate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CW_CODate {
			get {
				return this._cW_CODate;
			}
			set {
				if ((value != this._cW_CODate)) {
					this.OnPropertyChanging("CW_CODate", this._cW_CODate);
					this._cW_CODate = value;
					this.OnPropertyChanged("CW_CODate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_CertificateOfAuthenticity", Storage="_cW_CertificateOfAuthenticity", FieldType="Text")]
		public string CW_CertificateOfAuthenticity {
			get {
				return this._cW_CertificateOfAuthenticity;
			}
			set {
				if ((value != this._cW_CertificateOfAuthenticity)) {
					this.OnPropertyChanging("CW_CertificateOfAuthenticity", this._cW_CertificateOfAuthenticity);
					this._cW_CertificateOfAuthenticity = value;
					this.OnPropertyChanged("CW_CertificateOfAuthenticity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_COADate", Storage="_cW_COADate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CW_COADate {
			get {
				return this._cW_COADate;
			}
			set {
				if ((value != this._cW_COADate)) {
					this.OnPropertyChanging("CW_COADate", this._cW_COADate);
					this._cW_COADate = value;
					this.OnPropertyChanged("CW_COADate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValidToDate", Storage="_validToDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ValidToDate {
			get {
				return this._validToDate;
			}
			set {
				if ((value != this._validToDate)) {
					this.OnPropertyChanging("ValidToDate", this._validToDate);
					this._validToDate = value;
					this.OnPropertyChanged("ValidToDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ClosingDate", Storage="_closingDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ClosingDate {
			get {
				return this._closingDate;
			}
			set {
				if ((value != this._closingDate)) {
					this.OnPropertyChanging("ClosingDate", this._closingDate);
					this._closingDate = value;
					this.OnPropertyChanged("ClosingDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CW2ConsentTitle", Storage="_cWL_CW2ConsentTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Consent")]
		public Consent CWL_CW2ConsentTitle {
			get {
				return this._cWL_CW2ConsentTitle.GetEntity();
			}
			set {
				this._cWL_CW2ConsentTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CW2PCNID", Storage="_cWL_CW2PCNID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="PCN Code")]
		public PCNCode CWL_CW2PCNID {
			get {
				return this._cWL_CW2PCNID.GetEntity();
			}
			set {
				this._cWL_CW2PCNID.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CWL_CW2CWLibraryID", Storage="_cWL_CW2CWLibraryIDId", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> CWL_CW2CWLibraryIDId {
			get {
				return this._cWL_CW2CWLibraryIDId;
			}
			set {
				if ((value != this._cWL_CW2CWLibraryIDId)) {
					this.OnPropertyChanging("CWL_CW2CWLibraryIDId", this._cWL_CW2CWLibraryIDId);
					this._cWL_CW2CWLibraryIDId = value;
					this.OnPropertyChanged("CWL_CW2CWLibraryIDId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CW2VendorTitle", Storage="_cWL_CW2VendorTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Vendor")]
		public Vendor CWL_CW2VendorTitle {
			get {
				return this._cWL_CW2VendorTitle.GetEntity();
			}
			set {
				this._cWL_CW2VendorTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CW2ClearenceID", Storage="_cWL_CW2ClearenceID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Clearence")]
		public Clearence CWL_CW2ClearenceID {
			get {
				return this._cWL_CW2ClearenceID.GetEntity();
			}
			set {
				this._cWL_CW2ClearenceID.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CW2BinCardTitle", Storage="_cWL_CW2BinCardTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Bin Card Library")]
		public BinCardLib CWL_CW2BinCardTitle {
			get {
				return this._cWL_CW2BinCardTitle.GetEntity();
			}
			set {
				this._cWL_CW2BinCardTitle.SetEntity(value);
			}
		}
		
		private void OnCWL_CW2ConsentTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CWL_CW2ConsentTitle", this._cWL_CW2ConsentTitle.Clone());
		}
		
		private void OnCWL_CW2ConsentTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CWL_CW2ConsentTitle");
		}
		
		private void OnCWL_CW2ConsentTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Consent> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CustomsWarehouse.Add(this);
			}
			else {
				e.Item.CustomsWarehouse.Remove(this);
			}
		}
		
		private void OnCWL_CW2PCNIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CWL_CW2PCNID", this._cWL_CW2PCNID.Clone());
		}
		
		private void OnCWL_CW2PCNIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CWL_CW2PCNID");
		}
		
		private void OnCWL_CW2PCNIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CustomsWarehouse.Add(this);
			}
			else {
				e.Item.CustomsWarehouse.Remove(this);
			}
		}
		
		private void OnCWL_CW2VendorTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CWL_CW2VendorTitle", this._cWL_CW2VendorTitle.Clone());
		}
		
		private void OnCWL_CW2VendorTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CWL_CW2VendorTitle");
		}
		
		private void OnCWL_CW2VendorTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Vendor> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CustomsWarehouse.Add(this);
			}
			else {
				e.Item.CustomsWarehouse.Remove(this);
			}
		}
		
		private void OnCWL_CW2ClearenceIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CWL_CW2ClearenceID", this._cWL_CW2ClearenceID.Clone());
		}
		
		private void OnCWL_CW2ClearenceIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CWL_CW2ClearenceID");
		}
		
		private void OnCWL_CW2ClearenceIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CustomsWarehouse.Add(this);
			}
			else {
				e.Item.CustomsWarehouse.Remove(this);
			}
		}
		
		private void OnCWL_CW2BinCardTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CWL_CW2BinCardTitle", this._cWL_CW2BinCardTitle.Clone());
		}
		
		private void OnCWL_CW2BinCardTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CWL_CW2BinCardTitle");
		}
		
		private void OnCWL_CW2BinCardTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BinCardLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CustomsWarehouse.Add(this);
			}
			else {
				e.Item.CustomsWarehouse.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Customs Warehouse Disposal Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CustomsWarehouseDisposal", Id="0x0100809C8CF50E9E4E97B2809D1CD4C3F14F")]
	public partial class CustomsWarehouseDisposal : Element {
		
		private System.Nullable<System.DateTime> _cWC_EntryDate;
		
		private System.Nullable<double> _no;
		
		private string _sADDocumentNo;
		
		private System.Nullable<System.DateTime> _sADDate;
		
		private string _tobaccoName;
		
		private string _grade;
		
		private string _sKU;
		
		private string _batch;
		
		private System.Nullable<double> _cW_DeclaredNetMass;
		
		private string _cW_Wz1;
		
		private string _cW_Wz2;
		
		private string _cW_Wz3;
		
		private System.Nullable<double> _cW_AddedKg;
		
		private System.Nullable<double> _cW_SettledNetMass;
		
		private System.Nullable<double> _cW_SettledGrossMass;
		
		private System.Nullable<double> _tobaccoValue;
		
		private string _currency;
		
		private System.Nullable<double> _remainingQuantity;
		
		private System.Nullable<double> _cW_RemainingPackage;
		
		private System.Nullable<double> _cW_RemainingTobaccoValue;
		
		private string _customsProcedure;
		
		private System.Nullable<double> _dutyPerSettledAmount;
		
		private System.Nullable<double> _vATPerSettledAmount;
		
		private System.Nullable<double> _dutyAndVAT;
		
		private System.Nullable<ClearingType> _clearingType;
		
		private System.Nullable<CustomsStatus> _customsStatus;
		
		private Microsoft.SharePoint.Linq.EntityRef<PCNCode> _cWL_CWDisposal2PCNTID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CustomsWarehouseDisposal() {
			this._cWL_CWDisposal2PCNTID = new Microsoft.SharePoint.Linq.EntityRef<PCNCode>();
			this._cWL_CWDisposal2PCNTID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode>>(this.OnCWL_CWDisposal2PCNTIDSync);
			this._cWL_CWDisposal2PCNTID.OnChanged += new System.EventHandler(this.OnCWL_CWDisposal2PCNTIDChanged);
			this._cWL_CWDisposal2PCNTID.OnChanging += new System.EventHandler(this.OnCWL_CWDisposal2PCNTIDChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CWC_EntryDate", Storage="_cWC_EntryDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CWC_EntryDate {
			get {
				return this._cWC_EntryDate;
			}
			set {
				if ((value != this._cWC_EntryDate)) {
					this.OnPropertyChanging("CWC_EntryDate", this._cWC_EntryDate);
					this._cWC_EntryDate = value;
					this.OnPropertyChanged("CWC_EntryDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="No", Storage="_no", FieldType="Number")]
		public System.Nullable<double> No {
			get {
				return this._no;
			}
			set {
				if ((value != this._no)) {
					this.OnPropertyChanging("No", this._no);
					this._no = value;
					this.OnPropertyChanged("No");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDocumentNo", Storage="_sADDocumentNo", FieldType="Text")]
		public string SADDocumentNo {
			get {
				return this._sADDocumentNo;
			}
			set {
				if ((value != this._sADDocumentNo)) {
					this.OnPropertyChanging("SADDocumentNo", this._sADDocumentNo);
					this._sADDocumentNo = value;
					this.OnPropertyChanged("SADDocumentNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDate", Storage="_sADDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> SADDate {
			get {
				return this._sADDate;
			}
			set {
				if ((value != this._sADDate)) {
					this.OnPropertyChanging("SADDate", this._sADDate);
					this._sADDate = value;
					this.OnPropertyChanged("SADDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoName", Storage="_tobaccoName", FieldType="Text")]
		public string TobaccoName {
			get {
				return this._tobaccoName;
			}
			set {
				if ((value != this._tobaccoName)) {
					this.OnPropertyChanging("TobaccoName", this._tobaccoName);
					this._tobaccoName = value;
					this.OnPropertyChanged("TobaccoName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Grade", Storage="_grade", FieldType="Text")]
		public string Grade {
			get {
				return this._grade;
			}
			set {
				if ((value != this._grade)) {
					this.OnPropertyChanging("Grade", this._grade);
					this._grade = value;
					this.OnPropertyChanged("Grade");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_DeclaredNetMass", Storage="_cW_DeclaredNetMass", FieldType="Number")]
		public System.Nullable<double> CW_DeclaredNetMass {
			get {
				return this._cW_DeclaredNetMass;
			}
			set {
				if ((value != this._cW_DeclaredNetMass)) {
					this.OnPropertyChanging("CW_DeclaredNetMass", this._cW_DeclaredNetMass);
					this._cW_DeclaredNetMass = value;
					this.OnPropertyChanged("CW_DeclaredNetMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_Wz1", Storage="_cW_Wz1", FieldType="Text")]
		public string CW_Wz1 {
			get {
				return this._cW_Wz1;
			}
			set {
				if ((value != this._cW_Wz1)) {
					this.OnPropertyChanging("CW_Wz1", this._cW_Wz1);
					this._cW_Wz1 = value;
					this.OnPropertyChanged("CW_Wz1");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_Wz2", Storage="_cW_Wz2", FieldType="Text")]
		public string CW_Wz2 {
			get {
				return this._cW_Wz2;
			}
			set {
				if ((value != this._cW_Wz2)) {
					this.OnPropertyChanging("CW_Wz2", this._cW_Wz2);
					this._cW_Wz2 = value;
					this.OnPropertyChanged("CW_Wz2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_Wz3", Storage="_cW_Wz3", FieldType="Text")]
		public string CW_Wz3 {
			get {
				return this._cW_Wz3;
			}
			set {
				if ((value != this._cW_Wz3)) {
					this.OnPropertyChanging("CW_Wz3", this._cW_Wz3);
					this._cW_Wz3 = value;
					this.OnPropertyChanged("CW_Wz3");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_AddedKg", Storage="_cW_AddedKg", FieldType="Number")]
		public System.Nullable<double> CW_AddedKg {
			get {
				return this._cW_AddedKg;
			}
			set {
				if ((value != this._cW_AddedKg)) {
					this.OnPropertyChanging("CW_AddedKg", this._cW_AddedKg);
					this._cW_AddedKg = value;
					this.OnPropertyChanged("CW_AddedKg");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_SettledNetMass", Storage="_cW_SettledNetMass", FieldType="Number")]
		public System.Nullable<double> CW_SettledNetMass {
			get {
				return this._cW_SettledNetMass;
			}
			set {
				if ((value != this._cW_SettledNetMass)) {
					this.OnPropertyChanging("CW_SettledNetMass", this._cW_SettledNetMass);
					this._cW_SettledNetMass = value;
					this.OnPropertyChanged("CW_SettledNetMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_SettledGrossMass", Storage="_cW_SettledGrossMass", FieldType="Number")]
		public System.Nullable<double> CW_SettledGrossMass {
			get {
				return this._cW_SettledGrossMass;
			}
			set {
				if ((value != this._cW_SettledGrossMass)) {
					this.OnPropertyChanging("CW_SettledGrossMass", this._cW_SettledGrossMass);
					this._cW_SettledGrossMass = value;
					this.OnPropertyChanged("CW_SettledGrossMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoValue", Storage="_tobaccoValue", FieldType="Number")]
		public System.Nullable<double> TobaccoValue {
			get {
				return this._tobaccoValue;
			}
			set {
				if ((value != this._tobaccoValue)) {
					this.OnPropertyChanging("TobaccoValue", this._tobaccoValue);
					this._tobaccoValue = value;
					this.OnPropertyChanged("TobaccoValue");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Currency", Storage="_currency", FieldType="Text")]
		public string Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RemainingQuantity", Storage="_remainingQuantity", FieldType="Number")]
		public System.Nullable<double> RemainingQuantity {
			get {
				return this._remainingQuantity;
			}
			set {
				if ((value != this._remainingQuantity)) {
					this.OnPropertyChanging("RemainingQuantity", this._remainingQuantity);
					this._remainingQuantity = value;
					this.OnPropertyChanged("RemainingQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_RemainingPackage", Storage="_cW_RemainingPackage", FieldType="Number")]
		public System.Nullable<double> CW_RemainingPackage {
			get {
				return this._cW_RemainingPackage;
			}
			set {
				if ((value != this._cW_RemainingPackage)) {
					this.OnPropertyChanging("CW_RemainingPackage", this._cW_RemainingPackage);
					this._cW_RemainingPackage = value;
					this.OnPropertyChanged("CW_RemainingPackage");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_RemainingTobaccoValue", Storage="_cW_RemainingTobaccoValue", FieldType="Number")]
		public System.Nullable<double> CW_RemainingTobaccoValue {
			get {
				return this._cW_RemainingTobaccoValue;
			}
			set {
				if ((value != this._cW_RemainingTobaccoValue)) {
					this.OnPropertyChanging("CW_RemainingTobaccoValue", this._cW_RemainingTobaccoValue);
					this._cW_RemainingTobaccoValue = value;
					this.OnPropertyChanged("CW_RemainingTobaccoValue");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsProcedure", Storage="_customsProcedure", FieldType="Text")]
		public string CustomsProcedure {
			get {
				return this._customsProcedure;
			}
			set {
				if ((value != this._customsProcedure)) {
					this.OnPropertyChanging("CustomsProcedure", this._customsProcedure);
					this._customsProcedure = value;
					this.OnPropertyChanged("CustomsProcedure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyPerSettledAmount", Storage="_dutyPerSettledAmount", FieldType="Number")]
		public System.Nullable<double> DutyPerSettledAmount {
			get {
				return this._dutyPerSettledAmount;
			}
			set {
				if ((value != this._dutyPerSettledAmount)) {
					this.OnPropertyChanging("DutyPerSettledAmount", this._dutyPerSettledAmount);
					this._dutyPerSettledAmount = value;
					this.OnPropertyChanged("DutyPerSettledAmount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VATPerSettledAmount", Storage="_vATPerSettledAmount", FieldType="Number")]
		public System.Nullable<double> VATPerSettledAmount {
			get {
				return this._vATPerSettledAmount;
			}
			set {
				if ((value != this._vATPerSettledAmount)) {
					this.OnPropertyChanging("VATPerSettledAmount", this._vATPerSettledAmount);
					this._vATPerSettledAmount = value;
					this.OnPropertyChanged("VATPerSettledAmount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyAndVAT", Storage="_dutyAndVAT", FieldType="Number")]
		public System.Nullable<double> DutyAndVAT {
			get {
				return this._dutyAndVAT;
			}
			set {
				if ((value != this._dutyAndVAT)) {
					this.OnPropertyChanging("DutyAndVAT", this._dutyAndVAT);
					this._dutyAndVAT = value;
					this.OnPropertyChanged("DutyAndVAT");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ClearingType", Storage="_clearingType", FieldType="Choice")]
		public System.Nullable<ClearingType> ClearingType {
			get {
				return this._clearingType;
			}
			set {
				if ((value != this._clearingType)) {
					this.OnPropertyChanging("ClearingType", this._clearingType);
					this._clearingType = value;
					this.OnPropertyChanged("ClearingType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsStatus", Storage="_customsStatus", FieldType="Choice")]
		public System.Nullable<CustomsStatus> CustomsStatus {
			get {
				return this._customsStatus;
			}
			set {
				if ((value != this._customsStatus)) {
					this.OnPropertyChanging("CustomsStatus", this._customsStatus);
					this._customsStatus = value;
					this.OnPropertyChanged("CustomsStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CWDisposal2PCNTID", Storage="_cWL_CWDisposal2PCNTID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="PCN Code")]
		public PCNCode CWL_CWDisposal2PCNTID {
			get {
				return this._cWL_CWDisposal2PCNTID.GetEntity();
			}
			set {
				this._cWL_CWDisposal2PCNTID.SetEntity(value);
			}
		}
		
		private void OnCWL_CWDisposal2PCNTIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CWL_CWDisposal2PCNTID", this._cWL_CWDisposal2PCNTID.Clone());
		}
		
		private void OnCWL_CWDisposal2PCNTIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CWL_CWDisposal2PCNTID");
		}
		
		private void OnCWL_CWDisposal2PCNTIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CustomsWarehouseDisposal.Add(this);
			}
			else {
				e.Item.CustomsWarehouseDisposal.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Disposal Request Content Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="DisposalRequestContent", Id="0x0100B15477CF72A241D4B1E147913CB151F1")]
	public partial class DisposalRequestContent : Element {
		
		private System.Nullable<System.DateTime> _cWC_EntryDate;
		
		private System.Nullable<double> _no;
		
		private string _sKU;
		
		private string _sKUDescription;
		
		private string _batch;
		
		private System.Nullable<double> _cW_DeclaredToClear;
		
		private System.Nullable<double> _cW_QuantityAvailable;
		
		private System.Nullable<double> _cW_PackageAvailable;
		
		private System.Nullable<double> _cW_QuantityToClead;
		
		private System.Nullable<double> _cW_PackageToClead;
		
		private System.Nullable<double> _cW_AddedKg;
		
		private Microsoft.SharePoint.Linq.EntityRef<DisposalRequestLib> _cWL_CWDisposalRequest2DisposalRequestLibraryID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DisposalRequestContent() {
			this._cWL_CWDisposalRequest2DisposalRequestLibraryID = new Microsoft.SharePoint.Linq.EntityRef<DisposalRequestLib>();
			this._cWL_CWDisposalRequest2DisposalRequestLibraryID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<DisposalRequestLib>>(this.OnCWL_CWDisposalRequest2DisposalRequestLibraryIDSync);
			this._cWL_CWDisposalRequest2DisposalRequestLibraryID.OnChanged += new System.EventHandler(this.OnCWL_CWDisposalRequest2DisposalRequestLibraryIDChanged);
			this._cWL_CWDisposalRequest2DisposalRequestLibraryID.OnChanging += new System.EventHandler(this.OnCWL_CWDisposalRequest2DisposalRequestLibraryIDChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CWC_EntryDate", Storage="_cWC_EntryDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CWC_EntryDate {
			get {
				return this._cWC_EntryDate;
			}
			set {
				if ((value != this._cWC_EntryDate)) {
					this.OnPropertyChanging("CWC_EntryDate", this._cWC_EntryDate);
					this._cWC_EntryDate = value;
					this.OnPropertyChanged("CWC_EntryDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="No", Storage="_no", FieldType="Number")]
		public System.Nullable<double> No {
			get {
				return this._no;
			}
			set {
				if ((value != this._no)) {
					this.OnPropertyChanging("No", this._no);
					this._no = value;
					this.OnPropertyChanged("No");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKUDescription", Storage="_sKUDescription", FieldType="Text")]
		public string SKUDescription {
			get {
				return this._sKUDescription;
			}
			set {
				if ((value != this._sKUDescription)) {
					this.OnPropertyChanging("SKUDescription", this._sKUDescription);
					this._sKUDescription = value;
					this.OnPropertyChanged("SKUDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_DeclaredToClear", Storage="_cW_DeclaredToClear", FieldType="Number")]
		public System.Nullable<double> CW_DeclaredToClear {
			get {
				return this._cW_DeclaredToClear;
			}
			set {
				if ((value != this._cW_DeclaredToClear)) {
					this.OnPropertyChanging("CW_DeclaredToClear", this._cW_DeclaredToClear);
					this._cW_DeclaredToClear = value;
					this.OnPropertyChanged("CW_DeclaredToClear");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_QuantityAvailable", Storage="_cW_QuantityAvailable", FieldType="Number")]
		public System.Nullable<double> CW_QuantityAvailable {
			get {
				return this._cW_QuantityAvailable;
			}
			set {
				if ((value != this._cW_QuantityAvailable)) {
					this.OnPropertyChanging("CW_QuantityAvailable", this._cW_QuantityAvailable);
					this._cW_QuantityAvailable = value;
					this.OnPropertyChanged("CW_QuantityAvailable");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_PackageAvailable", Storage="_cW_PackageAvailable", FieldType="Number")]
		public System.Nullable<double> CW_PackageAvailable {
			get {
				return this._cW_PackageAvailable;
			}
			set {
				if ((value != this._cW_PackageAvailable)) {
					this.OnPropertyChanging("CW_PackageAvailable", this._cW_PackageAvailable);
					this._cW_PackageAvailable = value;
					this.OnPropertyChanged("CW_PackageAvailable");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_QuantityToClead", Storage="_cW_QuantityToClead", FieldType="Number")]
		public System.Nullable<double> CW_QuantityToClead {
			get {
				return this._cW_QuantityToClead;
			}
			set {
				if ((value != this._cW_QuantityToClead)) {
					this.OnPropertyChanging("CW_QuantityToClead", this._cW_QuantityToClead);
					this._cW_QuantityToClead = value;
					this.OnPropertyChanged("CW_QuantityToClead");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_PackageToClead", Storage="_cW_PackageToClead", FieldType="Number")]
		public System.Nullable<double> CW_PackageToClead {
			get {
				return this._cW_PackageToClead;
			}
			set {
				if ((value != this._cW_PackageToClead)) {
					this.OnPropertyChanging("CW_PackageToClead", this._cW_PackageToClead);
					this._cW_PackageToClead = value;
					this.OnPropertyChanged("CW_PackageToClead");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CW_AddedKg", Storage="_cW_AddedKg", FieldType="Number")]
		public System.Nullable<double> CW_AddedKg {
			get {
				return this._cW_AddedKg;
			}
			set {
				if ((value != this._cW_AddedKg)) {
					this.OnPropertyChanging("CW_AddedKg", this._cW_AddedKg);
					this._cW_AddedKg = value;
					this.OnPropertyChanged("CW_AddedKg");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CWDisposalRequest2DisposalRequestLibraryID", Storage="_cWL_CWDisposalRequest2DisposalRequestLibraryID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Disposal Request Library")]
		public DisposalRequestLib CWL_CWDisposalRequest2DisposalRequestLibraryID {
			get {
				return this._cWL_CWDisposalRequest2DisposalRequestLibraryID.GetEntity();
			}
			set {
				this._cWL_CWDisposalRequest2DisposalRequestLibraryID.SetEntity(value);
			}
		}
		
		private void OnCWL_CWDisposalRequest2DisposalRequestLibraryIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CWL_CWDisposalRequest2DisposalRequestLibraryID", this._cWL_CWDisposalRequest2DisposalRequestLibraryID.Clone());
		}
		
		private void OnCWL_CWDisposalRequest2DisposalRequestLibraryIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CWL_CWDisposalRequest2DisposalRequestLibraryID");
		}
		
		private void OnCWL_CWDisposalRequest2DisposalRequestLibraryIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<DisposalRequestLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.DisposalRequestContent.Add(this);
			}
			else {
				e.Item.DisposalRequestContent.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// PCN Code List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="PCNCode", Id="0x01002E9F09B06ACF47F7ADA76C12453C7AF7")]
	public partial class PCNCode : Element {
		
		private string _productCodeNumber;
		
		private string _compensationGood;
		
		private System.Nullable<bool> _disposal;
		
		private Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse> _customsWarehouse;
		
		private Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouseDisposal> _customsWarehouseDisposal;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PCNCode() {
			this._customsWarehouse = new Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse>();
			this._customsWarehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouse>>(this.OnCustomsWarehouseSync);
			this._customsWarehouse.OnChanged += new System.EventHandler(this.OnCustomsWarehouseChanged);
			this._customsWarehouse.OnChanging += new System.EventHandler(this.OnCustomsWarehouseChanging);
			this._customsWarehouseDisposal = new Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouseDisposal>();
			this._customsWarehouseDisposal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouseDisposal>>(this.OnCustomsWarehouseDisposalSync);
			this._customsWarehouseDisposal.OnChanged += new System.EventHandler(this.OnCustomsWarehouseDisposalChanged);
			this._customsWarehouseDisposal.OnChanging += new System.EventHandler(this.OnCustomsWarehouseDisposalChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductCodeNumber", Storage="_productCodeNumber", FieldType="Text")]
		public string ProductCodeNumber {
			get {
				return this._productCodeNumber;
			}
			set {
				if ((value != this._productCodeNumber)) {
					this.OnPropertyChanging("ProductCodeNumber", this._productCodeNumber);
					this._productCodeNumber = value;
					this.OnPropertyChanged("ProductCodeNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompensationGood", Storage="_compensationGood", FieldType="Text")]
		public string CompensationGood {
			get {
				return this._compensationGood;
			}
			set {
				if ((value != this._compensationGood)) {
					this.OnPropertyChanging("CompensationGood", this._compensationGood);
					this._compensationGood = value;
					this.OnPropertyChanged("CompensationGood");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Disposal", Storage="_disposal", FieldType="Boolean")]
		public System.Nullable<bool> Disposal {
			get {
				return this._disposal;
			}
			set {
				if ((value != this._disposal)) {
					this.OnPropertyChanging("Disposal", this._disposal);
					this._disposal = value;
					this.OnPropertyChanged("Disposal");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CW2PCNID", Storage="_customsWarehouse", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Customs Warehouse")]
		public Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse> CustomsWarehouse {
			get {
				return this._customsWarehouse;
			}
			set {
				this._customsWarehouse.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CWDisposal2PCNTID", Storage="_customsWarehouseDisposal", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Customs Warehouse Disposal")]
		public Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouseDisposal> CustomsWarehouseDisposal {
			get {
				return this._customsWarehouseDisposal;
			}
			set {
				this._customsWarehouseDisposal.Assign(value);
			}
		}
		
		private void OnCustomsWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CustomsWarehouse", this._customsWarehouse.Clone());
		}
		
		private void OnCustomsWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CustomsWarehouse");
		}
		
		private void OnCustomsWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CWL_CW2PCNID = this;
			}
			else {
				e.Item.CWL_CW2PCNID = null;
			}
		}
		
		private void OnCustomsWarehouseDisposalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CustomsWarehouseDisposal", this._customsWarehouseDisposal.Clone());
		}
		
		private void OnCustomsWarehouseDisposalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CustomsWarehouseDisposal");
		}
		
		private void OnCustomsWarehouseDisposalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouseDisposal> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CWL_CWDisposal2PCNTID = this;
			}
			else {
				e.Item.CWL_CWDisposal2PCNTID = null;
			}
		}
	}
	
	/// <summary>
	/// SAD Document Type List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADDocumentType", Id="0x0100844099FC49B54D30A1516EA17A6883FC")]
	public partial class SADDocumentType : Element {
		
		private string _referenceNumber;
		
		private System.Nullable<System.DateTime> _customsDebtDate;
		
		private string _documentNumber;
		
		private string _currency;
		
		private System.Nullable<double> _exchangeRate;
		
		private System.Nullable<double> _grossMass;
		
		private System.Nullable<double> _netMass;
		
		private string _systemID;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADDocumentLib> _sADDocumenLibrarytIndex;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADGood> _sADGood;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADDocumentType() {
			this._sADDocumenLibrarytIndex = new Microsoft.SharePoint.Linq.EntityRef<SADDocumentLib>();
			this._sADDocumenLibrarytIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentLib>>(this.OnSADDocumenLibrarytIndexSync);
			this._sADDocumenLibrarytIndex.OnChanged += new System.EventHandler(this.OnSADDocumenLibrarytIndexChanged);
			this._sADDocumenLibrarytIndex.OnChanging += new System.EventHandler(this.OnSADDocumenLibrarytIndexChanging);
			this._sADGood = new Microsoft.SharePoint.Linq.EntitySet<SADGood>();
			this._sADGood.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodSync);
			this._sADGood.OnChanged += new System.EventHandler(this.OnSADGoodChanged);
			this._sADGood.OnChanging += new System.EventHandler(this.OnSADGoodChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// SAD Document Reference Number - box 7.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReferenceNumber", Storage="_referenceNumber", FieldType="Text")]
		public string ReferenceNumber {
			get {
				return this._referenceNumber;
			}
			set {
				if ((value != this._referenceNumber)) {
					this.OnPropertyChanging("ReferenceNumber", this._referenceNumber);
					this._referenceNumber = value;
					this.OnPropertyChanged("ReferenceNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsDebtDate", Storage="_customsDebtDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CustomsDebtDate {
			get {
				return this._customsDebtDate;
			}
			set {
				if ((value != this._customsDebtDate)) {
					this.OnPropertyChanging("CustomsDebtDate", this._customsDebtDate);
					this._customsDebtDate = value;
					this.OnPropertyChanged("CustomsDebtDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNumber", Storage="_documentNumber", FieldType="Text")]
		public string DocumentNumber {
			get {
				return this._documentNumber;
			}
			set {
				if ((value != this._documentNumber)) {
					this.OnPropertyChanging("DocumentNumber", this._documentNumber);
					this._documentNumber = value;
					this.OnPropertyChanged("DocumentNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Currency", Storage="_currency", FieldType="Text")]
		public string Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExchangeRate", Storage="_exchangeRate", FieldType="Number")]
		public System.Nullable<double> ExchangeRate {
			get {
				return this._exchangeRate;
			}
			set {
				if ((value != this._exchangeRate)) {
					this.OnPropertyChanging("ExchangeRate", this._exchangeRate);
					this._exchangeRate = value;
					this.OnPropertyChanged("ExchangeRate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GrossMass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NetMass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SystemID", Storage="_systemID", FieldType="Text")]
		public string SystemID {
			get {
				return this._systemID;
			}
			set {
				if ((value != this._systemID)) {
					this.OnPropertyChanging("SystemID", this._systemID);
					this._systemID = value;
					this.OnPropertyChanged("SystemID");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumenLibrarytIndex", Storage="_sADDocumenLibrarytIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Document Library")]
		public SADDocumentLib SADDocumenLibrarytIndex {
			get {
				return this._sADDocumenLibrarytIndex.GetEntity();
			}
			set {
				this._sADDocumenLibrarytIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumentIndex", Storage="_sADGood", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Good")]
		public Microsoft.SharePoint.Linq.EntitySet<SADGood> SADGood {
			get {
				return this._sADGood;
			}
			set {
				this._sADGood.Assign(value);
			}
		}
		
		private void OnSADDocumenLibrarytIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDocumenLibrarytIndex", this._sADDocumenLibrarytIndex.Clone());
		}
		
		private void OnSADDocumenLibrarytIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDocumenLibrarytIndex");
		}
		
		private void OnSADDocumenLibrarytIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDocumentType.Add(this);
			}
			else {
				e.Item.SADDocumentType.Remove(this);
			}
		}
		
		private void OnSADGoodChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGood", this._sADGood.Clone());
		}
		
		private void OnSADGoodChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGood");
		}
		
		private void OnSADGoodSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDocumentIndex = this;
			}
			else {
				e.Item.SADDocumentIndex = null;
			}
		}
	}
	
	/// <summary>
	/// SAD Duties List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADDuties", Id="0x0100307F2A8F2886D24FBF3393F84E0E616B")]
	public partial class SADDuties : Element {
		
		private string _dutyType;
		
		private System.Nullable<double> _amount;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADDuties2SADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADDuties() {
			this._sADDuties2SADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADDuties2SADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADDuties2SADGoodIDSync);
			this._sADDuties2SADGoodID.OnChanged += new System.EventHandler(this.OnSADDuties2SADGoodIDChanged);
			this._sADDuties2SADGoodID.OnChanging += new System.EventHandler(this.OnSADDuties2SADGoodIDChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyType", Storage="_dutyType", FieldType="Text")]
		public string DutyType {
			get {
				return this._dutyType;
			}
			set {
				if ((value != this._dutyType)) {
					this.OnPropertyChanging("DutyType", this._dutyType);
					this._dutyType = value;
					this.OnPropertyChanged("DutyType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Amount", Storage="_amount", FieldType="Number")]
		public System.Nullable<double> Amount {
			get {
				return this._amount;
			}
			set {
				if ((value != this._amount)) {
					this.OnPropertyChanging("Amount", this._amount);
					this._amount = value;
					this.OnPropertyChanged("Amount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDuties2SADGoodID", Storage="_sADDuties2SADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADDuties2SADGoodID {
			get {
				return this._sADDuties2SADGoodID.GetEntity();
			}
			set {
				this._sADDuties2SADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADDuties2SADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDuties2SADGoodID", this._sADDuties2SADGoodID.Clone());
		}
		
		private void OnSADDuties2SADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDuties2SADGoodID");
		}
		
		private void OnSADDuties2SADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDuties.Add(this);
			}
			else {
				e.Item.SADDuties.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// SAD Good List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADGood", Id="0x01003016924817E4AF4A9AD790284C0BAE65")]
	public partial class SADGood : Element {
		
		private System.Nullable<double> _itemNo;
		
		private string _goodsDescription;
		
		private string _pCNTariffCode;
		
		private System.Nullable<double> _grossMass;
		
		private string _procedure;
		
		private System.Nullable<double> _totalAmountInvoiced;
		
		private System.Nullable<double> _netMass;
		
		private Microsoft.SharePoint.Linq.EntitySet<Clearence> _clearence;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADDuties> _sADDuties;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADDocumentType> _sADDocumentIndex;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADPackage> _sADPackage;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADQuantity> _sADQuantity;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADRequiredDocuments> _sADRequiredDocuments;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADGood() {
			this._clearence = new Microsoft.SharePoint.Linq.EntitySet<Clearence>();
			this._clearence.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnClearenceSync);
			this._clearence.OnChanged += new System.EventHandler(this.OnClearenceChanged);
			this._clearence.OnChanging += new System.EventHandler(this.OnClearenceChanging);
			this._sADDuties = new Microsoft.SharePoint.Linq.EntitySet<SADDuties>();
			this._sADDuties.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDuties>>(this.OnSADDutiesSync);
			this._sADDuties.OnChanged += new System.EventHandler(this.OnSADDutiesChanged);
			this._sADDuties.OnChanging += new System.EventHandler(this.OnSADDutiesChanging);
			this._sADDocumentIndex = new Microsoft.SharePoint.Linq.EntityRef<SADDocumentType>();
			this._sADDocumentIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType>>(this.OnSADDocumentIndexSync);
			this._sADDocumentIndex.OnChanged += new System.EventHandler(this.OnSADDocumentIndexChanged);
			this._sADDocumentIndex.OnChanging += new System.EventHandler(this.OnSADDocumentIndexChanging);
			this._sADPackage = new Microsoft.SharePoint.Linq.EntitySet<SADPackage>();
			this._sADPackage.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADPackage>>(this.OnSADPackageSync);
			this._sADPackage.OnChanged += new System.EventHandler(this.OnSADPackageChanged);
			this._sADPackage.OnChanging += new System.EventHandler(this.OnSADPackageChanging);
			this._sADQuantity = new Microsoft.SharePoint.Linq.EntitySet<SADQuantity>();
			this._sADQuantity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADQuantity>>(this.OnSADQuantitySync);
			this._sADQuantity.OnChanged += new System.EventHandler(this.OnSADQuantityChanged);
			this._sADQuantity.OnChanging += new System.EventHandler(this.OnSADQuantityChanging);
			this._sADRequiredDocuments = new Microsoft.SharePoint.Linq.EntitySet<SADRequiredDocuments>();
			this._sADRequiredDocuments.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADRequiredDocuments>>(this.OnSADRequiredDocumentsSync);
			this._sADRequiredDocuments.OnChanged += new System.EventHandler(this.OnSADRequiredDocumentsChanged);
			this._sADRequiredDocuments.OnChanging += new System.EventHandler(this.OnSADRequiredDocumentsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsDescription", Storage="_goodsDescription", FieldType="Text")]
		public string GoodsDescription {
			get {
				return this._goodsDescription;
			}
			set {
				if ((value != this._goodsDescription)) {
					this.OnPropertyChanging("GoodsDescription", this._goodsDescription);
					this._goodsDescription = value;
					this.OnPropertyChanged("GoodsDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PCNTariffCode", Storage="_pCNTariffCode", FieldType="Text")]
		public string PCNTariffCode {
			get {
				return this._pCNTariffCode;
			}
			set {
				if ((value != this._pCNTariffCode)) {
					this.OnPropertyChanging("PCNTariffCode", this._pCNTariffCode);
					this._pCNTariffCode = value;
					this.OnPropertyChanged("PCNTariffCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GrossMass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Procedure", Storage="_procedure", FieldType="Text")]
		public string Procedure {
			get {
				return this._procedure;
			}
			set {
				if ((value != this._procedure)) {
					this.OnPropertyChanging("Procedure", this._procedure);
					this._procedure = value;
					this.OnPropertyChanged("Procedure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TotalAmountInvoiced", Storage="_totalAmountInvoiced", FieldType="Number")]
		public System.Nullable<double> TotalAmountInvoiced {
			get {
				return this._totalAmountInvoiced;
			}
			set {
				if ((value != this._totalAmountInvoiced)) {
					this.OnPropertyChanging("TotalAmountInvoiced", this._totalAmountInvoiced);
					this._totalAmountInvoiced = value;
					this.OnPropertyChanged("TotalAmountInvoiced");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NetMass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Clearence2SadGoodID", Storage="_clearence", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Clearence")]
		public Microsoft.SharePoint.Linq.EntitySet<Clearence> Clearence {
			get {
				return this._clearence;
			}
			set {
				this._clearence.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDuties2SADGoodID", Storage="_sADDuties", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Duties")]
		public Microsoft.SharePoint.Linq.EntitySet<SADDuties> SADDuties {
			get {
				return this._sADDuties;
			}
			set {
				this._sADDuties.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumentIndex", Storage="_sADDocumentIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Document")]
		public SADDocumentType SADDocumentIndex {
			get {
				return this._sADDocumentIndex.GetEntity();
			}
			set {
				this._sADDocumentIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADPackage2SADGoodID", Storage="_sADPackage", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Package")]
		public Microsoft.SharePoint.Linq.EntitySet<SADPackage> SADPackage {
			get {
				return this._sADPackage;
			}
			set {
				this._sADPackage.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADQuantity2SADGoodID", Storage="_sADQuantity", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Quantity")]
		public Microsoft.SharePoint.Linq.EntitySet<SADQuantity> SADQuantity {
			get {
				return this._sADQuantity;
			}
			set {
				this._sADQuantity.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADRequiredDoc2SADGoodID", Storage="_sADRequiredDocuments", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Required Documents")]
		public Microsoft.SharePoint.Linq.EntitySet<SADRequiredDocuments> SADRequiredDocuments {
			get {
				return this._sADRequiredDocuments;
			}
			set {
				this._sADRequiredDocuments.Assign(value);
			}
		}
		
		private void OnClearenceChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Clearence", this._clearence.Clone());
		}
		
		private void OnClearenceChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Clearence");
		}
		
		private void OnClearenceSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Clearence2SadGoodID = this;
			}
			else {
				e.Item.Clearence2SadGoodID = null;
			}
		}
		
		private void OnSADDutiesChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDuties", this._sADDuties.Clone());
		}
		
		private void OnSADDutiesChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDuties");
		}
		
		private void OnSADDutiesSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDuties> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDuties2SADGoodID = this;
			}
			else {
				e.Item.SADDuties2SADGoodID = null;
			}
		}
		
		private void OnSADDocumentIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDocumentIndex", this._sADDocumentIndex.Clone());
		}
		
		private void OnSADDocumentIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDocumentIndex");
		}
		
		private void OnSADDocumentIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADGood.Add(this);
			}
			else {
				e.Item.SADGood.Remove(this);
			}
		}
		
		private void OnSADPackageChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADPackage", this._sADPackage.Clone());
		}
		
		private void OnSADPackageChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADPackage");
		}
		
		private void OnSADPackageSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADPackage> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADPackage2SADGoodID = this;
			}
			else {
				e.Item.SADPackage2SADGoodID = null;
			}
		}
		
		private void OnSADQuantityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADQuantity", this._sADQuantity.Clone());
		}
		
		private void OnSADQuantityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADQuantity");
		}
		
		private void OnSADQuantitySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADQuantity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADQuantity2SADGoodID = this;
			}
			else {
				e.Item.SADQuantity2SADGoodID = null;
			}
		}
		
		private void OnSADRequiredDocumentsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADRequiredDocuments", this._sADRequiredDocuments.Clone());
		}
		
		private void OnSADRequiredDocumentsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADRequiredDocuments");
		}
		
		private void OnSADRequiredDocumentsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADRequiredDocuments> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADRequiredDoc2SADGoodID = this;
			}
			else {
				e.Item.SADRequiredDoc2SADGoodID = null;
			}
		}
	}
	
	/// <summary>
	/// SAD Package List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADPackage", Id="0x01007F42F9669FE35A41801B017E1D69C7D9")]
	public partial class SADPackage : Element {
		
		private System.Nullable<double> _itemNo;
		
		private string _package;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADPackage2SADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADPackage() {
			this._sADPackage2SADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADPackage2SADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADPackage2SADGoodIDSync);
			this._sADPackage2SADGoodID.OnChanged += new System.EventHandler(this.OnSADPackage2SADGoodIDChanged);
			this._sADPackage2SADGoodID.OnChanging += new System.EventHandler(this.OnSADPackage2SADGoodIDChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Package", Storage="_package", FieldType="Text")]
		public string Package {
			get {
				return this._package;
			}
			set {
				if ((value != this._package)) {
					this.OnPropertyChanging("Package", this._package);
					this._package = value;
					this.OnPropertyChanged("Package");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADPackage2SADGoodID", Storage="_sADPackage2SADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADPackage2SADGoodID {
			get {
				return this._sADPackage2SADGoodID.GetEntity();
			}
			set {
				this._sADPackage2SADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADPackage2SADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADPackage2SADGoodID", this._sADPackage2SADGoodID.Clone());
		}
		
		private void OnSADPackage2SADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADPackage2SADGoodID");
		}
		
		private void OnSADPackage2SADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADPackage.Add(this);
			}
			else {
				e.Item.SADPackage.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// SAD Quantity List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADQuantity", Id="0x010016BC5B99EA5169458266BB52B8784B3F")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADQuantitySADQuantity))]
	public partial class SADQuantity : Element {
		
		private string _contentType;
		
		private System.Nullable<double> _itemNo;
		
		private System.Nullable<double> _netMass;
		
		private string _units;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADQuantity2SADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADQuantity() {
			this._sADQuantity2SADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADQuantity2SADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADQuantity2SADGoodIDSync);
			this._sADQuantity2SADGoodID.OnChanged += new System.EventHandler(this.OnSADQuantity2SADGoodIDChanged);
			this._sADQuantity2SADGoodID.OnChanging += new System.EventHandler(this.OnSADQuantity2SADGoodIDChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContentType", Storage="_contentType", FieldType="Computed")]
		public virtual string ContentType {
			get {
				return this._contentType;
			}
			set {
				if ((value != this._contentType)) {
					this.OnPropertyChanging("ContentType", this._contentType);
					this._contentType = value;
					this.OnPropertyChanged("ContentType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NetMass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADQuantity2SADGoodID", Storage="_sADQuantity2SADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADQuantity2SADGoodID {
			get {
				return this._sADQuantity2SADGoodID.GetEntity();
			}
			set {
				this._sADQuantity2SADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADQuantity2SADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADQuantity2SADGoodID", this._sADQuantity2SADGoodID.Clone());
		}
		
		private void OnSADQuantity2SADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADQuantity2SADGoodID");
		}
		
		private void OnSADQuantity2SADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADQuantity.Add(this);
			}
			else {
				e.Item.SADQuantity.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// SAD Required Documents List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADRequiredDocuments", Id="0x0100CAF95BD14627B343981DE5345DD0BD37")]
	public partial class SADRequiredDocuments : Element {
		
		private string _code;
		
		private string _number;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADRequiredDoc2SADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADRequiredDocuments() {
			this._sADRequiredDoc2SADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADRequiredDoc2SADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADRequiredDoc2SADGoodIDSync);
			this._sADRequiredDoc2SADGoodID.OnChanged += new System.EventHandler(this.OnSADRequiredDoc2SADGoodIDChanged);
			this._sADRequiredDoc2SADGoodID.OnChanging += new System.EventHandler(this.OnSADRequiredDoc2SADGoodIDChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Code", Storage="_code", FieldType="Text")]
		public string Code {
			get {
				return this._code;
			}
			set {
				if ((value != this._code)) {
					this.OnPropertyChanging("Code", this._code);
					this._code = value;
					this.OnPropertyChanged("Code");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Number", Storage="_number", FieldType="Text")]
		public string Number {
			get {
				return this._number;
			}
			set {
				if ((value != this._number)) {
					this.OnPropertyChanging("Number", this._number);
					this._number = value;
					this.OnPropertyChanged("Number");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADRequiredDoc2SADGoodID", Storage="_sADRequiredDoc2SADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADRequiredDoc2SADGoodID {
			get {
				return this._sADRequiredDoc2SADGoodID.GetEntity();
			}
			set {
				this._sADRequiredDoc2SADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADRequiredDoc2SADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADRequiredDoc2SADGoodID", this._sADRequiredDoc2SADGoodID.Clone());
		}
		
		private void OnSADRequiredDoc2SADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADRequiredDoc2SADGoodID");
		}
		
		private void OnSADRequiredDoc2SADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADRequiredDocuments.Add(this);
			}
			else {
				e.Item.SADRequiredDocuments.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Settings List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Settings", Id="0x01007860DD9E4A2C4C28A13C4DD2E6F0B710")]
	public partial class Settings : Element {
		
		private string _keyValue;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Settings() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="KeyValue", Storage="_keyValue", Required=true, FieldType="Text")]
		public string KeyValue {
			get {
				return this._keyValue;
			}
			set {
				if ((value != this._keyValue)) {
					this.OnPropertyChanging("KeyValue", this._keyValue);
					this._keyValue = value;
					this.OnPropertyChanged("KeyValue");
				}
			}
		}
	}
	
	/// <summary>
	/// Vendor Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Vendor", Id="0x0100DC84F48478204C6B815C06C178C57F9D")]
	public partial class Vendor : Element {
		
		private string _workAddress;
		
		private string _workCity;
		
		private string _workCountry;
		
		private string _workZip;
		
		private Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse> _customsWarehouse;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Vendor() {
			this._customsWarehouse = new Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse>();
			this._customsWarehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouse>>(this.OnCustomsWarehouseSync);
			this._customsWarehouse.OnChanged += new System.EventHandler(this.OnCustomsWarehouseChanged);
			this._customsWarehouse.OnChanging += new System.EventHandler(this.OnCustomsWarehouseChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkAddress", Storage="_workAddress", FieldType="Note")]
		public string WorkAddress {
			get {
				return this._workAddress;
			}
			set {
				if ((value != this._workAddress)) {
					this.OnPropertyChanging("WorkAddress", this._workAddress);
					this._workAddress = value;
					this.OnPropertyChanged("WorkAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCity", Storage="_workCity", FieldType="Text")]
		public string WorkCity {
			get {
				return this._workCity;
			}
			set {
				if ((value != this._workCity)) {
					this.OnPropertyChanging("WorkCity", this._workCity);
					this._workCity = value;
					this.OnPropertyChanged("WorkCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCountry", Storage="_workCountry", FieldType="Text")]
		public string WorkCountry {
			get {
				return this._workCountry;
			}
			set {
				if ((value != this._workCountry)) {
					this.OnPropertyChanging("WorkCountry", this._workCountry);
					this._workCountry = value;
					this.OnPropertyChanged("WorkCountry");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkZip", Storage="_workZip", FieldType="Text")]
		public string WorkZip {
			get {
				return this._workZip;
			}
			set {
				if ((value != this._workZip)) {
					this.OnPropertyChanging("WorkZip", this._workZip);
					this._workZip = value;
					this.OnPropertyChanged("WorkZip");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CW2VendorTitle", Storage="_customsWarehouse", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Customs Warehouse")]
		public Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse> CustomsWarehouse {
			get {
				return this._customsWarehouse;
			}
			set {
				this._customsWarehouse.Assign(value);
			}
		}
		
		private void OnCustomsWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CustomsWarehouse", this._customsWarehouse.Clone());
		}
		
		private void OnCustomsWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CustomsWarehouse");
		}
		
		private void OnCustomsWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CWL_CW2VendorTitle = this;
			}
			else {
				e.Item.CWL_CW2VendorTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Warehouse List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Warehouse", Id="0x01001E57547208B49B46B4AA7CB4536B1A55")]
	public partial class Warehouse : Element {
		
		private string _warehouseName;
		
		private string _procedure;
		
		private System.Nullable<ProductType> _productType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Warehouse() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WarehouseName", Storage="_warehouseName", Required=true, FieldType="Text")]
		public string WarehouseName {
			get {
				return this._warehouseName;
			}
			set {
				if ((value != this._warehouseName)) {
					this.OnPropertyChanging("WarehouseName", this._warehouseName);
					this._warehouseName = value;
					this.OnPropertyChanged("WarehouseName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Procedure", Storage="_procedure", Required=true, FieldType="Text")]
		public string Procedure {
			get {
				return this._procedure;
			}
			set {
				if ((value != this._procedure)) {
					this.OnPropertyChanging("Procedure", this._procedure);
					this._procedure = value;
					this.OnPropertyChanged("Procedure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", Required=true, FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
	}
	
	/// <summary>
	/// Activity Log List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ActivityLogCT", Id="0x0104005C85A6C821F245D582FCC9CDC2D3688C")]
	public partial class ActivityLogCT : Announcement {
		
		private string _activityPriority;
		
		private string _activitySource;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ActivityLogCT() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ActivityPriority", Storage="_activityPriority", FieldType="Text")]
		public string ActivityPriority {
			get {
				return this._activityPriority;
			}
			set {
				if ((value != this._activityPriority)) {
					this.OnPropertyChanging("ActivityPriority", this._activityPriority);
					this._activityPriority = value;
					this.OnPropertyChanged("ActivityPriority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ActivitySource", Storage="_activitySource", FieldType="Text")]
		public string ActivitySource {
			get {
				return this._activitySource;
			}
			set {
				if ((value != this._activitySource)) {
					this.OnPropertyChanging("ActivitySource", this._activitySource);
					this._activitySource = value;
					this.OnPropertyChanged("ActivitySource");
				}
			}
		}
	}
	
	/// <summary>
	/// Bin Card Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="BinCardLib", Id="0x010100F4691A6A293E458E8EF97B775DBAE861")]
	public partial class BinCardLib : Document {
		
		private Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse> _customsWarehouse;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public BinCardLib() {
			this._customsWarehouse = new Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse>();
			this._customsWarehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouse>>(this.OnCustomsWarehouseSync);
			this._customsWarehouse.OnChanged += new System.EventHandler(this.OnCustomsWarehouseChanged);
			this._customsWarehouse.OnChanging += new System.EventHandler(this.OnCustomsWarehouseChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CW2BinCardTitle", Storage="_customsWarehouse", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Customs Warehouse")]
		public Microsoft.SharePoint.Linq.EntitySet<CustomsWarehouse> CustomsWarehouse {
			get {
				return this._customsWarehouse;
			}
			set {
				this._customsWarehouse.Assign(value);
			}
		}
		
		private void OnCustomsWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CustomsWarehouse", this._customsWarehouse.Clone());
		}
		
		private void OnCustomsWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CustomsWarehouse");
		}
		
		private void OnCustomsWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CustomsWarehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CWL_CW2BinCardTitle = this;
			}
			else {
				e.Item.CWL_CW2BinCardTitle = null;
			}
		}
	}
	
	/// <summary>
	/// Customs Warehouse Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CustomsWarehouseLib", Id="0x010100719D28821A6F456C8F47FB42F9B33DAA")]
	public partial class CustomsWarehouseLib : Document {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CustomsWarehouseLib() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// Disposal Request Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="DisposalRequestLib", Id="0x0101006A3BDDD5D82D4C03B297650EEECA0EF2")]
	public partial class DisposalRequestLib : Document {
		
		private Microsoft.SharePoint.Linq.EntitySet<DisposalRequestContent> _disposalRequestContent;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DisposalRequestLib() {
			this._disposalRequestContent = new Microsoft.SharePoint.Linq.EntitySet<DisposalRequestContent>();
			this._disposalRequestContent.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<DisposalRequestContent>>(this.OnDisposalRequestContentSync);
			this._disposalRequestContent.OnChanged += new System.EventHandler(this.OnDisposalRequestContentChanged);
			this._disposalRequestContent.OnChanging += new System.EventHandler(this.OnDisposalRequestContentChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CWL_CWDisposalRequest2DisposalRequestLibraryID", Storage="_disposalRequestContent", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposa Request Content")]
		public Microsoft.SharePoint.Linq.EntitySet<DisposalRequestContent> DisposalRequestContent {
			get {
				return this._disposalRequestContent;
			}
			set {
				this._disposalRequestContent.Assign(value);
			}
		}
		
		private void OnDisposalRequestContentChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("DisposalRequestContent", this._disposalRequestContent.Clone());
		}
		
		private void OnDisposalRequestContentChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("DisposalRequestContent");
		}
		
		private void OnDisposalRequestContentSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<DisposalRequestContent> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CWL_CWDisposalRequest2DisposalRequestLibraryID = this;
			}
			else {
				e.Item.CWL_CWDisposalRequest2DisposalRequestLibraryID = null;
			}
		}
	}
	
	/// <summary>
	/// SAD Consignment Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADConsignment", Id="0x0101002E7FB2D305D04B84ADEEA8E71EBD1561")]
	public partial class SADConsignment : Document {
		
		private Microsoft.SharePoint.Linq.EntitySet<Clearence> _clearence;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADConsignment() {
			this._clearence = new Microsoft.SharePoint.Linq.EntitySet<Clearence>();
			this._clearence.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnClearenceSync);
			this._clearence.OnChanged += new System.EventHandler(this.OnClearenceChanged);
			this._clearence.OnChanging += new System.EventHandler(this.OnClearenceChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADConsignmentLibraryIndex", Storage="_clearence", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Clearence")]
		public Microsoft.SharePoint.Linq.EntitySet<Clearence> Clearence {
			get {
				return this._clearence;
			}
			set {
				this._clearence.Assign(value);
			}
		}
		
		private void OnClearenceChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Clearence", this._clearence.Clone());
		}
		
		private void OnClearenceChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Clearence");
		}
		
		private void OnClearenceSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADConsignmentLibraryIndex = this;
			}
			else {
				e.Item.SADConsignmentLibraryIndex = null;
			}
		}
	}
	
	/// <summary>
	/// SAD Document Library Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADDocumentLib", Id="0x010100475F601A85C84D02B51F765E42311C86")]
	public partial class SADDocumentLib : Document {
		
		private System.Nullable<bool> _sADDocumentLibraryOK;
		
		private string _sADDocumentLibraryComments;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADDocumentType> _sADDocumentType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADDocumentLib() {
			this._sADDocumentType = new Microsoft.SharePoint.Linq.EntitySet<SADDocumentType>();
			this._sADDocumentType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType>>(this.OnSADDocumentTypeSync);
			this._sADDocumentType.OnChanged += new System.EventHandler(this.OnSADDocumentTypeChanged);
			this._sADDocumentType.OnChanging += new System.EventHandler(this.OnSADDocumentTypeChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDocumentLibraryOK", Storage="_sADDocumentLibraryOK", FieldType="Boolean")]
		public System.Nullable<bool> SADDocumentLibraryOK {
			get {
				return this._sADDocumentLibraryOK;
			}
			set {
				if ((value != this._sADDocumentLibraryOK)) {
					this.OnPropertyChanging("SADDocumentLibraryOK", this._sADDocumentLibraryOK);
					this._sADDocumentLibraryOK = value;
					this.OnPropertyChanged("SADDocumentLibraryOK");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDocumentLibraryComments", Storage="_sADDocumentLibraryComments", FieldType="Text")]
		public string SADDocumentLibraryComments {
			get {
				return this._sADDocumentLibraryComments;
			}
			set {
				if ((value != this._sADDocumentLibraryComments)) {
					this.OnPropertyChanging("SADDocumentLibraryComments", this._sADDocumentLibraryComments);
					this._sADDocumentLibraryComments = value;
					this.OnPropertyChanged("SADDocumentLibraryComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumenLibrarytIndex", Storage="_sADDocumentType", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Document")]
		public Microsoft.SharePoint.Linq.EntitySet<SADDocumentType> SADDocumentType {
			get {
				return this._sADDocumentType;
			}
			set {
				this._sADDocumentType.Assign(value);
			}
		}
		
		private void OnSADDocumentTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDocumentType", this._sADDocumentType.Clone());
		}
		
		private void OnSADDocumentTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDocumentType");
		}
		
		private void OnSADDocumentTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDocumenLibrarytIndex = this;
			}
			else {
				e.Item.SADDocumenLibrarytIndex = null;
			}
		}
	}
	
	/// <summary>
	/// SAD Quantity List Content Type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADQuantity", Id="0x010016BC5B99EA5169458266BB52B8784B3F", List="SAD Quantity")]
	public partial class SADQuantitySADQuantity : SADQuantity {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADQuantitySADQuantity() {
			this.OnCreated();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string ContentType {
			get {
				throw new System.InvalidOperationException("Field ContentType was removed from content type SADQuantity.");
			}
			set {
				throw new System.InvalidOperationException("Field ContentType was removed from content type SADQuantity.");
			}
		}
	}
	
	public enum ClearenceProcedure : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3151")]
		_3151 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3171")]
		_3171 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4051")]
		_4051 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4071")]
		_4071 = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="5100")]
		_5100 = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="5171")]
		_5171 = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="7100")]
		_7100 = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="7171")]
		_7171 = 256,
	}
	
	public enum ClearingType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Partial winding-up")]
		PartialWindingUp = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Total winding-up")]
		TotalWindingUp = 4,
	}
	
	public enum CustomsStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Not started")]
		NotStarted = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Started")]
		Started = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Finished")]
		Finished = 8,
	}
	
	public enum ProductType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Cutfiller")]
		Cutfiller = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Cigarette")]
		Cigarette = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco")]
		Tobacco = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="IPRTobacco")]
		IPRTobacco = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Other")]
		Other = 32,
	}
}
