<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlarmsAndEventsListCT" xml:space="preserve">
    <value>Alarms And Events List Content Type</value>
  </data>
  <data name="BusinessDescriptionListCT" xml:space="preserve">
    <value>Business Description List Content Type</value>
  </data>
  <data name="CarrierPerformanceReportListCT" xml:space="preserve">
    <value>Carrier Performance Report List Content Type</value>
  </data>
  <data name="CarriersListCT" xml:space="preserve">
    <value>Carriers List Content Type</value>
  </data>
  <data name="CityListCT" xml:space="preserve">
    <value>City List Content Type</value>
  </data>
  <data name="CommodityListCT" xml:space="preserve">
    <value>Commodity List Content Type</value>
  </data>
  <data name="CountryListCT" xml:space="preserve">
    <value>Country List Content Type</value>
  </data>
  <data name="CurrencyListCT" xml:space="preserve">
    <value>Currency List Content Type</value>
  </data>
  <data name="DestinationMarketListCT" xml:space="preserve">
    <value>Destination Market List Content Type</value>
  </data>
  <data name="DistributionListCT" xml:space="preserve">
    <value>Distribution List Content Type</value>
  </data>
  <data name="DriversListCT" xml:space="preserve">
    <value>Drivers List Content Type</value>
  </data>
  <data name="DriversTeamListCT" xml:space="preserve">
    <value>Drivers Team List Content Type</value>
  </data>
  <data name="EndMinute" xml:space="preserve">
    <value>End minute</value>
  </data>
  <data name="EscortPOLibraryCT" xml:space="preserve">
    <value>Escort PO Library Content Type</value>
  </data>
  <data name="ExchangeRateListCT" xml:space="preserve">
    <value>Exchange Rate List Content Type</value>
  </data>
  <data name="FreightPOLibraryCT" xml:space="preserve">
    <value>Freight PO Library Content Type</value>
  </data>
  <data name="LoadDescriptionListCT" xml:space="preserve">
    <value>Load Description List Content Type</value>
  </data>
  <data name="PartnersListCT" xml:space="preserve">
    <value>Partners List Content Type</value>
  </data>
  <data name="PO_No" xml:space="preserve">
    <value>Numer PO</value>
  </data>
  <data name="RoutesListCT" xml:space="preserve">
    <value>Routes List Content Type</value>
  </data>
  <data name="SAPDestinationPlantsListCT" xml:space="preserve">
    <value>SAP Destination Plants Content Type</value>
  </data>
  <data name="ScheduleTemplateListCT" xml:space="preserve">
    <value>Schedule Template List Content Type</value>
  </data>
  <data name="SecurityEscortCatalogListCT" xml:space="preserve">
    <value>Security Escort Catalog List Content Type</value>
  </data>
  <data name="SecuritySealProtocolLibraryCT" xml:space="preserve">
    <value>Security Seal Protocol Library Content Type</value>
  </data>
  <data name="ShepherdWebsiteFeature" xml:space="preserve">
    <value>Shepherd Website Feature</value>
  </data>
  <data name="ShepherdWebsiteFeatureDes" xml:space="preserve">
    <value>Contains information model for Shepherd web application.</value>
  </data>
  <data name="ShipmentTypeListCT" xml:space="preserve">
    <value>Shipment Type List Content Type</value>
  </data>
  <data name="ShippingPointListCT" xml:space="preserve">
    <value>Shipping Point List Content Type</value>
  </data>
  <data name="ShippingsListCT" xml:space="preserve">
    <value>Shippings List Content Type</value>
  </data>
  <data name="TimeSlotListCT" xml:space="preserve">
    <value>TimeSlot List Content Type</value>
  </data>
  <data name="TimeSlotTemplateListCT" xml:space="preserve">
    <value>Time Slot Template List Content Type</value>
  </data>
  <data name="TrailersListCT" xml:space="preserve">
    <value>Trailers List Content Type</value>
  </data>
  <data name="TranspotUnitTypeListCT" xml:space="preserve">
    <value>Transpot Unit Type List CT</value>
  </data>
  <data name="TrucksListCT" xml:space="preserve">
    <value>Trucks List Content Type</value>
  </data>
  <data name="WarehousesListCT" xml:space="preserve">
    <value>Warehouses List Content Type</value>
  </data>
  <data name="ActualDispatchDate" xml:space="preserve">
    <value>Actual dispatch date</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Awaiting" xml:space="preserve">
    <value>Awaiting</value>
  </data>
  <data name="BusinessDescription" xml:space="preserve">
    <value>Business description</value>
  </data>
  <data name="Carrier" xml:space="preserve">
    <value>Carrier</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="CityOfDeparture" xml:space="preserve">
    <value>City of departure</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="Commodity" xml:space="preserve">
    <value>Commodity</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="ConainersNo" xml:space="preserve">
    <value>Container no.</value>
  </data>
  <data name="Consignee" xml:space="preserve">
    <value>Consignee</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="DeliveryToCountry" xml:space="preserve">
    <value>Delivery to country</value>
  </data>
  <data name="DepartureCity" xml:space="preserve">
    <value>City of Departure</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Direction" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="DispatchDate" xml:space="preserve">
    <value>Dispatch date</value>
  </data>
  <data name="Driver" xml:space="preserve">
    <value>Driver name</value>
  </data>
  <data name="DriversPhone" xml:space="preserve">
    <value>Driver's phone</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="EndHour" xml:space="preserve">
    <value>End hour</value>
  </data>
  <data name="EscortCosts" xml:space="preserve">
    <value>Escort costs</value>
  </data>
  <data name="EscortDestination" xml:space="preserve">
    <value>Escort destination</value>
  </data>
  <data name="EscortPhone" xml:space="preserve">
    <value>Escort phone no.</value>
  </data>
  <data name="EscortPlateNo" xml:space="preserve">
    <value>Escort car plate no.</value>
  </data>
  <data name="EuroPalletsQuantity" xml:space="preserve">
    <value>Euro Pallets Quantity</value>
  </data>
  <data name="ExchangeRate" xml:space="preserve">
    <value>Exchange rate</value>
  </data>
  <data name="FirstDriver" xml:space="preserve">
    <value>1st driver</value>
  </data>
  <data name="FirstEscort" xml:space="preserve">
    <value>1st escort</value>
  </data>
  <data name="Forwarder" xml:space="preserve">
    <value>Forwarder</value>
  </data>
  <data name="ForwarderOceanAir" xml:space="preserve">
    <value>Forwarder ocean/air</value>
  </data>
  <data name="FreightCost" xml:space="preserve">
    <value>Freight cost</value>
  </data>
  <data name="FreightPayer" xml:space="preserve">
    <value>Freight payer</value>
  </data>
  <data name="FreightPO" xml:space="preserve">
    <value>Freight PO</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="IDNumber" xml:space="preserve">
    <value>ID number</value>
  </data>
  <data name="Incoterm" xml:space="preserve">
    <value>Incoterm</value>
  </data>
  <data name="InduPalletsQuantity" xml:space="preserve">
    <value>Indu Pallets Quantity</value>
  </data>
  <data name="LoadingDate" xml:space="preserve">
    <value>Loading date</value>
  </data>
  <data name="LoadingType" xml:space="preserve">
    <value>Loading type</value>
  </data>
  <data name="Market" xml:space="preserve">
    <value>Market</value>
  </data>
  <data name="MaterialMaster" xml:space="preserve">
    <value>Material master</value>
  </data>
  <data name="NIPVATNo" xml:space="preserve">
    <value>VAT No.</value>
  </data>
  <data name="NumberTUDelayed" xml:space="preserve">
    <value>Number TU delayed</value>
  </data>
  <data name="NumberTUDelayed1h" xml:space="preserve">
    <value>Number TU delayed &gt;1 hour</value>
  </data>
  <data name="NumberTUNotDelivered" xml:space="preserve">
    <value>Number TU not delivered / not showing up</value>
  </data>
  <data name="NumberTUOrdered" xml:space="preserve">
    <value>Number TU ordered</value>
  </data>
  <data name="NumberTURejected" xml:space="preserve">
    <value>Number TU rejected / bad quality</value>
  </data>
  <data name="PalletSize" xml:space="preserve">
    <value>Pallet size</value>
  </data>
  <data name="PalletType" xml:space="preserve">
    <value>Pallet type</value>
  </data>
  <data name="PayerAddress" xml:space="preserve">
    <value>Payer address</value>
  </data>
  <data name="PayerCity" xml:space="preserve">
    <value>Payer city</value>
  </data>
  <data name="PayerName" xml:space="preserve">
    <value>Payer name</value>
  </data>
  <data name="PayerNIP" xml:space="preserve">
    <value>Payer NIP</value>
  </data>
  <data name="PayerZipCode" xml:space="preserve">
    <value>Payer zip code</value>
  </data>
  <data name="PortOfDeparture" xml:space="preserve">
    <value>Port of departure</value>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>Remark</value>
  </data>
  <data name="ReportPeriod" xml:space="preserve">
    <value>Report period</value>
  </data>
  <data name="Route" xml:space="preserve">
    <value>Route</value>
  </data>
  <data name="SAPDestPlant" xml:space="preserve">
    <value>SAP dest plant</value>
  </data>
  <data name="ScheduleTemplate" xml:space="preserve">
    <value>Schedule template</value>
  </data>
  <data name="SecondDriver" xml:space="preserve">
    <value>2nd driver</value>
  </data>
  <data name="SecondEscort" xml:space="preserve">
    <value>2nd escort</value>
  </data>
  <data name="SecurityCost" xml:space="preserve">
    <value>Security cost</value>
  </data>
  <data name="SecurityEscort" xml:space="preserve">
    <value>Security escort</value>
  </data>
  <data name="SecurityEscortPO" xml:space="preserve">
    <value>Security escort PO</value>
  </data>
  <data name="SecurityEscortProvider" xml:space="preserve">
    <value>Security escort provider</value>
  </data>
  <data name="SecuritySealProtocol" xml:space="preserve">
    <value>Security seal protocol</value>
  </data>
  <data name="SendInvoiceTo" xml:space="preserve">
    <value>Send invoice to</value>
  </data>
  <data name="ServiceType" xml:space="preserve">
    <value>Service type</value>
  </data>
  <data name="ShepherdRole" xml:space="preserve">
    <value>Shepherd role</value>
  </data>
  <data name="ShepherdUser" xml:space="preserve">
    <value>Shepherd user</value>
  </data>
  <data name="ShipmentType" xml:space="preserve">
    <value>Shipment type</value>
  </data>
  <data name="ShippingPoint" xml:space="preserve">
    <value>ShippingPoint</value>
  </data>
  <data name="StartHour" xml:space="preserve">
    <value>Start hour</value>
  </data>
  <data name="StartMinute" xml:space="preserve">
    <value>Start minute</value>
  </data>
  <data name="TotalCostsPerKU" xml:space="preserve">
    <value>Total costs per KU</value>
  </data>
  <data name="TotalQuantityKU" xml:space="preserve">
    <value>Total quantity in KU</value>
  </data>
  <data name="TrailerPlateNo" xml:space="preserve">
    <value>Trailer plate no.</value>
  </data>
  <data name="TransportCost" xml:space="preserve">
    <value>Transport cost</value>
  </data>
  <data name="TransportUnitType" xml:space="preserve">
    <value>Transport unit type</value>
  </data>
  <data name="TruckPlateNo" xml:space="preserve">
    <value>Truck plate no.</value>
  </data>
  <data name="VehicleType" xml:space="preserve">
    <value>Vehicle type</value>
  </data>
  <data name="VendorNumber" xml:space="preserve">
    <value>Partner SAP No.</value>
  </data>
  <data name="Warehouse" xml:space="preserve">
    <value>Warehouse</value>
  </data>
  <data name="WarehouseAddress" xml:space="preserve">
    <value>Warehouse address</value>
  </data>
</root>