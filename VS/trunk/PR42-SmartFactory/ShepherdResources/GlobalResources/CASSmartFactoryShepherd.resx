<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Abort" xml:space="preserve">
    <value>Abort</value>
  </data>
  <data name="AddDrivers" xml:space="preserve">
    <value>&gt;&gt;</value>
  </data>
  <data name="AddNew" xml:space="preserve">
    <value>Add new</value>
  </data>
  <data name="AllDrivers" xml:space="preserve">
    <value>All drivers:</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="ContainerNumber" xml:space="preserve">
    <value>Container no.</value>
  </data>
  <data name="Destination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="DockNumber" xml:space="preserve">
    <value>Dock no.</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditRouteEscort" xml:space="preserve">
    <value>Edit route / escort</value>
  </data>
  <data name="EditRouteEscortToolTip" xml:space="preserve">
    <value>Select to start editing route and escort association</value>
  </data>
  <data name="ETA" xml:space="preserve">
    <value>ETA</value>
  </data>
  <data name="ETAToolTip" xml:space="preserve">
    <value>Estimated Time of Arrival</value>
  </data>
  <data name="PONumber" xml:space="preserve">
    <value>PO number</value>
  </data>
  <data name="RemoveDrivers" xml:space="preserve">
    <value>&lt;&lt;</value>
  </data>
  <data name="Route" xml:space="preserve">
    <value>Route</value>
  </data>
  <data name="RouteEscortEditing" xml:space="preserve">
    <value>Route / escort editing</value>
  </data>
  <data name="RouteEscortEditingToolTip" xml:space="preserve">
    <value>Select the check box to enable editing</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SecurityEscort" xml:space="preserve">
    <value>Security escort</value>
  </data>
  <data name="SecurityRequired" xml:space="preserve">
    <value>Security required</value>
  </data>
  <data name="SelectCity" xml:space="preserve">
    <value>--  Select a city from city table --</value>
  </data>
  <data name="SelectedDrivers" xml:space="preserve">
    <value>Selected drivers:</value>
  </data>
  <data name="SelectVendor" xml:space="preserve">
    <value>--  Select a vendor from vendors table --</value>
  </data>
  <data name="Shipping" xml:space="preserve">
    <value>Shipment No.</value>
  </data>
  <data name="TimeSlot" xml:space="preserve">
    <value>Time slot</value>
  </data>
  <data name="TimeSlotToolTip" xml:space="preserve">
    <value>Select a Time Slot from the calendar to schedule the shipment</value>
  </data>
  <data name="Trailer" xml:space="preserve">
    <value>Trailer</value>
  </data>
  <data name="TrailerComments" xml:space="preserve">
    <value>Trailer comments</value>
  </data>
  <data name="TrailerCommentsToolTip" xml:space="preserve">
    <value>Add note about trailer condition</value>
  </data>
  <data name="TrailerCondition" xml:space="preserve">
    <value>Trailer condition</value>
  </data>
  <data name="TransportUnitType" xml:space="preserve">
    <value>Transport unit type</value>
  </data>
  <data name="Truck" xml:space="preserve">
    <value>Truck</value>
  </data>
  <data name="Warehouse" xml:space="preserve">
    <value>Warehouse</value>
  </data>
  <data name="WarehouseToolTip" xml:space="preserve">
    <value>Select a Warehouse and next a Time Slot from the calendar to schedule the shipment</value>
  </data>
  <data name="Arrived" xml:space="preserve">
    <value>Arrived</value>
  </data>
  <data name="CMRNo" xml:space="preserve">
    <value>CMR no.</value>
  </data>
  <data name="CommentsTrailerToolTip" xml:space="preserve">
    <value>Comment that will allow you to easily identify the trailer</value>
  </data>
  <data name="Commodity" xml:space="preserve">
    <value>Commodity</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Driver" xml:space="preserve">
    <value>Driver name</value>
  </data>
  <data name="DriverToolTip" xml:space="preserve">
    <value>Driver's name and surename</value>
  </data>
  <data name="Enters" xml:space="preserve">
    <value>Enters</value>
  </data>
  <data name="GoodsQty" xml:space="preserve">
    <value>Goods Qty.</value>
  </data>
  <data name="IDNumber" xml:space="preserve">
    <value>ID number</value>
  </data>
  <data name="IDNumberToolTip" xml:space="preserve">
    <value>Driver's identity document number</value>
  </data>
  <data name="InvoiceNo" xml:space="preserve">
    <value>Invoice no.</value>
  </data>
  <data name="Leaves" xml:space="preserve">
    <value>Leaves</value>
  </data>
  <data name="Market" xml:space="preserve">
    <value>Market</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="MobileToolTip" xml:space="preserve">
    <value>Driver's mobile phone number</value>
  </data>
  <data name="PalletQty" xml:space="preserve">
    <value>Pallet Qty.</value>
  </data>
  <data name="PalletType" xml:space="preserve">
    <value>Pallet type</value>
  </data>
  <data name="PODelNo" xml:space="preserve">
    <value>PO / Del No.</value>
  </data>
  <data name="TrailerToolTip" xml:space="preserve">
    <value>Trailer plate No.</value>
  </data>
  <data name="TruckCommentsToolTip" xml:space="preserve">
    <value>Comment that will allow you to easily identify the truck</value>
  </data>
  <data name="TruckPlateNo" xml:space="preserve">
    <value>Truck plate No.</value>
  </data>
  <data name="TruckPlateNoToolTip" xml:space="preserve">
    <value>Truck plate No.</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="VehicleType" xml:space="preserve">
    <value>Vehicle type</value>
  </data>
  <data name="VehicleTypeToolTip" xml:space="preserve">
    <value>Please select vehicle type: truck, van, security escort car</value>
  </data>
  <data name="TrailerPlateNo" xml:space="preserve">
    <value>Trailer plate No.</value>
  </data>
  <data name="AvailableTimeSlotsToolTip" xml:space="preserve">
    <value>Available Time Slots</value>
  </data>
  <data name="ShowDoubleTimeslots" xml:space="preserve">
    <value>Show double time slots only</value>
  </data>
  <data name="Escort" xml:space="preserve">
    <value>Escort</value>
  </data>
  <data name="Forwarder" xml:space="preserve">
    <value>Forwarder</value>
  </data>
  <data name="Gate" xml:space="preserve">
    <value>Gate</value>
  </data>
  <data name="InboundOwner" xml:space="preserve">
    <value>Inbound owner</value>
  </data>
  <data name="ManageResources" xml:space="preserve">
    <value>Manage resources</value>
  </data>
  <data name="Operator" xml:space="preserve">
    <value>Operator</value>
  </data>
  <data name="OutboundCoordinator" xml:space="preserve">
    <value>Outbound coordinator</value>
  </data>
  <data name="OutboundOwner" xml:space="preserve">
    <value>Outbound owner</value>
  </data>
  <data name="Supervisor" xml:space="preserve">
    <value>Supervisor</value>
  </data>
  <data name="Vendor" xml:space="preserve">
    <value>Vendor</value>
  </data>
  <data name="ViewInbounds" xml:space="preserve">
    <value>View inbounds</value>
  </data>
  <data name="ViewOutbounds" xml:space="preserve">
    <value>View outbounds</value>
  </data>
  <data name="CreateTimeSlots" xml:space="preserve">
    <value>Create time slots</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="DurationDes" xml:space="preserve">
    <value>Please select for how many weeks you want to create time slots</value>
  </data>
  <data name="SelectDay" xml:space="preserve">
    <value>Select day</value>
  </data>
  <data name="SelectDayDes" xml:space="preserve">
    <value>Please select a day from which you want to begin time slots creation</value>
  </data>
  <data name="SelectMonth" xml:space="preserve">
    <value>Select month</value>
  </data>
  <data name="SelectMonthDes" xml:space="preserve">
    <value>Please select a month from which you want to begin time slots creation</value>
  </data>
  <data name="SelectYear" xml:space="preserve">
    <value>Select year</value>
  </data>
  <data name="SelectYearDes" xml:space="preserve">
    <value>Please select a year from which you want to begin time slots creation</value>
  </data>
  <data name="StartWorkflow" xml:space="preserve">
    <value>Start workflow</value>
  </data>
  <data name="FooterText" xml:space="preserve">
    <value>Designed and created by CAS</value>
  </data>
</root>