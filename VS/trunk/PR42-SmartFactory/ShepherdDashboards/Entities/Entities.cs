//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:2.0.50727.5448
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.SmartFactory.Shepherd.Dashboards.Entities {
	using System;
	
	
	public partial class EntitiesDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public EntitiesDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// Alarms and events List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Alarms and events")]
		public Microsoft.SharePoint.Linq.EntityList<AlarmsAndEventsAlarmsAndEvents> AlarmsAndEvents {
			get {
				return this.GetList<AlarmsAndEventsAlarmsAndEvents>("Alarms and events");
			}
		}
		
		/// <summary>
		/// Carrier List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Carrier")]
		public Microsoft.SharePoint.Linq.EntityList<Element> Carrier {
			get {
				return this.GetList<Element>("Carrier");
			}
		}
		
		/// <summary>
		/// City List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="City")]
		public Microsoft.SharePoint.Linq.EntityList<CityType> City {
			get {
				return this.GetList<CityType>("City");
			}
		}
		
		/// <summary>
		/// Commodity List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Commodity")]
		public Microsoft.SharePoint.Linq.EntityList<Commodity> Commodity {
			get {
				return this.GetList<Commodity>("Commodity");
			}
		}
		
		/// <summary>
		/// Country List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Country")]
		public Microsoft.SharePoint.Linq.EntityList<CountryType> Country {
			get {
				return this.GetList<CountryType>("Country");
			}
		}
		
		/// <summary>
		/// Currency List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Currency")]
		public Microsoft.SharePoint.Linq.EntityList<Currency> Currency {
			get {
				return this.GetList<Currency>("Currency");
			}
		}
		
		/// <summary>
		/// Destination Market List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Destination Market")]
		public Microsoft.SharePoint.Linq.EntityList<DestinationMarket> DestinationMarket {
			get {
				return this.GetList<DestinationMarket>("Destination Market");
			}
		}
		
		/// <summary>
		/// Driver List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Driver")]
		public Microsoft.SharePoint.Linq.EntityList<Driver> Driver {
			get {
				return this.GetList<Driver>("Driver");
			}
		}
		
		/// <summary>
		/// Drivers Team List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Drivers Team")]
		public Microsoft.SharePoint.Linq.EntityList<ShippingDriversTeam> DriversTeam {
			get {
				return this.GetList<ShippingDriversTeam>("Drivers Team");
			}
		}
		
		/// <summary>
		/// Collect all application events.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Event Log List")]
		public Microsoft.SharePoint.Linq.EntityList<Anons> EventLogList {
			get {
				return this.GetList<Anons>("Event Log List");
			}
		}
		
		/// <summary>
		/// Freight Payer List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Freight Payer")]
		public Microsoft.SharePoint.Linq.EntityList<FreightPayer> FreightPayer {
			get {
				return this.GetList<FreightPayer>("Freight Payer");
			}
		}
		
		/// <summary>
		/// Goods Handling PO Number List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Goods Handling PO Number")]
		public Microsoft.SharePoint.Linq.EntityList<GoodsHandlingPO> GoodsHandlingPONumber {
			get {
				return this.GetList<GoodsHandlingPO>("Goods Handling PO Number");
			}
		}
		
		/// <summary>
		/// JTI Partner List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="JTI Partner")]
		public Microsoft.SharePoint.Linq.EntityList<Partner> JTIPartner {
			get {
				return this.GetList<Partner>("JTI Partner");
			}
		}
		
		/// <summary>
		/// Load Description List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Load Description")]
		public Microsoft.SharePoint.Linq.EntityList<LoadDescription> LoadDescription {
			get {
				return this.GetList<LoadDescription>("Load Description");
			}
		}
		
		/// <summary>
		/// Pallet Types List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Pallet Types")]
		public Microsoft.SharePoint.Linq.EntityList<PalletTypes> PalletTypes {
			get {
				return this.GetList<PalletTypes>("Pallet Types");
			}
		}
		
		/// <summary>
		/// SAP Destination Plant List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAP Destination Plant")]
		public Microsoft.SharePoint.Linq.EntityList<Element> SAPDestinationPlant {
			get {
				return this.GetList<Element>("SAP Destination Plant");
			}
		}
		
		/// <summary>
		/// A schedule template is a predefined table of time slots.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Schedule Template")]
		public Microsoft.SharePoint.Linq.EntityList<ScheduleTemplateScheduleTemplate> ScheduleTemplate {
			get {
				return this.GetList<ScheduleTemplateScheduleTemplate>("Schedule Template");
			}
		}
		
		/// <summary>
		/// Security Escort Catalog List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Security Escort Catalog")]
		public Microsoft.SharePoint.Linq.EntityList<SecurityEscortCatalog> SecurityEscortCatalog {
			get {
				return this.GetList<SecurityEscortCatalog>("Security Escort Catalog");
			}
		}
		
		/// <summary>
		/// Security Escort PO Number List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Security Escort PO Number")]
		public Microsoft.SharePoint.Linq.EntityList<SecurityPO> SecurityEscortPONumber {
			get {
				return this.GetList<SecurityPO>("Security Escort PO Number");
			}
		}
		
		/// <summary>
		/// Security Seal Protocol files collection
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Security Seal Protocol")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> SecuritySealProtocol {
			get {
				return this.GetList<Dokument>("Security Seal Protocol");
			}
		}
		
		/// <summary>
		/// Shipment Type List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Shipment Type")]
		public Microsoft.SharePoint.Linq.EntityList<Element> ShipmentType {
			get {
				return this.GetList<Element>("Shipment Type");
			}
		}
		
		/// <summary>
		/// Shiping List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Shipping")]
		public Microsoft.SharePoint.Linq.EntityList<ShippingOperationInbound> Shipping {
			get {
				return this.GetList<ShippingOperationInbound>("Shipping");
			}
		}
		
		/// <summary>
		/// Shipping Point List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Shipping Point")]
		public Microsoft.SharePoint.Linq.EntityList<ShippingPoint> ShippingPoint {
			get {
				return this.GetList<ShippingPoint>("Shipping Point");
			}
		}
		
		/// <summary>
		/// TimeSLot List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="TimeSlot")]
		public Microsoft.SharePoint.Linq.EntityList<TimeSlotTimeSlot> TimeSlot {
			get {
				return this.GetList<TimeSlotTimeSlot>("TimeSlot");
			}
		}
		
		/// <summary>
		/// Time Slot Templates List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="TimeSlot Templates")]
		public Microsoft.SharePoint.Linq.EntityList<TimeSlotTemplatesTimeSlotTemplates> TimeSlotTemplates {
			get {
				return this.GetList<TimeSlotTemplatesTimeSlotTemplates>("TimeSlot Templates");
			}
		}
		
		/// <summary>
		/// Trailer List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Trailer")]
		public Microsoft.SharePoint.Linq.EntityList<Trailer> Trailer {
			get {
				return this.GetList<Trailer>("Trailer");
			}
		}
		
		/// <summary>
		/// Trailer Condition List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Trailer Condition")]
		public Microsoft.SharePoint.Linq.EntityList<TrailerCondition> TrailerCondition {
			get {
				return this.GetList<TrailerCondition>("Trailer Condition");
			}
		}
		
		/// <summary>
		/// Transport Unit Type List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Transport Unit Type")]
		public Microsoft.SharePoint.Linq.EntityList<Element> TransportUnitType {
			get {
				return this.GetList<Element>("Transport Unit Type");
			}
		}
		
		/// <summary>
		/// Truck List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Truck")]
		public Microsoft.SharePoint.Linq.EntityList<Truck> Truck {
			get {
				return this.GetList<Truck>("Truck");
			}
		}
		
		/// <summary>
		/// Warehouse List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Warehouse")]
		public Microsoft.SharePoint.Linq.EntityList<Warehouse> Warehouse {
			get {
				return this.GetList<Warehouse>("Warehouse");
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Element", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AlarmsAndEvents))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CityType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Commodity))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CountryType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Currency))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DestinationMarket))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Driver))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ShippingDriversTeam))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Anons))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(FreightPayer))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(GoodsHandlingPO))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Partner))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(LoadDescription))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PalletTypes))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ScheduleTemplate))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SecurityEscortCatalog))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SecurityPO))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Dokument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ShippingOperationInbound))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ShippingPoint))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Wydarzenie))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Trailer))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TrailerCondition))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Truck))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Warehouse))]
	public partial class Element : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _identyfikator;
		
		private System.Nullable<int> _wersja;
		
		private string _ścieżka;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		private string _tytuł;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Element() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_identyfikator", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Identyfikator {
			get {
				return this._identyfikator;
			}
			set {
				if ((value != this._identyfikator)) {
					this.OnPropertyChanging("Identyfikator", this._identyfikator);
					this._identyfikator = value;
					this.OnPropertyChanged("Identyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_wersja", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Wersja {
			get {
				return this._wersja;
			}
			set {
				if ((value != this._wersja)) {
					this.OnPropertyChanging("Wersja", this._wersja);
					this._wersja = value;
					this.OnPropertyChanged("Wersja");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_ścieżka", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Ścieżka {
			get {
				return this._ścieżka;
			}
			set {
				if ((value != this._ścieżka)) {
					this.OnPropertyChanging("Ścieżka", this._ścieżka);
					this._ścieżka = value;
					this.OnPropertyChanged("Ścieżka");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_tytuł", Required=true, FieldType="Text")]
		public virtual string Tytuł {
			get {
				return this._tytuł;
			}
			set {
				if ((value != this._tytuł)) {
					this.OnPropertyChanging("Tytuł", this._tytuł);
					this._tytuł = value;
					this.OnPropertyChanged("Tytuł");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element wiadomości, stan lub inną krótką informację.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Anons", Id="0x0104")]
	public partial class Anons : Element {
		
		private string _treść;
		
		private System.Nullable<System.DateTime> _wygasa;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Anons() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_treść", FieldType="Note")]
		public string Treść {
			get {
				return this._treść;
			}
			set {
				if ((value != this._treść)) {
					this.OnPropertyChanging("Treść", this._treść);
					this._treść = value;
					this.OnPropertyChanged("Treść");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_wygasa", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Wygasa {
			get {
				return this._wygasa;
			}
			set {
				if ((value != this._wygasa)) {
					this.OnPropertyChanging("Wygasa", this._wygasa);
					this._wygasa = value;
					this.OnPropertyChanged("Wygasa");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Dokument", Id="0x0101")]
	public partial class Dokument : Element {
		
		private string _nazwa;
		
		private string _dokumentZmodyfikowanyPrzez;
		
		private string _dokumentUtworzonyPrzez;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Dokument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_nazwa", Required=true, FieldType="File")]
		public string Nazwa {
			get {
				return this._nazwa;
			}
			set {
				if ((value != this._nazwa)) {
					this.OnPropertyChanging("Nazwa", this._nazwa);
					this._nazwa = value;
					this.OnPropertyChanged("Nazwa");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_dokumentZmodyfikowanyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentZmodyfikowanyPrzez {
			get {
				return this._dokumentZmodyfikowanyPrzez;
			}
			set {
				if ((value != this._dokumentZmodyfikowanyPrzez)) {
					this.OnPropertyChanging("DokumentZmodyfikowanyPrzez", this._dokumentZmodyfikowanyPrzez);
					this._dokumentZmodyfikowanyPrzez = value;
					this.OnPropertyChanged("DokumentZmodyfikowanyPrzez");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_dokumentUtworzonyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentUtworzonyPrzez {
			get {
				return this._dokumentUtworzonyPrzez;
			}
			set {
				if ((value != this._dokumentUtworzonyPrzez)) {
					this.OnPropertyChanging("DokumentUtworzonyPrzez", this._dokumentUtworzonyPrzez);
					this._dokumentUtworzonyPrzez = value;
					this.OnPropertyChanged("DokumentUtworzonyPrzez");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowe spotkanie, termin ostateczny lub inne wydarzenie.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wydarzenie", Id="0x0102")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TimeSlot))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TimeSlotTemplates))]
	public partial class Wydarzenie : Element {
		
		private string _lokalizacja;
		
		protected System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		protected string _description;
		
		private System.Nullable<bool> _wydarzenieCałodzienne;
		
		private System.Nullable<bool> _cykl;
		
		private System.Nullable<bool> _obszarRoboczy;
		
		private System.Nullable<Kategoria> _kategoria;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Wydarzenie() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Location", Storage="_lokalizacja", FieldType="Text")]
		public virtual string Lokalizacja {
			get {
				return this._lokalizacja;
			}
			set {
				if ((value != this._lokalizacja)) {
					this.OnPropertyChanging("Lokalizacja", this._lokalizacja);
					this._lokalizacja = value;
					this.OnPropertyChanged("Lokalizacja");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndDate", Storage="_endTime", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndTime {
			get {
				return this._endTime;
			}
			set {
				if ((value != this._endTime)) {
					this.OnPropertyChanging("EndTime", this._endTime);
					this._endTime = value;
					this.OnPropertyChanged("EndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_description", FieldType="Note")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fAllDayEvent", Storage="_wydarzenieCałodzienne", FieldType="AllDayEvent")]
		public virtual System.Nullable<bool> WydarzenieCałodzienne {
			get {
				return this._wydarzenieCałodzienne;
			}
			set {
				if ((value != this._wydarzenieCałodzienne)) {
					this.OnPropertyChanging("WydarzenieCałodzienne", this._wydarzenieCałodzienne);
					this._wydarzenieCałodzienne = value;
					this.OnPropertyChanged("WydarzenieCałodzienne");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fRecurrence", Storage="_cykl", FieldType="Recurrence")]
		public virtual System.Nullable<bool> Cykl {
			get {
				return this._cykl;
			}
			set {
				if ((value != this._cykl)) {
					this.OnPropertyChanging("Cykl", this._cykl);
					this._cykl = value;
					this.OnPropertyChanged("Cykl");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkspaceLink", Storage="_obszarRoboczy", FieldType="CrossProjectLink")]
		public virtual System.Nullable<bool> ObszarRoboczy {
			get {
				return this._obszarRoboczy;
			}
			set {
				if ((value != this._obszarRoboczy)) {
					this.OnPropertyChanging("ObszarRoboczy", this._obszarRoboczy);
					this._obszarRoboczy = value;
					this.OnPropertyChanged("ObszarRoboczy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_kategoria", FieldType="Choice")]
		public virtual System.Nullable<Kategoria> Kategoria {
			get {
				return this._kategoria;
			}
			set {
				if ((value != this._kategoria)) {
					this.OnPropertyChanging("Kategoria", this._kategoria);
					this._kategoria = value;
					this.OnPropertyChanged("Kategoria");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="AlarmsAndEvents", Id="0x010049AA7238FCE34BE18336F419AE924845")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AlarmsAndEventsAlarmsAndEvents))]
	public partial class AlarmsAndEvents : Element {
		
		protected Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound> _shippingIndex;
		
		protected Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AlarmsAndEvents() {
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEvents2ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public virtual ShippingOperationInbound ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEvents2PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JTI Partner")]
		public virtual Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AlarmsAndEvents.Add(this);
			}
			else {
				e.Item.AlarmsAndEvents.Remove(this);
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AlarmsAndEvents.Add(this);
			}
			else {
				e.Item.AlarmsAndEvents.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CityType", Id="0x01003C7CE387CDAEA94B89FEB3FC6264FB71")]
	public partial class CityType : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<CountryType> _countryName;
		
		private Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog> _securityEscortCatalog;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CityType() {
			this._countryName = new Microsoft.SharePoint.Linq.EntityRef<CountryType>();
			this._countryName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryType>>(this.OnCountryNameSync);
			this._countryName.OnChanged += new System.EventHandler(this.OnCountryNameChanged);
			this._countryName.OnChanging += new System.EventHandler(this.OnCountryNameChanging);
			this._securityEscortCatalog = new Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog>();
			this._securityEscortCatalog.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog>>(this.OnSecurityEscortCatalogSync);
			this._securityEscortCatalog.OnChanged += new System.EventHandler(this.OnSecurityEscortCatalogChanged);
			this._securityEscortCatalog.OnChanging += new System.EventHandler(this.OnSecurityEscortCatalogChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CountryTitle", Storage="_countryName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Country")]
		public CountryType CountryName {
			get {
				return this._countryName.GetEntity();
			}
			set {
				this._countryName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CityTitle", Storage="_securityEscortCatalog", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Security Escort Catalog")]
		public Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog> SecurityEscortCatalog {
			get {
				return this._securityEscortCatalog;
			}
			set {
				this._securityEscortCatalog.Assign(value);
			}
		}
		
		private void OnCountryNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CountryName", this._countryName.Clone());
		}
		
		private void OnCountryNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CountryName");
		}
		
		private void OnCountryNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CityType.Add(this);
			}
			else {
				e.Item.CityType.Remove(this);
			}
		}
		
		private void OnSecurityEscortCatalogChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscortCatalog", this._securityEscortCatalog.Clone());
		}
		
		private void OnSecurityEscortCatalogChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscortCatalog");
		}
		
		private void OnSecurityEscortCatalogSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CityName = this;
			}
			else {
				e.Item.CityName = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CommodityType", Id="0x01003A76AB24637A7541B0D982B65D5916CE")]
	public partial class Commodity : Element {
		
		private Microsoft.SharePoint.Linq.EntitySet<LoadDescription> _loadDescription;
		
		private Microsoft.SharePoint.Linq.EntitySet<Warehouse> _warehouse;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Commodity() {
			this._loadDescription = new Microsoft.SharePoint.Linq.EntitySet<LoadDescription>();
			this._loadDescription.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription>>(this.OnLoadDescriptionSync);
			this._loadDescription.OnChanged += new System.EventHandler(this.OnLoadDescriptionChanged);
			this._loadDescription.OnChanging += new System.EventHandler(this.OnLoadDescriptionChanging);
			this._warehouse = new Microsoft.SharePoint.Linq.EntitySet<Warehouse>();
			this._warehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnWarehouseSync);
			this._warehouse.OnChanged += new System.EventHandler(this.OnWarehouseChanged);
			this._warehouse.OnChanging += new System.EventHandler(this.OnWarehouseChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2Commodity", Storage="_loadDescription", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Load Description")]
		public Microsoft.SharePoint.Linq.EntitySet<LoadDescription> LoadDescription {
			get {
				return this._loadDescription;
			}
			set {
				this._loadDescription.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CommodityTitle", Storage="_warehouse", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Warehouse")]
		public Microsoft.SharePoint.Linq.EntitySet<Warehouse> Warehouse {
			get {
				return this._warehouse;
			}
			set {
				this._warehouse.Assign(value);
			}
		}
		
		private void OnLoadDescriptionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("LoadDescription", this._loadDescription.Clone());
		}
		
		private void OnLoadDescriptionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("LoadDescription");
		}
		
		private void OnLoadDescriptionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Commodity = this;
			}
			else {
				e.Item.Commodity = null;
			}
		}
		
		private void OnWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Warehouse", this._warehouse.Clone());
		}
		
		private void OnWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Warehouse");
		}
		
		private void OnWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Commodity = this;
			}
			else {
				e.Item.Commodity = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CountryType", Id="0x0100CE031DC456C86C409854D818EDA7E1F3")]
	public partial class CountryType : Element {
		
		private System.Nullable<double> _dummy;
		
		private Microsoft.SharePoint.Linq.EntitySet<CityType> _cityType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CountryType() {
			this._cityType = new Microsoft.SharePoint.Linq.EntitySet<CityType>();
			this._cityType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnCityTypeSync);
			this._cityType.OnChanged += new System.EventHandler(this.OnCityTypeChanged);
			this._cityType.OnChanging += new System.EventHandler(this.OnCityTypeChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dummy", Storage="_dummy", FieldType="Number")]
		public System.Nullable<double> Dummy {
			get {
				return this._dummy;
			}
			set {
				if ((value != this._dummy)) {
					this.OnPropertyChanging("Dummy", this._dummy);
					this._dummy = value;
					this.OnPropertyChanged("Dummy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CountryTitle", Storage="_cityType", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="City")]
		public Microsoft.SharePoint.Linq.EntitySet<CityType> CityType {
			get {
				return this._cityType;
			}
			set {
				this._cityType.Assign(value);
			}
		}
		
		private void OnCityTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CityType", this._cityType.Clone());
		}
		
		private void OnCityTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CityType");
		}
		
		private void OnCityTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CountryName = this;
			}
			else {
				e.Item.CountryName = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Currency", Id="0x010024C2D44B310A47EDB90969B622490CF9")]
	public partial class Currency : Element {
		
		private System.Nullable<double> _exchangeRate;
		
		private Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog> _securityEscortCatalog;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Currency() {
			this._securityEscortCatalog = new Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog>();
			this._securityEscortCatalog.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog>>(this.OnSecurityEscortCatalogSync);
			this._securityEscortCatalog.OnChanged += new System.EventHandler(this.OnSecurityEscortCatalogChanged);
			this._securityEscortCatalog.OnChanging += new System.EventHandler(this.OnSecurityEscortCatalogChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Exchange Rate
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExchangeRate", Storage="_exchangeRate", FieldType="Number")]
		public System.Nullable<double> ExchangeRate {
			get {
				return this._exchangeRate;
			}
			set {
				if ((value != this._exchangeRate)) {
					this.OnPropertyChanging("ExchangeRate", this._exchangeRate);
					this._exchangeRate = value;
					this.OnPropertyChanged("ExchangeRate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CurrencyTitle", Storage="_securityEscortCatalog", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Security Escort Catalog")]
		public Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog> SecurityEscortCatalog {
			get {
				return this._securityEscortCatalog;
			}
			set {
				this._securityEscortCatalog.Assign(value);
			}
		}
		
		private void OnSecurityEscortCatalogChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscortCatalog", this._securityEscortCatalog.Clone());
		}
		
		private void OnSecurityEscortCatalogChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscortCatalog");
		}
		
		private void OnSecurityEscortCatalogSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Currency = this;
			}
			else {
				e.Item.Currency = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="DestinationMarket", Id="0x01002CD380C2A0BC484CAF14A0A71DADEF4E")]
	public partial class DestinationMarket : Element {
		
		private System.Nullable<int> _routeIdentyfikator;
		
		private string _routeTitle;
		
		private System.Nullable<int> _marketIdentyfikator;
		
		private string _marketTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DestinationMarket() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RouteTitle", Storage="_routeIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> RouteIdentyfikator {
			get {
				return this._routeIdentyfikator;
			}
			set {
				if ((value != this._routeIdentyfikator)) {
					this.OnPropertyChanging("RouteIdentyfikator", this._routeIdentyfikator);
					this._routeIdentyfikator = value;
					this.OnPropertyChanged("RouteIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RouteTitle", Storage="_routeTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string RouteTitle {
			get {
				return this._routeTitle;
			}
			set {
				if ((value != this._routeTitle)) {
					this.OnPropertyChanging("RouteTitle", this._routeTitle);
					this._routeTitle = value;
					this.OnPropertyChanged("RouteTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MarketTitle", Storage="_marketIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> MarketIdentyfikator {
			get {
				return this._marketIdentyfikator;
			}
			set {
				if ((value != this._marketIdentyfikator)) {
					this.OnPropertyChanging("MarketIdentyfikator", this._marketIdentyfikator);
					this._marketIdentyfikator = value;
					this.OnPropertyChanged("MarketIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MarketTitle", Storage="_marketTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string MarketTitle {
			get {
				return this._marketTitle;
			}
			set {
				if ((value != this._marketTitle)) {
					this.OnPropertyChanging("MarketTitle", this._marketTitle);
					this._marketTitle = value;
					this.OnPropertyChanged("MarketTitle");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Driver", Id="0x0100B0982F01816047B1ABFF933B9F49B5DB")]
	public partial class Driver : Element {
		
		private string _identityDocumentNumber;
		
		private string _numerTelefonuKomórkowego;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> _shippingDriversTeam;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Driver() {
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this._shippingDriversTeam = new Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam>();
			this._shippingDriversTeam.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam>>(this.OnShippingDriversTeamSync);
			this._shippingDriversTeam.OnChanged += new System.EventHandler(this.OnShippingDriversTeamChanged);
			this._shippingDriversTeam.OnChanging += new System.EventHandler(this.OnShippingDriversTeamChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IdentityDocumentNumber", Storage="_identityDocumentNumber", FieldType="Text")]
		public string IdentityDocumentNumber {
			get {
				return this._identityDocumentNumber;
			}
			set {
				if ((value != this._identityDocumentNumber)) {
					this.OnPropertyChanging("IdentityDocumentNumber", this._identityDocumentNumber);
					this._identityDocumentNumber = value;
					this.OnPropertyChanged("IdentityDocumentNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CellPhone", Storage="_numerTelefonuKomórkowego", FieldType="Text")]
		public string NumerTelefonuKomórkowego {
			get {
				return this._numerTelefonuKomórkowego;
			}
			set {
				if ((value != this._numerTelefonuKomórkowego)) {
					this.OnPropertyChanging("NumerTelefonuKomórkowego", this._numerTelefonuKomórkowego);
					this._numerTelefonuKomórkowego = value;
					this.OnPropertyChanged("NumerTelefonuKomórkowego");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JTI Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DriverTitle", Storage="_shippingDriversTeam", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Drivers Team")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> ShippingDriversTeam {
			get {
				return this._shippingDriversTeam;
			}
			set {
				this._shippingDriversTeam.Assign(value);
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnShippingDriversTeamChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingDriversTeam", this._shippingDriversTeam.Clone());
		}
		
		private void OnShippingDriversTeamChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingDriversTeam");
		}
		
		private void OnShippingDriversTeamSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Driver = this;
			}
			else {
				e.Item.Driver = null;
			}
		}
	}
	
	/// <summary>
	/// Drivers Team
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ShippingDriversTeam", Id="0x01000A5D8B5F3F67453882811C27556D5D30")]
	public partial class ShippingDriversTeam : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<Driver> _driver;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound> _shippingIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ShippingDriversTeam() {
			this._driver = new Microsoft.SharePoint.Linq.EntityRef<Driver>();
			this._driver.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Driver>>(this.OnDriverSync);
			this._driver.OnChanged += new System.EventHandler(this.OnDriverChanged);
			this._driver.OnChanging += new System.EventHandler(this.OnDriverChanging);
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this.OnCreated();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości ShippingDriversTeam.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości ShippingDriversTeam.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DriverTitle", Storage="_driver", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Driver")]
		public Driver Driver {
			get {
				return this._driver.GetEntity();
			}
			set {
				this._driver.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public ShippingOperationInbound ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		private void OnDriverChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Driver", this._driver.Clone());
		}
		
		private void OnDriverChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Driver");
		}
		
		private void OnDriverSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Driver> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingDriversTeam.Add(this);
			}
			else {
				e.Item.ShippingDriversTeam.Remove(this);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingDriversTeam.Add(this);
			}
			else {
				e.Item.ShippingDriversTeam.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="FreightPayer", Id="0x01002BD66F0631854603A0815888852526D0")]
	public partial class FreightPayer : Element {
		
		private string _address;
		
		private string _kodPocztowy;
		
		private string _miasto;
		
		private string _krajRegion;
		
		private string _nIPVATNo;
		
		private Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog> _securityEscortCatalog;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public FreightPayer() {
			this._securityEscortCatalog = new Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog>();
			this._securityEscortCatalog.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog>>(this.OnSecurityEscortCatalogSync);
			this._securityEscortCatalog.OnChanged += new System.EventHandler(this.OnSecurityEscortCatalogChanged);
			this._securityEscortCatalog.OnChanging += new System.EventHandler(this.OnSecurityEscortCatalogChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompanyAddress", Storage="_address", FieldType="Text")]
		public string Address {
			get {
				return this._address;
			}
			set {
				if ((value != this._address)) {
					this.OnPropertyChanging("Address", this._address);
					this._address = value;
					this.OnPropertyChanged("Address");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkZip", Storage="_kodPocztowy", FieldType="Text")]
		public string KodPocztowy {
			get {
				return this._kodPocztowy;
			}
			set {
				if ((value != this._kodPocztowy)) {
					this.OnPropertyChanging("KodPocztowy", this._kodPocztowy);
					this._kodPocztowy = value;
					this.OnPropertyChanged("KodPocztowy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCity", Storage="_miasto", FieldType="Text")]
		public string Miasto {
			get {
				return this._miasto;
			}
			set {
				if ((value != this._miasto)) {
					this.OnPropertyChanging("Miasto", this._miasto);
					this._miasto = value;
					this.OnPropertyChanged("Miasto");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCountry", Storage="_krajRegion", FieldType="Text")]
		public string KrajRegion {
			get {
				return this._krajRegion;
			}
			set {
				if ((value != this._krajRegion)) {
					this.OnPropertyChanging("KrajRegion", this._krajRegion);
					this._krajRegion = value;
					this.OnPropertyChanged("KrajRegion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NIP", Storage="_nIPVATNo", FieldType="Text")]
		public string NIPVATNo {
			get {
				return this._nIPVATNo;
			}
			set {
				if ((value != this._nIPVATNo)) {
					this.OnPropertyChanging("NIPVATNo", this._nIPVATNo);
					this._nIPVATNo = value;
					this.OnPropertyChanged("NIPVATNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FreightPayerTitle", Storage="_securityEscortCatalog", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Security Escort Catalog")]
		public Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog> SecurityEscortCatalog {
			get {
				return this._securityEscortCatalog;
			}
			set {
				this._securityEscortCatalog.Assign(value);
			}
		}
		
		private void OnSecurityEscortCatalogChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscortCatalog", this._securityEscortCatalog.Clone());
		}
		
		private void OnSecurityEscortCatalogChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscortCatalog");
		}
		
		private void OnSecurityEscortCatalogSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPayer = this;
			}
			else {
				e.Item.FreightPayer = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="GoodsHandlingPO", Id="0x01003BFE19A18AD046EEA2C9FD23BE8CB4CD")]
	public partial class GoodsHandlingPO : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound> _shippingIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public GoodsHandlingPO() {
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FreightPO2ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public ShippingOperationInbound ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.GoodsHandlingPO.Add(this);
			}
			else {
				e.Item.GoodsHandlingPO.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Partner", Id="0x010017A675502BE747DB9FB9DCB304429EEF")]
	public partial class Partner : Element {
		
		private string _vendorNumberFromSAP;
		
		private string _adresEMail;
		
		private string _telefonSłużbowy;
		
		private string _numerTelefonuKomórkowego;
		
		private System.Nullable<ServiceType> _serviceType;
		
		private Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> _alarmsAndEvents;
		
		private System.Nullable<int> _shepherdUserIdentyfikator;
		
		private string _shepherdUserTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Warehouse> _warehouse;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Partner() {
			this._alarmsAndEvents = new Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents>();
			this._alarmsAndEvents.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents>>(this.OnAlarmsAndEventsSync);
			this._alarmsAndEvents.OnChanged += new System.EventHandler(this.OnAlarmsAndEventsChanged);
			this._alarmsAndEvents.OnChanging += new System.EventHandler(this.OnAlarmsAndEventsChanging);
			this._warehouse = new Microsoft.SharePoint.Linq.EntityRef<Warehouse>();
			this._warehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnWarehouseSync);
			this._warehouse.OnChanged += new System.EventHandler(this.OnWarehouseChanged);
			this._warehouse.OnChanging += new System.EventHandler(this.OnWarehouseChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VendorNumber", Storage="_vendorNumberFromSAP", FieldType="Text")]
		public string VendorNumberFromSAP {
			get {
				return this._vendorNumberFromSAP;
			}
			set {
				if ((value != this._vendorNumberFromSAP)) {
					this.OnPropertyChanging("VendorNumberFromSAP", this._vendorNumberFromSAP);
					this._vendorNumberFromSAP = value;
					this.OnPropertyChanged("VendorNumberFromSAP");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EMail", Storage="_adresEMail", FieldType="Text")]
		public string AdresEMail {
			get {
				return this._adresEMail;
			}
			set {
				if ((value != this._adresEMail)) {
					this.OnPropertyChanging("AdresEMail", this._adresEMail);
					this._adresEMail = value;
					this.OnPropertyChanged("AdresEMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkPhone", Storage="_telefonSłużbowy", FieldType="Text")]
		public string TelefonSłużbowy {
			get {
				return this._telefonSłużbowy;
			}
			set {
				if ((value != this._telefonSłużbowy)) {
					this.OnPropertyChanging("TelefonSłużbowy", this._telefonSłużbowy);
					this._telefonSłużbowy = value;
					this.OnPropertyChanged("TelefonSłużbowy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CellPhone", Storage="_numerTelefonuKomórkowego", FieldType="Text")]
		public string NumerTelefonuKomórkowego {
			get {
				return this._numerTelefonuKomórkowego;
			}
			set {
				if ((value != this._numerTelefonuKomórkowego)) {
					this.OnPropertyChanging("NumerTelefonuKomórkowego", this._numerTelefonuKomórkowego);
					this._numerTelefonuKomórkowego = value;
					this.OnPropertyChanged("NumerTelefonuKomórkowego");
				}
			}
		}
		
		/// <summary>
		/// Service
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ServiceType", Storage="_serviceType", FieldType="Choice")]
		public System.Nullable<ServiceType> ServiceType {
			get {
				return this._serviceType;
			}
			set {
				if ((value != this._serviceType)) {
					this.OnPropertyChanging("ServiceType", this._serviceType);
					this._serviceType = value;
					this.OnPropertyChanged("ServiceType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEvents2PartnerTitle", Storage="_alarmsAndEvents", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Alarms and events")]
		public Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> AlarmsAndEvents {
			get {
				return this._alarmsAndEvents;
			}
			set {
				this._alarmsAndEvents.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShepherdUser", Storage="_shepherdUserIdentyfikator", Required=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ShepherdUserIdentyfikator {
			get {
				return this._shepherdUserIdentyfikator;
			}
			set {
				if ((value != this._shepherdUserIdentyfikator)) {
					this.OnPropertyChanging("ShepherdUserIdentyfikator", this._shepherdUserIdentyfikator);
					this._shepherdUserIdentyfikator = value;
					this.OnPropertyChanged("ShepherdUserIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShepherdUser", Storage="_shepherdUserTitle", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ShepherdUserTitle {
			get {
				return this._shepherdUserTitle;
			}
			set {
				if ((value != this._shepherdUserTitle)) {
					this.OnPropertyChanging("ShepherdUserTitle", this._shepherdUserTitle);
					this._shepherdUserTitle = value;
					this.OnPropertyChanged("ShepherdUserTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="WarehouseTitle", Storage="_warehouse", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Warehouse")]
		public Warehouse Warehouse {
			get {
				return this._warehouse.GetEntity();
			}
			set {
				this._warehouse.SetEntity(value);
			}
		}
		
		private void OnAlarmsAndEventsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AlarmsAndEvents", this._alarmsAndEvents.Clone());
		}
		
		private void OnAlarmsAndEventsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AlarmsAndEvents");
		}
		
		private void OnAlarmsAndEventsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.VendorName = this;
			}
			else {
				e.Item.VendorName = null;
			}
		}
		
		private void OnWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Warehouse", this._warehouse.Clone());
		}
		
		private void OnWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Warehouse");
		}
		
		private void OnWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="LoadDescription", Id="0x0100F5C0C5AAA44E47B1A7CCFECEE1E8E94E")]
	public partial class LoadDescription : Element {
		
		private string _deliveryNumber;
		
		private System.Nullable<double> _goodsQuantity;
		
		private System.Nullable<double> _numberOfPallets;
		
		private string _cMRNumber;
		
		private string _invoiceNumber;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound> _shippingIndex;
		
		private System.Nullable<int> _marketIdentyfikator;
		
		private string _marketTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<PalletTypes> _palletTypes;
		
		private Microsoft.SharePoint.Linq.EntityRef<Commodity> _commodity;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public LoadDescription() {
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this._palletTypes = new Microsoft.SharePoint.Linq.EntityRef<PalletTypes>();
			this._palletTypes.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PalletTypes>>(this.OnPalletTypesSync);
			this._palletTypes.OnChanged += new System.EventHandler(this.OnPalletTypesChanged);
			this._palletTypes.OnChanging += new System.EventHandler(this.OnPalletTypesChanging);
			this._commodity = new Microsoft.SharePoint.Linq.EntityRef<Commodity>();
			this._commodity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Commodity>>(this.OnCommoditySync);
			this._commodity.OnChanged += new System.EventHandler(this.OnCommodityChanged);
			this._commodity.OnChanging += new System.EventHandler(this.OnCommodityChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DeliveryNumber", Storage="_deliveryNumber", FieldType="Text")]
		public string DeliveryNumber {
			get {
				return this._deliveryNumber;
			}
			set {
				if ((value != this._deliveryNumber)) {
					this.OnPropertyChanging("DeliveryNumber", this._deliveryNumber);
					this._deliveryNumber = value;
					this.OnPropertyChanged("DeliveryNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsQuantity", Storage="_goodsQuantity", FieldType="Number")]
		public System.Nullable<double> GoodsQuantity {
			get {
				return this._goodsQuantity;
			}
			set {
				if ((value != this._goodsQuantity)) {
					this.OnPropertyChanging("GoodsQuantity", this._goodsQuantity);
					this._goodsQuantity = value;
					this.OnPropertyChanged("GoodsQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NumberOfPallets", Storage="_numberOfPallets", FieldType="Number")]
		public System.Nullable<double> NumberOfPallets {
			get {
				return this._numberOfPallets;
			}
			set {
				if ((value != this._numberOfPallets)) {
					this.OnPropertyChanging("NumberOfPallets", this._numberOfPallets);
					this._numberOfPallets = value;
					this.OnPropertyChanged("NumberOfPallets");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CMRNumber", Storage="_cMRNumber", FieldType="Text")]
		public string CMRNumber {
			get {
				return this._cMRNumber;
			}
			set {
				if ((value != this._cMRNumber)) {
					this.OnPropertyChanging("CMRNumber", this._cMRNumber);
					this._cMRNumber = value;
					this.OnPropertyChanged("CMRNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceNumber", Storage="_invoiceNumber", FieldType="Text")]
		public string InvoiceNumber {
			get {
				return this._invoiceNumber;
			}
			set {
				if ((value != this._invoiceNumber)) {
					this.OnPropertyChanging("InvoiceNumber", this._invoiceNumber);
					this._invoiceNumber = value;
					this.OnPropertyChanged("InvoiceNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public ShippingOperationInbound ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MarketTitle", Storage="_marketIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> MarketIdentyfikator {
			get {
				return this._marketIdentyfikator;
			}
			set {
				if ((value != this._marketIdentyfikator)) {
					this.OnPropertyChanging("MarketIdentyfikator", this._marketIdentyfikator);
					this._marketIdentyfikator = value;
					this.OnPropertyChanged("MarketIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MarketTitle", Storage="_marketTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string MarketTitle {
			get {
				return this._marketTitle;
			}
			set {
				if ((value != this._marketTitle)) {
					this.OnPropertyChanging("MarketTitle", this._marketTitle);
					this._marketTitle = value;
					this.OnPropertyChanged("MarketTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PalletTypesTitle", Storage="_palletTypes", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Pallet Types")]
		public PalletTypes PalletTypes {
			get {
				return this._palletTypes.GetEntity();
			}
			set {
				this._palletTypes.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2Commodity", Storage="_commodity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public Commodity Commodity {
			get {
				return this._commodity.GetEntity();
			}
			set {
				this._commodity.SetEntity(value);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.LoadDescription.Add(this);
			}
			else {
				e.Item.LoadDescription.Remove(this);
			}
		}
		
		private void OnPalletTypesChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PalletTypes", this._palletTypes.Clone());
		}
		
		private void OnPalletTypesChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PalletTypes");
		}
		
		private void OnPalletTypesSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PalletTypes> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.LoadDescription.Add(this);
			}
			else {
				e.Item.LoadDescription.Remove(this);
			}
		}
		
		private void OnCommodityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Commodity", this._commodity.Clone());
		}
		
		private void OnCommodityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Commodity");
		}
		
		private void OnCommoditySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Commodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.LoadDescription.Add(this);
			}
			else {
				e.Item.LoadDescription.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="PalletTypes", Id="0x0100B7016EC0D33BE948969FE6FB90839B78")]
	public partial class PalletTypes : Element {
		
		private string _palletSize;
		
		private Microsoft.SharePoint.Linq.EntitySet<LoadDescription> _loadDescription;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PalletTypes() {
			this._loadDescription = new Microsoft.SharePoint.Linq.EntitySet<LoadDescription>();
			this._loadDescription.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription>>(this.OnLoadDescriptionSync);
			this._loadDescription.OnChanged += new System.EventHandler(this.OnLoadDescriptionChanged);
			this._loadDescription.OnChanging += new System.EventHandler(this.OnLoadDescriptionChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PalletSize", Storage="_palletSize", FieldType="Text")]
		public string PalletSize {
			get {
				return this._palletSize;
			}
			set {
				if ((value != this._palletSize)) {
					this.OnPropertyChanging("PalletSize", this._palletSize);
					this._palletSize = value;
					this.OnPropertyChanged("PalletSize");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PalletTypesTitle", Storage="_loadDescription", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Load Description")]
		public Microsoft.SharePoint.Linq.EntitySet<LoadDescription> LoadDescription {
			get {
				return this._loadDescription;
			}
			set {
				this._loadDescription.Assign(value);
			}
		}
		
		private void OnLoadDescriptionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("LoadDescription", this._loadDescription.Clone());
		}
		
		private void OnLoadDescriptionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("LoadDescription");
		}
		
		private void OnLoadDescriptionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PalletTypes = this;
			}
			else {
				e.Item.PalletTypes = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ScheduleTemplate", Id="0x010091765907174D4799B44C4DF249630D28")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ScheduleTemplateScheduleTemplate))]
	public partial class ScheduleTemplate : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingPoint> _shippingPoint;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ScheduleTemplate() {
			this._shippingPoint = new Microsoft.SharePoint.Linq.EntityRef<ShippingPoint>();
			this._shippingPoint.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint>>(this.OnShippingPointSync);
			this._shippingPoint.OnChanged += new System.EventHandler(this.OnShippingPointChanged);
			this._shippingPoint.OnChanging += new System.EventHandler(this.OnShippingPointChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingPointLookupTitle", Storage="_shippingPoint", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping Point")]
		public ShippingPoint ShippingPoint {
			get {
				return this._shippingPoint.GetEntity();
			}
			set {
				this._shippingPoint.SetEntity(value);
			}
		}
		
		private void OnShippingPointChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingPoint", this._shippingPoint.Clone());
		}
		
		private void OnShippingPointChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingPoint");
		}
		
		private void OnShippingPointSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ScheduleTemplate.Add(this);
			}
			else {
				e.Item.ScheduleTemplate.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SecurityEscortCatalog", Id="0x01004D883AD19A284D1F826EA7B4E70F0ACA")]
	public partial class SecurityEscortCatalog : Element {
		
		private string _materialMaster;
		
		private System.Nullable<double> _securityCost;
		
		private Microsoft.SharePoint.Linq.EntityRef<CityType> _cityName;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _freightPayer;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _currency;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingOperationOutbound> _shippingOperationOutbound;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SecurityEscortCatalog() {
			this._cityName = new Microsoft.SharePoint.Linq.EntityRef<CityType>();
			this._cityName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnCityNameSync);
			this._cityName.OnChanged += new System.EventHandler(this.OnCityNameChanged);
			this._cityName.OnChanging += new System.EventHandler(this.OnCityNameChanging);
			this._freightPayer = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._freightPayer.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnFreightPayerSync);
			this._freightPayer.OnChanged += new System.EventHandler(this.OnFreightPayerChanged);
			this._freightPayer.OnChanging += new System.EventHandler(this.OnFreightPayerChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this._currency = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._currency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnCurrencySync);
			this._currency.OnChanged += new System.EventHandler(this.OnCurrencyChanged);
			this._currency.OnChanging += new System.EventHandler(this.OnCurrencyChanging);
			this._shippingOperationOutbound = new Microsoft.SharePoint.Linq.EntitySet<ShippingOperationOutbound>();
			this._shippingOperationOutbound.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationOutbound>>(this.OnShippingOperationOutboundSync);
			this._shippingOperationOutbound.OnChanged += new System.EventHandler(this.OnShippingOperationOutboundChanged);
			this._shippingOperationOutbound.OnChanging += new System.EventHandler(this.OnShippingOperationOutboundChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MaterialMaster", Storage="_materialMaster", FieldType="Text")]
		public string MaterialMaster {
			get {
				return this._materialMaster;
			}
			set {
				if ((value != this._materialMaster)) {
					this.OnPropertyChanging("MaterialMaster", this._materialMaster);
					this._materialMaster = value;
					this.OnPropertyChanged("MaterialMaster");
				}
			}
		}
		
		/// <summary>
		/// Security Cost
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityCost", Storage="_securityCost", FieldType="Number")]
		public System.Nullable<double> SecurityCost {
			get {
				return this._securityCost;
			}
			set {
				if ((value != this._securityCost)) {
					this.OnPropertyChanging("SecurityCost", this._securityCost);
					this._securityCost = value;
					this.OnPropertyChanged("SecurityCost");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CityTitle", Storage="_cityName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="City")]
		public CityType CityName {
			get {
				return this._cityName.GetEntity();
			}
			set {
				this._cityName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FreightPayerTitle", Storage="_freightPayer", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer FreightPayer {
			get {
				return this._freightPayer.GetEntity();
			}
			set {
				this._freightPayer.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JTI Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CurrencyTitle", Storage="_currency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency Currency {
			get {
				return this._currency.GetEntity();
			}
			set {
				this._currency.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityEscortCatalogTitle", Storage="_shippingOperationOutbound", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingOperationOutbound> ShippingOperationOutbound {
			get {
				return this._shippingOperationOutbound;
			}
			set {
				this._shippingOperationOutbound.Assign(value);
			}
		}
		
		private void OnCityNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CityName", this._cityName.Clone());
		}
		
		private void OnCityNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CityName");
		}
		
		private void OnCityNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscortCatalog.Add(this);
			}
			else {
				e.Item.SecurityEscortCatalog.Remove(this);
			}
		}
		
		private void OnFreightPayerChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPayer", this._freightPayer.Clone());
		}
		
		private void OnFreightPayerChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPayer");
		}
		
		private void OnFreightPayerSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscortCatalog.Add(this);
			}
			else {
				e.Item.SecurityEscortCatalog.Remove(this);
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnCurrencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Currency", this._currency.Clone());
		}
		
		private void OnCurrencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Currency");
		}
		
		private void OnCurrencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscortCatalog.Add(this);
			}
			else {
				e.Item.SecurityEscortCatalog.Remove(this);
			}
		}
		
		private void OnShippingOperationOutboundChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingOperationOutbound", this._shippingOperationOutbound.Clone());
		}
		
		private void OnShippingOperationOutboundChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingOperationOutbound");
		}
		
		private void OnShippingOperationOutboundSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationOutbound> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscort = this;
			}
			else {
				e.Item.SecurityEscort = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SecurityPO", Id="0x01009ECBDE2A90F543F8B50AC471F1219D0F")]
	public partial class SecurityPO : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound> _shippingIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SecurityPO() {
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityPO2ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public ShippingOperationInbound ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityPO.Add(this);
			}
			else {
				e.Item.SecurityPO.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ShippingOperationInbound", Id="0x010047C1F2AB865840E598FE69DEC5D5B021")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ShippingOperationOutbound))]
	public partial class ShippingOperationInbound : Element {
		
		private System.Nullable<double> _dockNumber;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<double> _duration;
		
		private System.Nullable<double> _cancelationReason;
		
		private System.Nullable<State> _state;
		
		private Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> _alarmsAndEvents;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> _shippingDriversTeam;
		
		private Microsoft.SharePoint.Linq.EntitySet<GoodsHandlingPO> _goodsHandlingPO;
		
		private Microsoft.SharePoint.Linq.EntitySet<LoadDescription> _loadDescription;
		
		private Microsoft.SharePoint.Linq.EntitySet<SecurityPO> _securityPO;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		private Microsoft.SharePoint.Linq.EntityRef<Truck> _truckCarRegistrationNumber;
		
		private Microsoft.SharePoint.Linq.EntityRef<Trailer> _trailerRegistrationNumber;
		
		private Microsoft.SharePoint.Linq.EntitySet<TrailerCondition> _trailerCondition;
		
		private Microsoft.SharePoint.Linq.EntitySet<TimeSlot> _timeSlot;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ShippingOperationInbound() {
			this._alarmsAndEvents = new Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents>();
			this._alarmsAndEvents.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents>>(this.OnAlarmsAndEventsSync);
			this._alarmsAndEvents.OnChanged += new System.EventHandler(this.OnAlarmsAndEventsChanged);
			this._alarmsAndEvents.OnChanging += new System.EventHandler(this.OnAlarmsAndEventsChanging);
			this._shippingDriversTeam = new Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam>();
			this._shippingDriversTeam.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam>>(this.OnShippingDriversTeamSync);
			this._shippingDriversTeam.OnChanged += new System.EventHandler(this.OnShippingDriversTeamChanged);
			this._shippingDriversTeam.OnChanging += new System.EventHandler(this.OnShippingDriversTeamChanging);
			this._goodsHandlingPO = new Microsoft.SharePoint.Linq.EntitySet<GoodsHandlingPO>();
			this._goodsHandlingPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<GoodsHandlingPO>>(this.OnGoodsHandlingPOSync);
			this._goodsHandlingPO.OnChanged += new System.EventHandler(this.OnGoodsHandlingPOChanged);
			this._goodsHandlingPO.OnChanging += new System.EventHandler(this.OnGoodsHandlingPOChanging);
			this._loadDescription = new Microsoft.SharePoint.Linq.EntitySet<LoadDescription>();
			this._loadDescription.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription>>(this.OnLoadDescriptionSync);
			this._loadDescription.OnChanged += new System.EventHandler(this.OnLoadDescriptionChanged);
			this._loadDescription.OnChanging += new System.EventHandler(this.OnLoadDescriptionChanging);
			this._securityPO = new Microsoft.SharePoint.Linq.EntitySet<SecurityPO>();
			this._securityPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityPO>>(this.OnSecurityPOSync);
			this._securityPO.OnChanged += new System.EventHandler(this.OnSecurityPOChanged);
			this._securityPO.OnChanging += new System.EventHandler(this.OnSecurityPOChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this._truckCarRegistrationNumber = new Microsoft.SharePoint.Linq.EntityRef<Truck>();
			this._truckCarRegistrationNumber.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck>>(this.OnTruckCarRegistrationNumberSync);
			this._truckCarRegistrationNumber.OnChanged += new System.EventHandler(this.OnTruckCarRegistrationNumberChanged);
			this._truckCarRegistrationNumber.OnChanging += new System.EventHandler(this.OnTruckCarRegistrationNumberChanging);
			this._trailerRegistrationNumber = new Microsoft.SharePoint.Linq.EntityRef<Trailer>();
			this._trailerRegistrationNumber.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer>>(this.OnTrailerRegistrationNumberSync);
			this._trailerRegistrationNumber.OnChanged += new System.EventHandler(this.OnTrailerRegistrationNumberChanged);
			this._trailerRegistrationNumber.OnChanging += new System.EventHandler(this.OnTrailerRegistrationNumberChanging);
			this._trailerCondition = new Microsoft.SharePoint.Linq.EntitySet<TrailerCondition>();
			this._trailerCondition.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TrailerCondition>>(this.OnTrailerConditionSync);
			this._trailerCondition.OnChanged += new System.EventHandler(this.OnTrailerConditionChanged);
			this._trailerCondition.OnChanging += new System.EventHandler(this.OnTrailerConditionChanging);
			this._timeSlot = new Microsoft.SharePoint.Linq.EntitySet<TimeSlot>();
			this._timeSlot.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlot>>(this.OnTimeSlotSync);
			this._timeSlot.OnChanged += new System.EventHandler(this.OnTimeSlotChanged);
			this._timeSlot.OnChanging += new System.EventHandler(this.OnTimeSlotChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DockNumber", Storage="_dockNumber", FieldType="Number")]
		public System.Nullable<double> DockNumber {
			get {
				return this._dockNumber;
			}
			set {
				if ((value != this._dockNumber)) {
					this.OnPropertyChanging("DockNumber", this._dockNumber);
					this._dockNumber = value;
					this.OnPropertyChanged("DockNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartTime", Storage="_startTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingDuration", Storage="_duration", FieldType="Number")]
		public System.Nullable<double> Duration {
			get {
				return this._duration;
			}
			set {
				if ((value != this._duration)) {
					this.OnPropertyChanging("Duration", this._duration);
					this._duration = value;
					this.OnPropertyChanged("Duration");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CancelationReason", Storage="_cancelationReason", FieldType="Number")]
		public System.Nullable<double> CancelationReason {
			get {
				return this._cancelationReason;
			}
			set {
				if ((value != this._cancelationReason)) {
					this.OnPropertyChanging("CancelationReason", this._cancelationReason);
					this._cancelationReason = value;
					this.OnPropertyChanged("CancelationReason");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingState", Storage="_state", FieldType="Choice")]
		public System.Nullable<State> State {
			get {
				return this._state;
			}
			set {
				if ((value != this._state)) {
					this.OnPropertyChanging("State", this._state);
					this._state = value;
					this.OnPropertyChanged("State");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEvents2ShippingIndex", Storage="_alarmsAndEvents", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Alarms and events")]
		public Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> AlarmsAndEvents {
			get {
				return this._alarmsAndEvents;
			}
			set {
				this._alarmsAndEvents.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingIndex", Storage="_shippingDriversTeam", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Drivers Team")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> ShippingDriversTeam {
			get {
				return this._shippingDriversTeam;
			}
			set {
				this._shippingDriversTeam.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FreightPO2ShippingIndex", Storage="_goodsHandlingPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Goods Handling PO Number")]
		public Microsoft.SharePoint.Linq.EntitySet<GoodsHandlingPO> GoodsHandlingPO {
			get {
				return this._goodsHandlingPO;
			}
			set {
				this._goodsHandlingPO.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2ShippingIndex", Storage="_loadDescription", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Load Description")]
		public Microsoft.SharePoint.Linq.EntitySet<LoadDescription> LoadDescription {
			get {
				return this._loadDescription;
			}
			set {
				this._loadDescription.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityPO2ShippingIndex", Storage="_securityPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Security Escort PO Number")]
		public Microsoft.SharePoint.Linq.EntitySet<SecurityPO> SecurityPO {
			get {
				return this._securityPO;
			}
			set {
				this._securityPO.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JTI Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TruckTitle", Storage="_truckCarRegistrationNumber", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Truck")]
		public Truck TruckCarRegistrationNumber {
			get {
				return this._truckCarRegistrationNumber.GetEntity();
			}
			set {
				this._truckCarRegistrationNumber.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TrailerTitle", Storage="_trailerRegistrationNumber", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Trailer")]
		public Trailer TrailerRegistrationNumber {
			get {
				return this._trailerRegistrationNumber.GetEntity();
			}
			set {
				this._trailerRegistrationNumber.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TrailerCondition2ShippingIndex", Storage="_trailerCondition", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Trailer Condition")]
		public Microsoft.SharePoint.Linq.EntitySet<TrailerCondition> TrailerCondition {
			get {
				return this._trailerCondition;
			}
			set {
				this._trailerCondition.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TimeSlot2ShippingIndex", Storage="_timeSlot", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="TimeSlot")]
		public Microsoft.SharePoint.Linq.EntitySet<TimeSlot> TimeSlot {
			get {
				return this._timeSlot;
			}
			set {
				this._timeSlot.Assign(value);
			}
		}
		
		private void OnAlarmsAndEventsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AlarmsAndEvents", this._alarmsAndEvents.Clone());
		}
		
		private void OnAlarmsAndEventsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AlarmsAndEvents");
		}
		
		private void OnAlarmsAndEventsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
		
		private void OnShippingDriversTeamChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingDriversTeam", this._shippingDriversTeam.Clone());
		}
		
		private void OnShippingDriversTeamChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingDriversTeam");
		}
		
		private void OnShippingDriversTeamSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
		
		private void OnGoodsHandlingPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("GoodsHandlingPO", this._goodsHandlingPO.Clone());
		}
		
		private void OnGoodsHandlingPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("GoodsHandlingPO");
		}
		
		private void OnGoodsHandlingPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<GoodsHandlingPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
		
		private void OnLoadDescriptionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("LoadDescription", this._loadDescription.Clone());
		}
		
		private void OnLoadDescriptionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("LoadDescription");
		}
		
		private void OnLoadDescriptionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
		
		private void OnSecurityPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityPO", this._securityPO.Clone());
		}
		
		private void OnSecurityPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityPO");
		}
		
		private void OnSecurityPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnTruckCarRegistrationNumberChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TruckCarRegistrationNumber", this._truckCarRegistrationNumber.Clone());
		}
		
		private void OnTruckCarRegistrationNumberChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TruckCarRegistrationNumber");
		}
		
		private void OnTruckCarRegistrationNumberSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingOperationInbound.Add(this);
			}
			else {
				e.Item.ShippingOperationInbound.Remove(this);
			}
		}
		
		private void OnTrailerRegistrationNumberChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TrailerRegistrationNumber", this._trailerRegistrationNumber.Clone());
		}
		
		private void OnTrailerRegistrationNumberChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TrailerRegistrationNumber");
		}
		
		private void OnTrailerRegistrationNumberSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingOperationInbound.Add(this);
			}
			else {
				e.Item.ShippingOperationInbound.Remove(this);
			}
		}
		
		private void OnTrailerConditionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TrailerCondition", this._trailerCondition.Clone());
		}
		
		private void OnTrailerConditionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TrailerCondition");
		}
		
		private void OnTrailerConditionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TrailerCondition> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
		
		private void OnTimeSlotChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TimeSlot", this._timeSlot.Clone());
		}
		
		private void OnTimeSlotChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TimeSlot");
		}
		
		private void OnTimeSlotSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlot> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ShippingPoint", Id="0x0100CB62286DE09CE54780611F275F43DB47")]
	public partial class ShippingPoint : Element {
		
		private string _description;
		
		private System.Nullable<Direction> _direction;
		
		private Microsoft.SharePoint.Linq.EntitySet<ScheduleTemplate> _scheduleTemplate;
		
		private Microsoft.SharePoint.Linq.EntityRef<Warehouse> _warehouse;
		
		private Microsoft.SharePoint.Linq.EntitySet<TimeSlot> _timeSlot;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ShippingPoint() {
			this._scheduleTemplate = new Microsoft.SharePoint.Linq.EntitySet<ScheduleTemplate>();
			this._scheduleTemplate.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ScheduleTemplate>>(this.OnScheduleTemplateSync);
			this._scheduleTemplate.OnChanged += new System.EventHandler(this.OnScheduleTemplateChanged);
			this._scheduleTemplate.OnChanging += new System.EventHandler(this.OnScheduleTemplateChanging);
			this._warehouse = new Microsoft.SharePoint.Linq.EntityRef<Warehouse>();
			this._warehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnWarehouseSync);
			this._warehouse.OnChanged += new System.EventHandler(this.OnWarehouseChanged);
			this._warehouse.OnChanging += new System.EventHandler(this.OnWarehouseChanging);
			this._timeSlot = new Microsoft.SharePoint.Linq.EntitySet<TimeSlot>();
			this._timeSlot.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlot>>(this.OnTimeSlotSync);
			this._timeSlot.OnChanged += new System.EventHandler(this.OnTimeSlotChanged);
			this._timeSlot.OnChanging += new System.EventHandler(this.OnTimeSlotChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingPointDescription", Storage="_description", FieldType="Text")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		/// <summary>
		/// Direction
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Direction", Storage="_direction", FieldType="Choice")]
		public System.Nullable<Direction> Direction {
			get {
				return this._direction;
			}
			set {
				if ((value != this._direction)) {
					this.OnPropertyChanging("Direction", this._direction);
					this._direction = value;
					this.OnPropertyChanged("Direction");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingPointLookupTitle", Storage="_scheduleTemplate", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Schedule Template")]
		public Microsoft.SharePoint.Linq.EntitySet<ScheduleTemplate> ScheduleTemplate {
			get {
				return this._scheduleTemplate;
			}
			set {
				this._scheduleTemplate.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="WarehouseTitle", Storage="_warehouse", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Warehouse")]
		public Warehouse Warehouse {
			get {
				return this._warehouse.GetEntity();
			}
			set {
				this._warehouse.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TimeSlot2ShippingPointLookup", Storage="_timeSlot", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="TimeSlot")]
		public Microsoft.SharePoint.Linq.EntitySet<TimeSlot> TimeSlot {
			get {
				return this._timeSlot;
			}
			set {
				this._timeSlot.Assign(value);
			}
		}
		
		private void OnScheduleTemplateChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ScheduleTemplate", this._scheduleTemplate.Clone());
		}
		
		private void OnScheduleTemplateChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ScheduleTemplate");
		}
		
		private void OnScheduleTemplateSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ScheduleTemplate> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingPoint = this;
			}
			else {
				e.Item.ShippingPoint = null;
			}
		}
		
		private void OnWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Warehouse", this._warehouse.Clone());
		}
		
		private void OnWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Warehouse");
		}
		
		private void OnWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
		}
		
		private void OnTimeSlotChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TimeSlot", this._timeSlot.Clone());
		}
		
		private void OnTimeSlotChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TimeSlot");
		}
		
		private void OnTimeSlotSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlot> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingPoint = this;
			}
			else {
				e.Item.ShippingPoint = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Trailer", Id="0x01009EF7D9CEE9664A48928AD8C8857ADA95")]
	public partial class Trailer : Element {
		
		private string _comments;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingOperationInbound> _shippingOperationInbound;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		private Microsoft.SharePoint.Linq.EntitySet<TrailerCondition> _trailerCondition;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Trailer() {
			this._shippingOperationInbound = new Microsoft.SharePoint.Linq.EntitySet<ShippingOperationInbound>();
			this._shippingOperationInbound.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound>>(this.OnShippingOperationInboundSync);
			this._shippingOperationInbound.OnChanged += new System.EventHandler(this.OnShippingOperationInboundChanged);
			this._shippingOperationInbound.OnChanging += new System.EventHandler(this.OnShippingOperationInboundChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this._trailerCondition = new Microsoft.SharePoint.Linq.EntitySet<TrailerCondition>();
			this._trailerCondition.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TrailerCondition>>(this.OnTrailerConditionSync);
			this._trailerCondition.OnChanged += new System.EventHandler(this.OnTrailerConditionChanged);
			this._trailerCondition.OnChanging += new System.EventHandler(this.OnTrailerConditionChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AdditionalComments", Storage="_comments", FieldType="Text")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TrailerTitle", Storage="_shippingOperationInbound", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingOperationInbound> ShippingOperationInbound {
			get {
				return this._shippingOperationInbound;
			}
			set {
				this._shippingOperationInbound.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JTI Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TrailerCondition2TrailerTitle", Storage="_trailerCondition", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Trailer Condition")]
		public Microsoft.SharePoint.Linq.EntitySet<TrailerCondition> TrailerCondition {
			get {
				return this._trailerCondition;
			}
			set {
				this._trailerCondition.Assign(value);
			}
		}
		
		private void OnShippingOperationInboundChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingOperationInbound", this._shippingOperationInbound.Clone());
		}
		
		private void OnShippingOperationInboundChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingOperationInbound");
		}
		
		private void OnShippingOperationInboundSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TrailerRegistrationNumber = this;
			}
			else {
				e.Item.TrailerRegistrationNumber = null;
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnTrailerConditionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TrailerCondition", this._trailerCondition.Clone());
		}
		
		private void OnTrailerConditionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TrailerCondition");
		}
		
		private void OnTrailerConditionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TrailerCondition> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TrailerRegistrationNumber = this;
			}
			else {
				e.Item.TrailerRegistrationNumber = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TrailerCondition", Id="0x0100FED3FD4862D5419CA251655768F4749F")]
	public partial class TrailerCondition : Element {
		
		private string _comments;
		
		private System.Nullable<TrailerCondition0> _trailerCondition0;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound> _shippingIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<Trailer> _trailerRegistrationNumber;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TrailerCondition() {
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this._trailerRegistrationNumber = new Microsoft.SharePoint.Linq.EntityRef<Trailer>();
			this._trailerRegistrationNumber.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer>>(this.OnTrailerRegistrationNumberSync);
			this._trailerRegistrationNumber.OnChanged += new System.EventHandler(this.OnTrailerRegistrationNumberChanged);
			this._trailerRegistrationNumber.OnChanging += new System.EventHandler(this.OnTrailerRegistrationNumberChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TrailerConditionComments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		/// <summary>
		/// Trailer Condition
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TrailerCondition", Storage="_trailerCondition0", FieldType="Choice")]
		public System.Nullable<TrailerCondition0> TrailerCondition0 {
			get {
				return this._trailerCondition0;
			}
			set {
				if ((value != this._trailerCondition0)) {
					this.OnPropertyChanging("TrailerCondition0", this._trailerCondition0);
					this._trailerCondition0 = value;
					this.OnPropertyChanged("TrailerCondition0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TrailerCondition2ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public ShippingOperationInbound ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TrailerCondition2TrailerTitle", Storage="_trailerRegistrationNumber", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Trailer")]
		public Trailer TrailerRegistrationNumber {
			get {
				return this._trailerRegistrationNumber.GetEntity();
			}
			set {
				this._trailerRegistrationNumber.SetEntity(value);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TrailerCondition.Add(this);
			}
			else {
				e.Item.TrailerCondition.Remove(this);
			}
		}
		
		private void OnTrailerRegistrationNumberChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TrailerRegistrationNumber", this._trailerRegistrationNumber.Clone());
		}
		
		private void OnTrailerRegistrationNumberChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TrailerRegistrationNumber");
		}
		
		private void OnTrailerRegistrationNumberSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TrailerCondition.Add(this);
			}
			else {
				e.Item.TrailerCondition.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Truck", Id="0x01003E7761AEF97A4C619F44D01B53A56568")]
	public partial class Truck : Element {
		
		private string _comments;
		
		private System.Nullable<VehicleType> _vehicleType;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingOperationInbound> _shippingOperationInbound;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Truck() {
			this._shippingOperationInbound = new Microsoft.SharePoint.Linq.EntitySet<ShippingOperationInbound>();
			this._shippingOperationInbound.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound>>(this.OnShippingOperationInboundSync);
			this._shippingOperationInbound.OnChanged += new System.EventHandler(this.OnShippingOperationInboundChanged);
			this._shippingOperationInbound.OnChanging += new System.EventHandler(this.OnShippingOperationInboundChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AdditionalComments", Storage="_comments", FieldType="Text")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VehicleType", Storage="_vehicleType", FieldType="Choice")]
		public System.Nullable<VehicleType> VehicleType {
			get {
				return this._vehicleType;
			}
			set {
				if ((value != this._vehicleType)) {
					this.OnPropertyChanging("VehicleType", this._vehicleType);
					this._vehicleType = value;
					this.OnPropertyChanged("VehicleType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TruckTitle", Storage="_shippingOperationInbound", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingOperationInbound> ShippingOperationInbound {
			get {
				return this._shippingOperationInbound;
			}
			set {
				this._shippingOperationInbound.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JTI Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		private void OnShippingOperationInboundChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingOperationInbound", this._shippingOperationInbound.Clone());
		}
		
		private void OnShippingOperationInboundChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingOperationInbound");
		}
		
		private void OnShippingOperationInboundSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TruckCarRegistrationNumber = this;
			}
			else {
				e.Item.TruckCarRegistrationNumber = null;
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Warehouse", Id="0x01001E57547208B49B46B4AA7CB4536B1A55")]
	public partial class Warehouse : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<Commodity> _commodity;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Warehouse() {
			this._commodity = new Microsoft.SharePoint.Linq.EntityRef<Commodity>();
			this._commodity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Commodity>>(this.OnCommoditySync);
			this._commodity.OnChanged += new System.EventHandler(this.OnCommodityChanged);
			this._commodity.OnChanging += new System.EventHandler(this.OnCommodityChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CommodityTitle", Storage="_commodity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public Commodity Commodity {
			get {
				return this._commodity.GetEntity();
			}
			set {
				this._commodity.SetEntity(value);
			}
		}
		
		private void OnCommodityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Commodity", this._commodity.Clone());
		}
		
		private void OnCommodityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Commodity");
		}
		
		private void OnCommoditySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Commodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Warehouse.Add(this);
			}
			else {
				e.Item.Warehouse.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Time Slot
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TimeSlot", Id="0x0102008B8977AFA9104B18B4B25D7C06A4A3AA")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TimeSlotTimeSlot))]
	public partial class TimeSlot : Wydarzenie {
		
		private System.Nullable<System.DateTime> _entryTime;
		
		private System.Nullable<double> _actualTimeSpan;
		
		private System.Nullable<System.DateTime> _exitTime;
		
		private System.Nullable<bool> _occupied;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound> _shippingIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingPoint> _shippingPoint;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TimeSlot() {
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<ShippingOperationInbound>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this._shippingPoint = new Microsoft.SharePoint.Linq.EntityRef<ShippingPoint>();
			this._shippingPoint.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint>>(this.OnShippingPointSync);
			this._shippingPoint.OnChanged += new System.EventHandler(this.OnShippingPointChanged);
			this._shippingPoint.OnChanging += new System.EventHandler(this.OnShippingPointChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EntryTime", Storage="_entryTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> EntryTime {
			get {
				return this._entryTime;
			}
			set {
				if ((value != this._entryTime)) {
					this.OnPropertyChanging("EntryTime", this._entryTime);
					this._entryTime = value;
					this.OnPropertyChanged("EntryTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TimeSpan", Storage="_actualTimeSpan", FieldType="Number")]
		public System.Nullable<double> ActualTimeSpan {
			get {
				return this._actualTimeSpan;
			}
			set {
				if ((value != this._actualTimeSpan)) {
					this.OnPropertyChanging("ActualTimeSpan", this._actualTimeSpan);
					this._actualTimeSpan = value;
					this.OnPropertyChanged("ActualTimeSpan");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExitTime", Storage="_exitTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ExitTime {
			get {
				return this._exitTime;
			}
			set {
				if ((value != this._exitTime)) {
					this.OnPropertyChanging("ExitTime", this._exitTime);
					this._exitTime = value;
					this.OnPropertyChanged("ExitTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Occupied", Storage="_occupied", FieldType="Boolean")]
		public System.Nullable<bool> Occupied {
			get {
				return this._occupied;
			}
			set {
				if ((value != this._occupied)) {
					this.OnPropertyChanging("Occupied", this._occupied);
					this._occupied = value;
					this.OnPropertyChanged("Occupied");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Lokalizacja {
			get {
				throw new System.InvalidOperationException("Pole Location zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole Location zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Description {
			get {
				throw new System.InvalidOperationException("Pole Comments zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole Comments zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> WydarzenieCałodzienne {
			get {
				throw new System.InvalidOperationException("Pole fAllDayEvent zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole fAllDayEvent zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Cykl {
			get {
				throw new System.InvalidOperationException("Pole fRecurrence zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole fRecurrence zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ObszarRoboczy {
			get {
				throw new System.InvalidOperationException("Pole WorkspaceLink zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole WorkspaceLink zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Kategoria> Kategoria {
			get {
				throw new System.InvalidOperationException("Pole Category zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole Category zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TimeSlot2ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public ShippingOperationInbound ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TimeSlot2ShippingPointLookup", Storage="_shippingPoint", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping Point")]
		public ShippingPoint ShippingPoint {
			get {
				return this._shippingPoint.GetEntity();
			}
			set {
				this._shippingPoint.SetEntity(value);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingOperationInbound> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TimeSlot.Add(this);
			}
			else {
				e.Item.TimeSlot.Remove(this);
			}
		}
		
		private void OnShippingPointChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingPoint", this._shippingPoint.Clone());
		}
		
		private void OnShippingPointChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingPoint");
		}
		
		private void OnShippingPointSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TimeSlot.Add(this);
			}
			else {
				e.Item.TimeSlot.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowe spotkanie, termin ostateczny lub inne wydarzenie.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TimeSlotTemplates", Id="0x0102009071878DECFF4D77B9136AE225F306E9")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TimeSlotTemplatesTimeSlotTemplates))]
	public partial class TimeSlotTemplates : Wydarzenie {
		
		private Microsoft.SharePoint.Linq.EntityRef<ScheduleTemplateScheduleTemplate> _scheduleTemplateShepherd;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TimeSlotTemplates() {
			this._scheduleTemplateShepherd = new Microsoft.SharePoint.Linq.EntityRef<ScheduleTemplateScheduleTemplate>();
			this._scheduleTemplateShepherd.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ScheduleTemplateScheduleTemplate>>(this.OnScheduleTemplateShepherdSync);
			this._scheduleTemplateShepherd.OnChanged += new System.EventHandler(this.OnScheduleTemplateShepherdChanged);
			this._scheduleTemplateShepherd.OnChanging += new System.EventHandler(this.OnScheduleTemplateShepherdChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ScheduleTemplateTitle", Storage="_scheduleTemplateShepherd", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Schedule Template")]
		public ScheduleTemplateScheduleTemplate ScheduleTemplateShepherd {
			get {
				return this._scheduleTemplateShepherd.GetEntity();
			}
			set {
				this._scheduleTemplateShepherd.SetEntity(value);
			}
		}
		
		private void OnScheduleTemplateShepherdChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ScheduleTemplateShepherd", this._scheduleTemplateShepherd.Clone());
		}
		
		private void OnScheduleTemplateShepherdChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ScheduleTemplateShepherd");
		}
		
		private void OnScheduleTemplateShepherdSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ScheduleTemplateScheduleTemplate> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TimeSlotTemplates.Add(this);
			}
			else {
				e.Item.TimeSlotTemplates.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Alarms and events
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="AlarmsAndEvents", Id="0x010049AA7238FCE34BE18336F419AE924845", List="Alarms and events")]
	public partial class AlarmsAndEventsAlarmsAndEvents : AlarmsAndEvents {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AlarmsAndEventsAlarmsAndEvents() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmasAndEvents2ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public override ShippingOperationInbound ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmasAndEvents2PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JTI Partner")]
		public override Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
	}
	
	/// <summary>
	/// A schedule template is a predefined table of time slots.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ScheduleTemplate", Id="0x010091765907174D4799B44C4DF249630D28", List="Schedule Template")]
	public partial class ScheduleTemplateScheduleTemplate : ScheduleTemplate {
		
		private Microsoft.SharePoint.Linq.EntitySet<TimeSlotTemplates> _timeSlotTemplates;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingPoint> _shippingPoint0;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ScheduleTemplateScheduleTemplate() {
			this._timeSlotTemplates = new Microsoft.SharePoint.Linq.EntitySet<TimeSlotTemplates>();
			this._timeSlotTemplates.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlotTemplates>>(this.OnTimeSlotTemplatesSync);
			this._timeSlotTemplates.OnChanged += new System.EventHandler(this.OnTimeSlotTemplatesChanged);
			this._timeSlotTemplates.OnChanging += new System.EventHandler(this.OnTimeSlotTemplatesChanging);
			this._shippingPoint0 = new Microsoft.SharePoint.Linq.EntityRef<ShippingPoint>();
			this._shippingPoint0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint>>(this.OnShippingPoint0Sync);
			this._shippingPoint0.OnChanged += new System.EventHandler(this.OnShippingPoint0Changed);
			this._shippingPoint0.OnChanging += new System.EventHandler(this.OnShippingPoint0Changing);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ScheduleTemplateTitle", Storage="_timeSlotTemplates", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="TimeSlot Templates")]
		public Microsoft.SharePoint.Linq.EntitySet<TimeSlotTemplates> TimeSlotTemplates {
			get {
				return this._timeSlotTemplates;
			}
			set {
				this._timeSlotTemplates.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingPointTitle", Storage="_shippingPoint0", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping Point")]
		public ShippingPoint ShippingPoint0 {
			get {
				return this._shippingPoint0.GetEntity();
			}
			set {
				this._shippingPoint0.SetEntity(value);
			}
		}
		
		private void OnTimeSlotTemplatesChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TimeSlotTemplates", this._timeSlotTemplates.Clone());
		}
		
		private void OnTimeSlotTemplatesChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TimeSlotTemplates");
		}
		
		private void OnTimeSlotTemplatesSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlotTemplates> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ScheduleTemplateShepherd = this;
			}
			else {
				e.Item.ScheduleTemplateShepherd = null;
			}
		}
		
		private void OnShippingPoint0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingPoint0", this._shippingPoint0.Clone());
		}
		
		private void OnShippingPoint0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingPoint0");
		}
		
		private void OnShippingPoint0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint> e) {
		}
	}
	
	/// <summary>
	/// Shipping Operation - Outbound
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ShippingOperationOutbound", Id="0x010047C1F2AB865840E598FE69DEC5D5B02100F3822278C9B04CA38278624C533B88DC")]
	public partial class ShippingOperationOutbound : ShippingOperationInbound {
		
		private string _securityEscortPO;
		
		private string _goodsHandlingPO;
		
		private System.Nullable<bool> _securityEscortRequired;
		
		private System.Nullable<System.DateTime> _estimateDeliveryTime;
		
		private System.Nullable<double> _additionalCosts;
		
		private Microsoft.SharePoint.Linq.EntityRef<Dokument> _securitySealProtocol;
		
		private Microsoft.SharePoint.Linq.EntityRef<SecurityEscortCatalog> _securityEscort;
		
		private System.Nullable<int> _routeIdentyfikator;
		
		private string _routeTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ShippingOperationOutbound() {
			this._securitySealProtocol = new Microsoft.SharePoint.Linq.EntityRef<Dokument>();
			this._securitySealProtocol.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument>>(this.OnSecuritySealProtocolSync);
			this._securitySealProtocol.OnChanged += new System.EventHandler(this.OnSecuritySealProtocolChanged);
			this._securitySealProtocol.OnChanging += new System.EventHandler(this.OnSecuritySealProtocolChanging);
			this._securityEscort = new Microsoft.SharePoint.Linq.EntityRef<SecurityEscortCatalog>();
			this._securityEscort.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog>>(this.OnSecurityEscortSync);
			this._securityEscort.OnChanged += new System.EventHandler(this.OnSecurityEscortChanged);
			this._securityEscort.OnChanging += new System.EventHandler(this.OnSecurityEscortChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityEscrotPO", Storage="_securityEscortPO", FieldType="Text")]
		public string SecurityEscortPO {
			get {
				return this._securityEscortPO;
			}
			set {
				if ((value != this._securityEscortPO)) {
					this.OnPropertyChanging("SecurityEscortPO", this._securityEscortPO);
					this._securityEscortPO = value;
					this.OnPropertyChanged("SecurityEscortPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsHandlingPO", Storage="_goodsHandlingPO", FieldType="Text")]
		public string GoodsHandlingPO {
			get {
				return this._goodsHandlingPO;
			}
			set {
				if ((value != this._goodsHandlingPO)) {
					this.OnPropertyChanging("GoodsHandlingPO", this._goodsHandlingPO);
					this._goodsHandlingPO = value;
					this.OnPropertyChanged("GoodsHandlingPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecuirtyEscortRequired", Storage="_securityEscortRequired", FieldType="Boolean")]
		public System.Nullable<bool> SecurityEscortRequired {
			get {
				return this._securityEscortRequired;
			}
			set {
				if ((value != this._securityEscortRequired)) {
					this.OnPropertyChanging("SecurityEscortRequired", this._securityEscortRequired);
					this._securityEscortRequired = value;
					this.OnPropertyChanged("SecurityEscortRequired");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EstimateDeliveryTime", Storage="_estimateDeliveryTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> EstimateDeliveryTime {
			get {
				return this._estimateDeliveryTime;
			}
			set {
				if ((value != this._estimateDeliveryTime)) {
					this.OnPropertyChanging("EstimateDeliveryTime", this._estimateDeliveryTime);
					this._estimateDeliveryTime = value;
					this.OnPropertyChanged("EstimateDeliveryTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AdditionalCosts", Storage="_additionalCosts", FieldType="Number")]
		public System.Nullable<double> AdditionalCosts {
			get {
				return this._additionalCosts;
			}
			set {
				if ((value != this._additionalCosts)) {
					this.OnPropertyChanging("AdditionalCosts", this._additionalCosts);
					this._additionalCosts = value;
					this.OnPropertyChanged("AdditionalCosts");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecuritySealProtocolIndex", Storage="_securitySealProtocol", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Security Seal Protocol")]
		public Dokument SecuritySealProtocol {
			get {
				return this._securitySealProtocol.GetEntity();
			}
			set {
				this._securitySealProtocol.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityEscortCatalogTitle", Storage="_securityEscort", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Security Escort Catalog")]
		public SecurityEscortCatalog SecurityEscort {
			get {
				return this._securityEscort.GetEntity();
			}
			set {
				this._securityEscort.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Shipping2RouteTitle", Storage="_routeIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> RouteIdentyfikator {
			get {
				return this._routeIdentyfikator;
			}
			set {
				if ((value != this._routeIdentyfikator)) {
					this.OnPropertyChanging("RouteIdentyfikator", this._routeIdentyfikator);
					this._routeIdentyfikator = value;
					this.OnPropertyChanged("RouteIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Shipping2RouteTitle", Storage="_routeTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string RouteTitle {
			get {
				return this._routeTitle;
			}
			set {
				if ((value != this._routeTitle)) {
					this.OnPropertyChanging("RouteTitle", this._routeTitle);
					this._routeTitle = value;
					this.OnPropertyChanged("RouteTitle");
				}
			}
		}
		
		private void OnSecuritySealProtocolChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecuritySealProtocol", this._securitySealProtocol.Clone());
		}
		
		private void OnSecuritySealProtocolChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecuritySealProtocol");
		}
		
		private void OnSecuritySealProtocolSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument> e) {
		}
		
		private void OnSecurityEscortChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscort", this._securityEscort.Clone());
		}
		
		private void OnSecurityEscortChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscort");
		}
		
		private void OnSecurityEscortSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingOperationOutbound.Add(this);
			}
			else {
				e.Item.ShippingOperationOutbound.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Time Slot
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TimeSlot", Id="0x0102008B8977AFA9104B18B4B25D7C06A4A3AA", List="TimeSlot")]
	public partial class TimeSlotTimeSlot : TimeSlot {
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingPoint> _shippingPoint0;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TimeSlotTimeSlot() {
			this._shippingPoint0 = new Microsoft.SharePoint.Linq.EntityRef<ShippingPoint>();
			this._shippingPoint0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint>>(this.OnShippingPoint0Sync);
			this._shippingPoint0.OnChanged += new System.EventHandler(this.OnShippingPoint0Changed);
			this._shippingPoint0.OnChanging += new System.EventHandler(this.OnShippingPoint0Changing);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EventDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public override System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TimeSlot2ShippingPointTitle", Storage="_shippingPoint0", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping Point")]
		public ShippingPoint ShippingPoint0 {
			get {
				return this._shippingPoint0.GetEntity();
			}
			set {
				this._shippingPoint0.SetEntity(value);
			}
		}
		
		private void OnShippingPoint0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingPoint0", this._shippingPoint0.Clone());
		}
		
		private void OnShippingPoint0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingPoint0");
		}
		
		private void OnShippingPoint0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint> e) {
		}
	}
	
	/// <summary>
	/// TimeSlotTemplates
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TimeSlotTemplates", Id="0x0102009071878DECFF4D77B9136AE225F306E9", List="TimeSlot Templates")]
	public partial class TimeSlotTemplatesTimeSlotTemplates : TimeSlotTemplates {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TimeSlotTemplatesTimeSlotTemplates() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EventDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public override System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
		public override string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
	}
	
	public enum Kategoria : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Category1")]
		_1Category1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Category2")]
		_2Category2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Category3")]
		_3Category3 = 8,
	}
	
	public enum ServiceType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Vendor")]
		Vendor = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Forwarder")]
		Forwarder = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Vendor and Forwarder")]
		VendorAndForwarder = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Security Escort Provider")]
		SecurityEscortProvider = 16,
	}
	
	public enum State : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Canceled")]
		Canceled = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Completed")]
		Completed = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Confirmed")]
		Confirmed = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Creation")]
		Creation = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Delayed")]
		Delayed = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waiting4ExternalApproval")]
		Waiting4ExternalApproval = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waiting4InternalApproval")]
		Waiting4InternalApproval = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Underway")]
		Underway = 256,
	}
	
	public enum Direction : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Inbound")]
		Inbound = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Outbound")]
		Outbound = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Both directions")]
		BothDirections = 8,
	}
	
	public enum TrailerCondition0 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="5- excellent")]
		_5Excellent = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4")]
		_4 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3")]
		_3 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2")]
		_2 = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="1 - unexceptable")]
		_1Unexceptable = 32,
	}
	
	public enum VehicleType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Truck")]
		Truck = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Van")]
		Van = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Security Escort Car")]
		SecurityEscortCar = 8,
	}
}
