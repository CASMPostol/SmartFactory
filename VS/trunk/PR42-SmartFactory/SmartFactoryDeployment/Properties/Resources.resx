<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationFound" xml:space="preserve">
    <value>Found the Web application that is located at the specified URL={0}, Name={1}, DisplayName={2}.</value>
  </data>
  <data name="AreYouSure2Cancel" xml:space="preserve">
    <value>Are you sure to cancel and rollback the installation? Press OK to exit, or Cancel to continue.</value>
  </data>
  <data name="NextButtonTextEXIT" xml:space="preserve">
    <value>EXIT</value>
  </data>
  <data name="CancelInstallationCaption" xml:space="preserve">
    <value>Cancel installation ?</value>
  </data>
  <data name="CannotDelete" xml:space="preserve">
    <value>Cannot delete the website because it does not exist.</value>
  </data>
  <data name="CannotGetAccessToLocalServer" xml:space="preserve">
    <value>Cannot get access to the local SharePoint server. The software can run only locally on the SharePoint 2010 sewer.</value>
  </data>
  <data name="CaptionOperationFailure" xml:space="preserve">
    <value>Operation failed</value>
  </data>
  <data name="CheckIinProcessFfailed" xml:space="preserve">
    <value>The check in process failed. Learn more from the log list box, go back and review the provided parameters to try again.</value>
  </data>
  <data name="CheckIinProcessFfailedCaption" xml:space="preserve">
    <value>Check in process failed !</value>
  </data>
  <data name="CreateSiteCollectionFailed" xml:space="preserve">
    <value>Create site collection failed with error: {0}.</value>
  </data>
  <data name="DeploySolutionFailed" xml:space="preserve">
    <value>DeploySolution failed for the site: {0}, file: {1} with the error {2}.</value>
  </data>
  <data name="FinishButtonText" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="GettingAccess2ApplicationFailed" xml:space="preserve">
    <value>Getting access to the Web application that is located at the specified URL= {0} failed.</value>
  </data>
  <data name="GettingAccess2LocalFarm" xml:space="preserve">
    <value>Getting access to the local server farm failed.</value>
  </data>
  <data name="GettingAccess2LocalFarmException" xml:space="preserve">
    <value>Getting access to the local server farm failed wit the error: {0}.</value>
  </data>
  <data name="GetWebApplicationFfailed" xml:space="preserve">
    <value>Get Web Application failed wit the error {0}.</value>
  </data>
  <data name="FarmGotAccess" xml:space="preserve">
    <value>Got access to the local server farm. Name ={0}, DisplayName={1}, Status={2}.</value>
  </data>
  <data name="HTTPNotValid" xml:space="preserve">
    <value>The application address must be valid http address format. 
For example 'http://computer.domain:Port'</value>
  </data>
  <data name="LastOperationFailed" xml:space="preserve">
    <value>Last operation failed with Error {0}. Press Ok to continue or Cancel to aboard.</value>
  </data>
  <data name="SiteCollectionExist" xml:space="preserve">
    <value>The site collection {0} exist. Press Yes to use this site, No to delete it and create new with the same name.</value>
  </data>
  <data name="SiteExistAndDelete" xml:space="preserve">
    <value>The specified site collection exist and will be deleted.</value>
  </data>
  <data name="SiteExistAndReuse" xml:space="preserve">
    <value>The specified site collection exist and will be reused.</value>
  </data>
  <data name="UrlMustBeHttp" xml:space="preserve">
    <value>Url must be Http protocol.</value>
  </data>
  <data name="ValidationProcessFailed" xml:space="preserve">
    <value>Validation process failed because: {0}. Go back and review the provided parameters and try again.</value>
  </data>
  <data name="ValidationProcessStarting" xml:space="preserve">
    <value>The local environment validation process starting.</value>
  </data>
  <data name="FarmSolutionFailed" xml:space="preserve">
    <value>DeploySolution failed for the site: {0}, file: {1}, feature: {2} with the error: {3}.</value>
  </data>
  <data name="NullReference" xml:space="preserve">
    <value>&lt;null reference&gt;</value>
  </data>
  <data name="SiteCollectionNotExist" xml:space="preserve">
    <value>Site Collection not yet created</value>
  </data>
  <data name="SiteCreation" xml:space="preserve">
    <value>Site creation</value>
  </data>
  <data name="CannotFindTheSolution" xml:space="preserve">
    <value>Cannot find the solution on the local farm server.</value>
  </data>
  <data name="RetracDeploySolutionFailed" xml:space="preserve">
    <value>Retrack of farm solution failed : Name = {0}, file: {1}, feature: {2} with the error: {3}.</value>
  </data>
  <data name="DeplymentTimeout" xml:space="preserve">
    <value>Timeout encountered during solution deployment; DeploymentState={0}, Status={1}, LastOperationResult= {2}, LastOperationDetails={3}.</value>
  </data>
  <data name="DeployFarmSolutionFailed" xml:space="preserve">
    <value>DeploySolution failed for the file: {0} with the error: {1}. </value>
  </data>
  <data name="FeatureActivationFailed" xml:space="preserve">
    <value>Activation of the feature: {0} at site: {1} with the scope {2} failed with the error {3}.</value>
  </data>
  <data name="InstallationProperties" xml:space="preserve">
    <value>Installation properties</value>
  </data>
  <data name="InstalationAbortRollback" xml:space="preserve">
    <value>Last operation failed with Error {0}. Press OK to aboard the installation and rollback.</value>
  </data>
  <data name="ConfigurationSaveInstallationStateDataFailure" xml:space="preserve">
    <value>Cannot save the installation state data. The operation finished with the error: {0}</value>
  </data>
  <data name="NextButtonTextInstall" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="ValidationProcessSuccessfullyFinished" xml:space="preserve">
    <value>The validation process successfully finished - installation can be started.</value>
  </data>
  <data name="FeatureDeactivationFailed" xml:space="preserve">
    <value>Deactivation of the feature: {0} at site: {1} failed with the error {2}.</value>
  </data>
  <data name="LastOperationFailedWithError" xml:space="preserve">
    <value>Last operation failed with Error {0}.</value>
  </data>
  <data name="NextButtonTextNext" xml:space="preserve">
    <value>&gt;&gt;</value>
  </data>
  <data name="ConfigurationReadInstallationStateDataFailure" xml:space="preserve">
    <value>Cannot read the installation state data. The operation finished with the error: {0}</value>
  </data>
  <data name="UninstallErrorCaption" xml:space="preserve">
    <value>Uninstall error !</value>
  </data>
  <data name="InstallationFailed" xml:space="preserve">
    <value>The installation failed. You can cancel and rollback the installation or keep it for review? Press OK to exit, or Cancel to rollback.</value>
  </data>
  <data name="SeeLogFile" xml:space="preserve">
    <value>The installation failed. Review the .log file at {0}</value>
  </data>
  <data name="RetrackCaption" xml:space="preserve">
    <value>Retrack</value>
  </data>
  <data name="SoftwareIsNotInstalled" xml:space="preserve">
    <value>There is nothing to uninstall. The software has not been installed or was already removed from this server.</value>
  </data>
  <data name="DeploymentSuccess" xml:space="preserve">
    <value>The deployment finished successfully. Elapsed time: {0}.</value>
  </data>
  <data name="NextButtonTextVerify" xml:space="preserve">
    <value>Verify</value>
  </data>
</root>