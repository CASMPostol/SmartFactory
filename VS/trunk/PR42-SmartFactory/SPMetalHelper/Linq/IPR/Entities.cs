//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:2.0.50727.5456
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.SmartFactory.Linq.IPR {
	using System;
	
	
	public partial class EntitiesDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public EntitiesDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// It contains logged messages.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Activity Log")]
		public Microsoft.SharePoint.Linq.EntityList<Anons> ActivityLog {
			get {
				return this.GetList<Anons>("Activity Log");
			}
		}
		
		/// <summary>
		/// Balance files collection
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Balance Library")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> BalanceLibrary {
			get {
				return this.GetList<Dokument>("Balance Library");
			}
		}
		
		/// <summary>
		/// Balance Summary List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Balance Summary")]
		public Microsoft.SharePoint.Linq.EntityList<BalanceSummary> BalanceSummary {
			get {
				return this.GetList<BalanceSummary>("Balance Summary");
			}
		}
		
		/// <summary>
		/// Batch List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Batch")]
		public Microsoft.SharePoint.Linq.EntityList<Batch> Batch {
			get {
				return this.GetList<Batch>("Batch");
			}
		}
		
		/// <summary>
		/// Batch Library List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Batch Library")]
		public Microsoft.SharePoint.Linq.EntityList<BatchLib> BatchLibrary {
			get {
				return this.GetList<BatchLib>("Batch Library");
			}
		}
		
		/// <summary>
		/// Clearence List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Clearence")]
		public Microsoft.SharePoint.Linq.EntityList<Clearence> Clearence {
			get {
				return this.GetList<Clearence>("Clearence");
			}
		}
		
		/// <summary>
		/// Consent List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Consent")]
		public Microsoft.SharePoint.Linq.EntityList<Consent> Consent {
			get {
				return this.GetList<Consent>("Consent");
			}
		}
		
		/// <summary>
		/// Customs Union List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Customs Union")]
		public Microsoft.SharePoint.Linq.EntityList<CustomsUnion> CustomsUnion {
			get {
				return this.GetList<CustomsUnion>("Customs Union");
			}
		}
		
		/// <summary>
		/// Cutfiller Coefficient List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Cutfiller Coefficient")]
		public Microsoft.SharePoint.Linq.EntityList<CutfillerCoefficient> CutfillerCoefficient {
			get {
				return this.GetList<CutfillerCoefficient>("Cutfiller Coefficient");
			}
		}
		
		/// <summary>
		/// Disposal List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Disposal")]
		public Microsoft.SharePoint.Linq.EntityList<Disposal> Disposal {
			get {
				return this.GetList<Disposal>("Disposal");
			}
		}
		
		/// <summary>
		/// Dust
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Dust")]
		public Microsoft.SharePoint.Linq.EntityList<Dust> Dust {
			get {
				return this.GetList<Dust>("Dust");
			}
		}
		
		/// <summary>
		/// Format
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Format")]
		public Microsoft.SharePoint.Linq.EntityList<Format> Format {
			get {
				return this.GetList<Format>("Format");
			}
		}
		
		/// <summary>
		/// Invoice Content List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Invoice Content")]
		public Microsoft.SharePoint.Linq.EntityList<InvoiceContent> InvoiceContent {
			get {
				return this.GetList<InvoiceContent>("Invoice Content");
			}
		}
		
		/// <summary>
		/// Invoice Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Invoice Library")]
		public Microsoft.SharePoint.Linq.EntityList<InvoiceLib> InvoiceLibrary {
			get {
				return this.GetList<InvoiceLib>("Invoice Library");
			}
		}
		
		/// <summary>
		/// IPR List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="IPR")]
		public Microsoft.SharePoint.Linq.EntityList<IPR> IPR {
			get {
				return this.GetList<IPR>("IPR");
			}
		}
		
		/// <summary>
		/// IPR files collection
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="IPR Library")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> IPRLibrary {
			get {
				return this.GetList<Dokument>("IPR Library");
			}
		}
		
		/// <summary>
		/// JSOX List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="JSOX")]
		public Microsoft.SharePoint.Linq.EntityList<JSOX> JSOX {
			get {
				return this.GetList<JSOX>("JSOX");
			}
		}
		
		/// <summary>
		/// JSOX Customs Summary List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="JSOX Customs Summary")]
		public Microsoft.SharePoint.Linq.EntityList<JSOXCustomsSummary> JSOXCustomsSummary {
			get {
				return this.GetList<JSOXCustomsSummary>("JSOX Customs Summary");
			}
		}
		
		/// <summary>
		/// JSOX files collection
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="JSOX Library")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> JSOXLibrary {
			get {
				return this.GetList<Dokument>("JSOX Library");
			}
		}
		
		/// <summary>
		/// JSOX Summary List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="JSOX Summary")]
		public Microsoft.SharePoint.Linq.EntityList<JSOXSummary> JSOXSummary {
			get {
				return this.GetList<JSOXSummary>("JSOX Summary");
			}
		}
		
		/// <summary>
		/// Material List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Material")]
		public Microsoft.SharePoint.Linq.EntityList<Material> Material {
			get {
				return this.GetList<Material>("Material");
			}
		}
		
		/// <summary>
		/// PCN Code List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="PCN Code")]
		public Microsoft.SharePoint.Linq.EntityList<PCNCode> PCNCode {
			get {
				return this.GetList<PCNCode>("PCN Code");
			}
		}
		
		/// <summary>
		/// SAD Consignment files collection
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Consignment Library")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> SADConsignmentLibrary {
			get {
				return this.GetList<Dokument>("SAD Consignment Library");
			}
		}
		
		/// <summary>
		/// My List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Document")]
		public Microsoft.SharePoint.Linq.EntityList<SADDocumentType> SADDocument {
			get {
				return this.GetList<SADDocumentType>("SAD Document");
			}
		}
		
		/// <summary>
		/// SAD Document Library List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Document Library")]
		public Microsoft.SharePoint.Linq.EntityList<SADDocumentLib> SADDocumentLibrary {
			get {
				return this.GetList<SADDocumentLib>("SAD Document Library");
			}
		}
		
		/// <summary>
		/// SAD Duties List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Duties")]
		public Microsoft.SharePoint.Linq.EntityList<SADDuties> SADDuties {
			get {
				return this.GetList<SADDuties>("SAD Duties");
			}
		}
		
		/// <summary>
		/// The SAD Good List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Good")]
		public Microsoft.SharePoint.Linq.EntityList<SADGood> SADGood {
			get {
				return this.GetList<SADGood>("SAD Good");
			}
		}
		
		/// <summary>
		/// The SAD Package List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Package")]
		public Microsoft.SharePoint.Linq.EntityList<SADPackage> SADPackage {
			get {
				return this.GetList<SADPackage>("SAD Package");
			}
		}
		
		/// <summary>
		/// The SAD Quantity List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Quantity")]
		public Microsoft.SharePoint.Linq.EntityList<SADQuantity> SADQuantity {
			get {
				return this.GetList<SADQuantity>("SAD Quantity");
			}
		}
		
		/// <summary>
		/// The SAD Required Documents List
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAD Required Documents")]
		public Microsoft.SharePoint.Linq.EntityList<SADRequiredDocuments> SADRequiredDocuments {
			get {
				return this.GetList<SADRequiredDocuments>("SAD Required Documents");
			}
		}
		
		/// <summary>
		/// SHMentholList
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SHMenthol")]
		public Microsoft.SharePoint.Linq.EntityList<SHMenthol> SHMenthol {
			get {
				return this.GetList<SHMenthol>("SHMenthol");
			}
		}
		
		/// <summary>
		/// SKU List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SKU")]
		public Microsoft.SharePoint.Linq.EntityList<SKUCommonPart> SKU {
			get {
				return this.GetList<SKUCommonPart>("SKU");
			}
		}
		
		/// <summary>
		/// SKU files collection
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SKU Library")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> SKULibrary {
			get {
				return this.GetList<Dokument>("SKU Library");
			}
		}
		
		/// <summary>
		/// Stock List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Stock")]
		public Microsoft.SharePoint.Linq.EntityList<Stock> Stock {
			get {
				return this.GetList<Stock>("Stock");
			}
		}
		
		/// <summary>
		/// Stock Entry List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Stock Entry")]
		public Microsoft.SharePoint.Linq.EntityList<StockEntry> StockEntry {
			get {
				return this.GetList<StockEntry>("Stock Entry");
			}
		}
		
		/// <summary>
		/// Stock files collection
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Stock Library")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> StockLibrary {
			get {
				return this.GetList<Dokument>("Stock Library");
			}
		}
		
		/// <summary>
		/// Use the style library to store style sheets, such as CSS or XSL files. The style sheets in this gallery can be used by this site or any of its subsites.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Style Library")]
		public Microsoft.SharePoint.Linq.EntityList<Dokument> StyleLibrary {
			get {
				return this.GetList<Dokument>("Style Library");
			}
		}
		
		/// <summary>
		/// UsageList
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Usage")]
		public Microsoft.SharePoint.Linq.EntityList<Usage> Usage {
			get {
				return this.GetList<Usage>("Usage");
			}
		}
		
		/// <summary>
		/// Warehouse List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Warehouse")]
		public Microsoft.SharePoint.Linq.EntityList<Warehouse> Warehouse {
			get {
				return this.GetList<Warehouse>("Warehouse");
			}
		}
		
		/// <summary>
		/// Waste List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Waste")]
		public Microsoft.SharePoint.Linq.EntityList<Waste> Waste {
			get {
				return this.GetList<Waste>("Waste");
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Element", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Anons))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Dokument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ReportsCommonPart))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Batch))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Clearence))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Consent))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CustomsUnion))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CutfillerCoefficient))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Disposal))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Dust))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Format))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(InvoiceContent))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(IPR))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(JSOX))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(JSOXCustomsSummary))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Material))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PCNCode))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADDocumentType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADDuties))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADGood))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADPackage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADQuantity))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADRequiredDocuments))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SHMenthol))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SKUCommonPart))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Stock))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(StockEntry))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Usage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Warehouse))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Waste))]
	public partial class Element : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _identyfikator;
		
		private System.Nullable<int> _wersja;
		
		private string _ścieżka;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		private string _tytuł;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Element() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_identyfikator", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Identyfikator {
			get {
				return this._identyfikator;
			}
			set {
				if ((value != this._identyfikator)) {
					this.OnPropertyChanging("Identyfikator", this._identyfikator);
					this._identyfikator = value;
					this.OnPropertyChanged("Identyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_wersja", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Wersja {
			get {
				return this._wersja;
			}
			set {
				if ((value != this._wersja)) {
					this.OnPropertyChanging("Wersja", this._wersja);
					this._wersja = value;
					this.OnPropertyChanged("Wersja");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_ścieżka", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Ścieżka {
			get {
				return this._ścieżka;
			}
			set {
				if ((value != this._ścieżka)) {
					this.OnPropertyChanging("Ścieżka", this._ścieżka);
					this._ścieżka = value;
					this.OnPropertyChanged("Ścieżka");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_tytuł", Required=true, FieldType="Text")]
		public virtual string Tytuł {
			get {
				return this._tytuł;
			}
			set {
				if ((value != this._tytuł)) {
					this.OnPropertyChanging("Tytuł", this._tytuł);
					this._tytuł = value;
					this.OnPropertyChanged("Tytuł");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element wiadomości, stan lub inną krótką informację.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Anons", Id="0x0104")]
	public partial class Anons : Element {
		
		private string _treść;
		
		private System.Nullable<System.DateTime> _wygasa;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Anons() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_treść", FieldType="Note")]
		public string Treść {
			get {
				return this._treść;
			}
			set {
				if ((value != this._treść)) {
					this.OnPropertyChanging("Treść", this._treść);
					this._treść = value;
					this.OnPropertyChanged("Treść");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_wygasa", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Wygasa {
			get {
				return this._wygasa;
			}
			set {
				if ((value != this._wygasa)) {
					this.OnPropertyChanging("Wygasa", this._wygasa);
					this._wygasa = value;
					this.OnPropertyChanged("Wygasa");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Dokument", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(BatchLib))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(InvoiceLib))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SADDocumentLib))]
	public partial class Dokument : Element {
		
		private string _nazwa;
		
		private string _dokumentZmodyfikowanyPrzez;
		
		private string _dokumentUtworzonyPrzez;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Dokument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_nazwa", Required=true, FieldType="File")]
		public string Nazwa {
			get {
				return this._nazwa;
			}
			set {
				if ((value != this._nazwa)) {
					this.OnPropertyChanging("Nazwa", this._nazwa);
					this._nazwa = value;
					this.OnPropertyChanged("Nazwa");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_dokumentZmodyfikowanyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentZmodyfikowanyPrzez {
			get {
				return this._dokumentZmodyfikowanyPrzez;
			}
			set {
				if ((value != this._dokumentZmodyfikowanyPrzez)) {
					this.OnPropertyChanging("DokumentZmodyfikowanyPrzez", this._dokumentZmodyfikowanyPrzez);
					this._dokumentZmodyfikowanyPrzez = value;
					this.OnPropertyChanged("DokumentZmodyfikowanyPrzez");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_dokumentUtworzonyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentUtworzonyPrzez {
			get {
				return this._dokumentUtworzonyPrzez;
			}
			set {
				if ((value != this._dokumentUtworzonyPrzez)) {
					this.OnPropertyChanging("DokumentUtworzonyPrzez", this._dokumentUtworzonyPrzez);
					this._dokumentUtworzonyPrzez = value;
					this.OnPropertyChanged("DokumentUtworzonyPrzez");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ReportsCommonPart", Id="0x0100BC0DDC1827F346ED911D777504830C52")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(BalanceSummary))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(JSOXSummary))]
	public partial class ReportsCommonPart : Element {
		
		private string _sKU;
		
		private string _batch;
		
		private System.Nullable<double> _tobaccoEnteredIntoIPR;
		
		private System.Nullable<double> _tobaccoCSFinished;
		
		private System.Nullable<double> _tobaccoInFGCSStarted;
		
		private System.Nullable<double> _dustCSStarted;
		
		private System.Nullable<double> _wasteCSStarted;
		
		private System.Nullable<double> _sHMentholCSStarted;
		
		private System.Nullable<double> _overuseCSStarted;
		
		private System.Nullable<double> _pureTobaccoCSStarted;
		
		private System.Nullable<double> _iPRBook;
		
		private System.Nullable<double> _wasteCSNotStarted;
		
		private System.Nullable<double> _sHMentholCSNotStarted;
		
		private System.Nullable<double> _overuseCSNotStarted;
		
		private System.Nullable<double> _sHWasteOveruseCSNotStarted;
		
		private System.Nullable<double> _dustCSNotStarted;
		
		private System.Nullable<double> _tobaccoAvailable;
		
		private System.Nullable<double> _tobaccoAinFGCSNotStarted;
		
		private System.Nullable<double> _pureTobaccoCSNotStarted;
		
		private System.Nullable<double> _tobaccoUsedInTheProduction;
		
		private System.Nullable<double> _tobaccoToBeUsedInTheProduction;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ReportsCommonPart() {
			this.OnCreated();
		}
		
		/// <summary>
		/// SKU
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		/// <summary>
		/// Batch
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoEnteredIntoIPR", Storage="_tobaccoEnteredIntoIPR", FieldType="Number")]
		public System.Nullable<double> TobaccoEnteredIntoIPR {
			get {
				return this._tobaccoEnteredIntoIPR;
			}
			set {
				if ((value != this._tobaccoEnteredIntoIPR)) {
					this.OnPropertyChanging("TobaccoEnteredIntoIPR", this._tobaccoEnteredIntoIPR);
					this._tobaccoEnteredIntoIPR = value;
					this.OnPropertyChanged("TobaccoEnteredIntoIPR");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoCSFinished", Storage="_tobaccoCSFinished", FieldType="Number")]
		public System.Nullable<double> TobaccoCSFinished {
			get {
				return this._tobaccoCSFinished;
			}
			set {
				if ((value != this._tobaccoCSFinished)) {
					this.OnPropertyChanging("TobaccoCSFinished", this._tobaccoCSFinished);
					this._tobaccoCSFinished = value;
					this.OnPropertyChanged("TobaccoCSFinished");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInFGCSStarted", Storage="_tobaccoInFGCSStarted", FieldType="Number")]
		public System.Nullable<double> TobaccoInFGCSStarted {
			get {
				return this._tobaccoInFGCSStarted;
			}
			set {
				if ((value != this._tobaccoInFGCSStarted)) {
					this.OnPropertyChanging("TobaccoInFGCSStarted", this._tobaccoInFGCSStarted);
					this._tobaccoInFGCSStarted = value;
					this.OnPropertyChanged("TobaccoInFGCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DustCSStarted", Storage="_dustCSStarted", FieldType="Number")]
		public System.Nullable<double> DustCSStarted {
			get {
				return this._dustCSStarted;
			}
			set {
				if ((value != this._dustCSStarted)) {
					this.OnPropertyChanging("DustCSStarted", this._dustCSStarted);
					this._dustCSStarted = value;
					this.OnPropertyChanged("DustCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WasteCSStarted", Storage="_wasteCSStarted", FieldType="Number")]
		public System.Nullable<double> WasteCSStarted {
			get {
				return this._wasteCSStarted;
			}
			set {
				if ((value != this._wasteCSStarted)) {
					this.OnPropertyChanging("WasteCSStarted", this._wasteCSStarted);
					this._wasteCSStarted = value;
					this.OnPropertyChanged("WasteCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHMentholCSStarted", Storage="_sHMentholCSStarted", FieldType="Number")]
		public System.Nullable<double> SHMentholCSStarted {
			get {
				return this._sHMentholCSStarted;
			}
			set {
				if ((value != this._sHMentholCSStarted)) {
					this.OnPropertyChanging("SHMentholCSStarted", this._sHMentholCSStarted);
					this._sHMentholCSStarted = value;
					this.OnPropertyChanged("SHMentholCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OveruseCSStarted", Storage="_overuseCSStarted", FieldType="Number")]
		public System.Nullable<double> OveruseCSStarted {
			get {
				return this._overuseCSStarted;
			}
			set {
				if ((value != this._overuseCSStarted)) {
					this.OnPropertyChanging("OveruseCSStarted", this._overuseCSStarted);
					this._overuseCSStarted = value;
					this.OnPropertyChanged("OveruseCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PureTobaccoCSStarted", Storage="_pureTobaccoCSStarted", FieldType="Number")]
		public System.Nullable<double> PureTobaccoCSStarted {
			get {
				return this._pureTobaccoCSStarted;
			}
			set {
				if ((value != this._pureTobaccoCSStarted)) {
					this.OnPropertyChanging("PureTobaccoCSStarted", this._pureTobaccoCSStarted);
					this._pureTobaccoCSStarted = value;
					this.OnPropertyChanged("PureTobaccoCSStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRBook", Storage="_iPRBook", FieldType="Number")]
		public System.Nullable<double> IPRBook {
			get {
				return this._iPRBook;
			}
			set {
				if ((value != this._iPRBook)) {
					this.OnPropertyChanging("IPRBook", this._iPRBook);
					this._iPRBook = value;
					this.OnPropertyChanged("IPRBook");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WasteCSNotStarted", Storage="_wasteCSNotStarted", FieldType="Number")]
		public System.Nullable<double> WasteCSNotStarted {
			get {
				return this._wasteCSNotStarted;
			}
			set {
				if ((value != this._wasteCSNotStarted)) {
					this.OnPropertyChanging("WasteCSNotStarted", this._wasteCSNotStarted);
					this._wasteCSNotStarted = value;
					this.OnPropertyChanged("WasteCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHMentholCSNotStarted", Storage="_sHMentholCSNotStarted", FieldType="Number")]
		public System.Nullable<double> SHMentholCSNotStarted {
			get {
				return this._sHMentholCSNotStarted;
			}
			set {
				if ((value != this._sHMentholCSNotStarted)) {
					this.OnPropertyChanging("SHMentholCSNotStarted", this._sHMentholCSNotStarted);
					this._sHMentholCSNotStarted = value;
					this.OnPropertyChanged("SHMentholCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OveruseCSNotStarted", Storage="_overuseCSNotStarted", FieldType="Number")]
		public System.Nullable<double> OveruseCSNotStarted {
			get {
				return this._overuseCSNotStarted;
			}
			set {
				if ((value != this._overuseCSNotStarted)) {
					this.OnPropertyChanging("OveruseCSNotStarted", this._overuseCSNotStarted);
					this._overuseCSNotStarted = value;
					this.OnPropertyChanged("OveruseCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHWasteOveruseCSNotStarted", Storage="_sHWasteOveruseCSNotStarted", FieldType="Number")]
		public System.Nullable<double> SHWasteOveruseCSNotStarted {
			get {
				return this._sHWasteOveruseCSNotStarted;
			}
			set {
				if ((value != this._sHWasteOveruseCSNotStarted)) {
					this.OnPropertyChanging("SHWasteOveruseCSNotStarted", this._sHWasteOveruseCSNotStarted);
					this._sHWasteOveruseCSNotStarted = value;
					this.OnPropertyChanged("SHWasteOveruseCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DustCSNotStarted", Storage="_dustCSNotStarted", FieldType="Number")]
		public System.Nullable<double> DustCSNotStarted {
			get {
				return this._dustCSNotStarted;
			}
			set {
				if ((value != this._dustCSNotStarted)) {
					this.OnPropertyChanging("DustCSNotStarted", this._dustCSNotStarted);
					this._dustCSNotStarted = value;
					this.OnPropertyChanged("DustCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoAvailable", Storage="_tobaccoAvailable", FieldType="Number")]
		public System.Nullable<double> TobaccoAvailable {
			get {
				return this._tobaccoAvailable;
			}
			set {
				if ((value != this._tobaccoAvailable)) {
					this.OnPropertyChanging("TobaccoAvailable", this._tobaccoAvailable);
					this._tobaccoAvailable = value;
					this.OnPropertyChanged("TobaccoAvailable");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInFGCSNotStarted", Storage="_tobaccoAinFGCSNotStarted", FieldType="Number")]
		public System.Nullable<double> TobaccoAinFGCSNotStarted {
			get {
				return this._tobaccoAinFGCSNotStarted;
			}
			set {
				if ((value != this._tobaccoAinFGCSNotStarted)) {
					this.OnPropertyChanging("TobaccoAinFGCSNotStarted", this._tobaccoAinFGCSNotStarted);
					this._tobaccoAinFGCSNotStarted = value;
					this.OnPropertyChanged("TobaccoAinFGCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PureTobaccoCSNotStarted", Storage="_pureTobaccoCSNotStarted", FieldType="Number")]
		public System.Nullable<double> PureTobaccoCSNotStarted {
			get {
				return this._pureTobaccoCSNotStarted;
			}
			set {
				if ((value != this._pureTobaccoCSNotStarted)) {
					this.OnPropertyChanging("PureTobaccoCSNotStarted", this._pureTobaccoCSNotStarted);
					this._pureTobaccoCSNotStarted = value;
					this.OnPropertyChanged("PureTobaccoCSNotStarted");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoUsedInTheProduction", Storage="_tobaccoUsedInTheProduction", FieldType="Number")]
		public System.Nullable<double> TobaccoUsedInTheProduction {
			get {
				return this._tobaccoUsedInTheProduction;
			}
			set {
				if ((value != this._tobaccoUsedInTheProduction)) {
					this.OnPropertyChanging("TobaccoUsedInTheProduction", this._tobaccoUsedInTheProduction);
					this._tobaccoUsedInTheProduction = value;
					this.OnPropertyChanged("TobaccoUsedInTheProduction");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoToBeUsedInTheProduction", Storage="_tobaccoToBeUsedInTheProduction", FieldType="Number")]
		public System.Nullable<double> TobaccoToBeUsedInTheProduction {
			get {
				return this._tobaccoToBeUsedInTheProduction;
			}
			set {
				if ((value != this._tobaccoToBeUsedInTheProduction)) {
					this.OnPropertyChanging("TobaccoToBeUsedInTheProduction", this._tobaccoToBeUsedInTheProduction);
					this._tobaccoToBeUsedInTheProduction = value;
					this.OnPropertyChanged("TobaccoToBeUsedInTheProduction");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Batch", Id="0x0100FCF87F15D5BE244EBA39ACA130B1ABDB")]
	public partial class Batch : Element {
		
		private string _batch0;
		
		private string _sKU;
		
		private System.Nullable<double> _fGQuantityKUKg;
		
		private System.Nullable<double> _fGQuantityPrevious;
		
		private System.Nullable<double> _fGQuantityBlocked;
		
		private System.Nullable<double> _fGQuantityAvailable;
		
		private System.Nullable<double> _materialQuantity;
		
		private System.Nullable<double> _materialQuantityPrevious;
		
		private System.Nullable<double> _calculatedOveruse;
		
		private System.Nullable<double> _overuseKg;
		
		private System.Nullable<double> _dustKg;
		
		private System.Nullable<double> _wasteKg;
		
		private System.Nullable<double> _tobaccoKg;
		
		private System.Nullable<double> _sHMentholKg;
		
		private System.Nullable<double> _sHCooeficiency;
		
		private System.Nullable<double> _sHCoeficiencyVersion;
		
		private System.Nullable<double> _dustCooeficiency;
		
		private System.Nullable<double> _dustCoeficiencyVersion;
		
		private System.Nullable<double> _wasteCooeficiency;
		
		private System.Nullable<double> _wasteCoeficiencyVersion;
		
		private System.Nullable<ProductType> _productType;
		
		private System.Nullable<BatchStatus> _batchStatus;
		
		private Microsoft.SharePoint.Linq.EntityRef<BatchLib> _batchLibraryLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<CutfillerCoefficient> _cutfillerCoefficientLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<SKUCommonPart> _sKULookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<Usage> _usageLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<SHMenthol> _sHMentholLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<Dust> _dustLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<Waste> _wasteLookup;
		
		private Microsoft.SharePoint.Linq.EntitySet<InvoiceContent> _invoiceContent;
		
		private Microsoft.SharePoint.Linq.EntitySet<Material> _material;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Batch() {
			this._batchLibraryLookup = new Microsoft.SharePoint.Linq.EntityRef<BatchLib>();
			this._batchLibraryLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BatchLib>>(this.OnBatchLibraryLookupSync);
			this._batchLibraryLookup.OnChanged += new System.EventHandler(this.OnBatchLibraryLookupChanged);
			this._batchLibraryLookup.OnChanging += new System.EventHandler(this.OnBatchLibraryLookupChanging);
			this._cutfillerCoefficientLookup = new Microsoft.SharePoint.Linq.EntityRef<CutfillerCoefficient>();
			this._cutfillerCoefficientLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CutfillerCoefficient>>(this.OnCutfillerCoefficientLookupSync);
			this._cutfillerCoefficientLookup.OnChanged += new System.EventHandler(this.OnCutfillerCoefficientLookupChanged);
			this._cutfillerCoefficientLookup.OnChanging += new System.EventHandler(this.OnCutfillerCoefficientLookupChanging);
			this._sKULookup = new Microsoft.SharePoint.Linq.EntityRef<SKUCommonPart>();
			this._sKULookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SKUCommonPart>>(this.OnSKULookupSync);
			this._sKULookup.OnChanged += new System.EventHandler(this.OnSKULookupChanged);
			this._sKULookup.OnChanging += new System.EventHandler(this.OnSKULookupChanging);
			this._usageLookup = new Microsoft.SharePoint.Linq.EntityRef<Usage>();
			this._usageLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Usage>>(this.OnUsageLookupSync);
			this._usageLookup.OnChanged += new System.EventHandler(this.OnUsageLookupChanged);
			this._usageLookup.OnChanging += new System.EventHandler(this.OnUsageLookupChanging);
			this._sHMentholLookup = new Microsoft.SharePoint.Linq.EntityRef<SHMenthol>();
			this._sHMentholLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SHMenthol>>(this.OnSHMentholLookupSync);
			this._sHMentholLookup.OnChanged += new System.EventHandler(this.OnSHMentholLookupChanged);
			this._sHMentholLookup.OnChanging += new System.EventHandler(this.OnSHMentholLookupChanging);
			this._dustLookup = new Microsoft.SharePoint.Linq.EntityRef<Dust>();
			this._dustLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dust>>(this.OnDustLookupSync);
			this._dustLookup.OnChanged += new System.EventHandler(this.OnDustLookupChanged);
			this._dustLookup.OnChanging += new System.EventHandler(this.OnDustLookupChanging);
			this._wasteLookup = new Microsoft.SharePoint.Linq.EntityRef<Waste>();
			this._wasteLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Waste>>(this.OnWasteLookupSync);
			this._wasteLookup.OnChanged += new System.EventHandler(this.OnWasteLookupChanged);
			this._wasteLookup.OnChanging += new System.EventHandler(this.OnWasteLookupChanging);
			this._invoiceContent = new Microsoft.SharePoint.Linq.EntitySet<InvoiceContent>();
			this._invoiceContent.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceContent>>(this.OnInvoiceContentSync);
			this._invoiceContent.OnChanged += new System.EventHandler(this.OnInvoiceContentChanged);
			this._invoiceContent.OnChanging += new System.EventHandler(this.OnInvoiceContentChanging);
			this._material = new Microsoft.SharePoint.Linq.EntitySet<Material>();
			this._material.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Material>>(this.OnMaterialSync);
			this._material.OnChanged += new System.EventHandler(this.OnMaterialChanged);
			this._material.OnChanging += new System.EventHandler(this.OnMaterialChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Batch
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch0", FieldType="Text")]
		public string Batch0 {
			get {
				return this._batch0;
			}
			set {
				if ((value != this._batch0)) {
					this.OnPropertyChanging("Batch0", this._batch0);
					this._batch0 = value;
					this.OnPropertyChanged("Batch0");
				}
			}
		}
		
		/// <summary>
		/// SKU
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		/// <summary>
		/// FG Quantity
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FGQuantity", Storage="_fGQuantityKUKg", FieldType="Number")]
		public System.Nullable<double> FGQuantityKUKg {
			get {
				return this._fGQuantityKUKg;
			}
			set {
				if ((value != this._fGQuantityKUKg)) {
					this.OnPropertyChanging("FGQuantityKUKg", this._fGQuantityKUKg);
					this._fGQuantityKUKg = value;
					this.OnPropertyChanged("FGQuantityKUKg");
				}
			}
		}
		
		/// <summary>
		/// FG Quantity (previous)
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FGQuantityPrevious", Storage="_fGQuantityPrevious", FieldType="Number")]
		public System.Nullable<double> FGQuantityPrevious {
			get {
				return this._fGQuantityPrevious;
			}
			set {
				if ((value != this._fGQuantityPrevious)) {
					this.OnPropertyChanging("FGQuantityPrevious", this._fGQuantityPrevious);
					this._fGQuantityPrevious = value;
					this.OnPropertyChanged("FGQuantityPrevious");
				}
			}
		}
		
		/// <summary>
		/// FG Quantity (blocked)
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FGQuantityBlocked", Storage="_fGQuantityBlocked", FieldType="Number")]
		public System.Nullable<double> FGQuantityBlocked {
			get {
				return this._fGQuantityBlocked;
			}
			set {
				if ((value != this._fGQuantityBlocked)) {
					this.OnPropertyChanging("FGQuantityBlocked", this._fGQuantityBlocked);
					this._fGQuantityBlocked = value;
					this.OnPropertyChanged("FGQuantityBlocked");
				}
			}
		}
		
		/// <summary>
		/// FG Quantity (available)
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FGQuantityAvailable", Storage="_fGQuantityAvailable", FieldType="Number")]
		public System.Nullable<double> FGQuantityAvailable {
			get {
				return this._fGQuantityAvailable;
			}
			set {
				if ((value != this._fGQuantityAvailable)) {
					this.OnPropertyChanging("FGQuantityAvailable", this._fGQuantityAvailable);
					this._fGQuantityAvailable = value;
					this.OnPropertyChanged("FGQuantityAvailable");
				}
			}
		}
		
		/// <summary>
		/// Material Quantity
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MaterialQuantity", Storage="_materialQuantity", FieldType="Number")]
		public System.Nullable<double> MaterialQuantity {
			get {
				return this._materialQuantity;
			}
			set {
				if ((value != this._materialQuantity)) {
					this.OnPropertyChanging("MaterialQuantity", this._materialQuantity);
					this._materialQuantity = value;
					this.OnPropertyChanged("MaterialQuantity");
				}
			}
		}
		
		/// <summary>
		/// Material Quantity Previous
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MaterialQuantityPrevious", Storage="_materialQuantityPrevious", FieldType="Number")]
		public System.Nullable<double> MaterialQuantityPrevious {
			get {
				return this._materialQuantityPrevious;
			}
			set {
				if ((value != this._materialQuantityPrevious)) {
					this.OnPropertyChanging("MaterialQuantityPrevious", this._materialQuantityPrevious);
					this._materialQuantityPrevious = value;
					this.OnPropertyChanged("MaterialQuantityPrevious");
				}
			}
		}
		
		/// <summary>
		/// Calculated overuse
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CalculatedOveruse", Storage="_calculatedOveruse", FieldType="Number")]
		public System.Nullable<double> CalculatedOveruse {
			get {
				return this._calculatedOveruse;
			}
			set {
				if ((value != this._calculatedOveruse)) {
					this.OnPropertyChanging("CalculatedOveruse", this._calculatedOveruse);
					this._calculatedOveruse = value;
					this.OnPropertyChanged("CalculatedOveruse");
				}
			}
		}
		
		/// <summary>
		/// Overuse
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Overuse", Storage="_overuseKg", FieldType="Number")]
		public System.Nullable<double> OveruseKg {
			get {
				return this._overuseKg;
			}
			set {
				if ((value != this._overuseKg)) {
					this.OnPropertyChanging("OveruseKg", this._overuseKg);
					this._overuseKg = value;
					this.OnPropertyChanged("OveruseKg");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous-kolumna'overuse')*xls/Dictionaries/dust
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dust", Storage="_dustKg", FieldType="Number")]
		public System.Nullable<double> DustKg {
			get {
				return this._dustKg;
			}
			set {
				if ((value != this._dustKg)) {
					this.OnPropertyChanging("DustKg", this._dustKg);
					this._dustKg = value;
					this.OnPropertyChanged("DustKg");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous-kolumna'overuse')*xls/Dictionaries/waste
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Waste", Storage="_wasteKg", FieldType="Number")]
		public System.Nullable<double> WasteKg {
			get {
				return this._wasteKg;
			}
			set {
				if ((value != this._wasteKg)) {
					this.OnPropertyChanging("WasteKg", this._wasteKg);
					this._wasteKg = value;
					this.OnPropertyChanged("WasteKg");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous)-kolumna'overuse'-kolumna'dust'-kolumna'waste'-kolumna'shmenthol'
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Tobacco", Storage="_tobaccoKg", FieldType="Number")]
		public System.Nullable<double> TobaccoKg {
			get {
				return this._tobaccoKg;
			}
			set {
				if ((value != this._tobaccoKg)) {
					this.OnPropertyChanging("TobaccoKg", this._tobaccoKg);
					this._tobaccoKg = value;
					this.OnPropertyChanged("TobaccoKg");
				}
			}
		}
		
		/// <summary>
		/// (Material Quantity-Material Quantity Previous-kolumna'overuse')*xls/Dictionaries/SHMenthol
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHMenthol", Storage="_sHMentholKg", FieldType="Number")]
		public System.Nullable<double> SHMentholKg {
			get {
				return this._sHMentholKg;
			}
			set {
				if ((value != this._sHMentholKg)) {
					this.OnPropertyChanging("SHMentholKg", this._sHMentholKg);
					this._sHMentholKg = value;
					this.OnPropertyChanged("SHMentholKg");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchSHCooeficiency", Storage="_sHCooeficiency", FieldType="Number")]
		public System.Nullable<double> SHCooeficiency {
			get {
				return this._sHCooeficiency;
			}
			set {
				if ((value != this._sHCooeficiency)) {
					this.OnPropertyChanging("SHCooeficiency", this._sHCooeficiency);
					this._sHCooeficiency = value;
					this.OnPropertyChanged("SHCooeficiency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHCooeficiencyVersion", Storage="_sHCoeficiencyVersion", FieldType="Number")]
		public System.Nullable<double> SHCoeficiencyVersion {
			get {
				return this._sHCoeficiencyVersion;
			}
			set {
				if ((value != this._sHCoeficiencyVersion)) {
					this.OnPropertyChanging("SHCoeficiencyVersion", this._sHCoeficiencyVersion);
					this._sHCoeficiencyVersion = value;
					this.OnPropertyChanged("SHCoeficiencyVersion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchDustCooeficiency", Storage="_dustCooeficiency", FieldType="Number")]
		public System.Nullable<double> DustCooeficiency {
			get {
				return this._dustCooeficiency;
			}
			set {
				if ((value != this._dustCooeficiency)) {
					this.OnPropertyChanging("DustCooeficiency", this._dustCooeficiency);
					this._dustCooeficiency = value;
					this.OnPropertyChanged("DustCooeficiency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DustCooeficiencyVersion", Storage="_dustCoeficiencyVersion", FieldType="Number")]
		public System.Nullable<double> DustCoeficiencyVersion {
			get {
				return this._dustCoeficiencyVersion;
			}
			set {
				if ((value != this._dustCoeficiencyVersion)) {
					this.OnPropertyChanging("DustCoeficiencyVersion", this._dustCoeficiencyVersion);
					this._dustCoeficiencyVersion = value;
					this.OnPropertyChanged("DustCoeficiencyVersion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchWasteCooeficiency", Storage="_wasteCooeficiency", FieldType="Number")]
		public System.Nullable<double> WasteCooeficiency {
			get {
				return this._wasteCooeficiency;
			}
			set {
				if ((value != this._wasteCooeficiency)) {
					this.OnPropertyChanging("WasteCooeficiency", this._wasteCooeficiency);
					this._wasteCooeficiency = value;
					this.OnPropertyChanged("WasteCooeficiency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WasteCooeficiencyVersion", Storage="_wasteCoeficiencyVersion", FieldType="Number")]
		public System.Nullable<double> WasteCoeficiencyVersion {
			get {
				return this._wasteCoeficiencyVersion;
			}
			set {
				if ((value != this._wasteCoeficiencyVersion)) {
					this.OnPropertyChanging("WasteCoeficiencyVersion", this._wasteCoeficiencyVersion);
					this._wasteCoeficiencyVersion = value;
					this.OnPropertyChanged("WasteCoeficiencyVersion");
				}
			}
		}
		
		/// <summary>
		/// Material Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		/// <summary>
		/// BatchS tatus
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchStatus", Storage="_batchStatus", FieldType="Choice")]
		public System.Nullable<BatchStatus> BatchStatus {
			get {
				return this._batchStatus;
			}
			set {
				if ((value != this._batchStatus)) {
					this.OnPropertyChanging("BatchStatus", this._batchStatus);
					this._batchStatus = value;
					this.OnPropertyChanged("BatchStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BatchLibraryIndex", Storage="_batchLibraryLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Batch Library")]
		public BatchLib BatchLibraryLookup {
			get {
				return this._batchLibraryLookup.GetEntity();
			}
			set {
				this._batchLibraryLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CutfillerCoefficientIndex", Storage="_cutfillerCoefficientLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Cutfiller Coefficient")]
		public CutfillerCoefficient CutfillerCoefficientLookup {
			get {
				return this._cutfillerCoefficientLookup.GetEntity();
			}
			set {
				this._cutfillerCoefficientLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SKUIndex", Storage="_sKULookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SKU")]
		public SKUCommonPart SKULookup {
			get {
				return this._sKULookup.GetEntity();
			}
			set {
				this._sKULookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="UsageIndex", Storage="_usageLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Usage")]
		public Usage UsageLookup {
			get {
				return this._usageLookup.GetEntity();
			}
			set {
				this._usageLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SHMentholIndex", Storage="_sHMentholLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SHMenthol")]
		public SHMenthol SHMentholLookup {
			get {
				return this._sHMentholLookup.GetEntity();
			}
			set {
				this._sHMentholLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DustIndex", Storage="_dustLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Dust")]
		public Dust DustLookup {
			get {
				return this._dustLookup.GetEntity();
			}
			set {
				this._dustLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="WasteIndex", Storage="_wasteLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Waste")]
		public Waste WasteLookup {
			get {
				return this._wasteLookup.GetEntity();
			}
			set {
				this._wasteLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="InvoiceContent2BatchIndex", Storage="_invoiceContent", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Invoice Content")]
		public Microsoft.SharePoint.Linq.EntitySet<InvoiceContent> InvoiceContent {
			get {
				return this._invoiceContent;
			}
			set {
				this._invoiceContent.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Material2BatchIndex", Storage="_material", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Material")]
		public Microsoft.SharePoint.Linq.EntitySet<Material> Material {
			get {
				return this._material;
			}
			set {
				this._material.Assign(value);
			}
		}
		
		private void OnBatchLibraryLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BatchLibraryLookup", this._batchLibraryLookup.Clone());
		}
		
		private void OnBatchLibraryLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BatchLibraryLookup");
		}
		
		private void OnBatchLibraryLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BatchLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Batch.Add(this);
			}
			else {
				e.Item.Batch.Remove(this);
			}
		}
		
		private void OnCutfillerCoefficientLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CutfillerCoefficientLookup", this._cutfillerCoefficientLookup.Clone());
		}
		
		private void OnCutfillerCoefficientLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CutfillerCoefficientLookup");
		}
		
		private void OnCutfillerCoefficientLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CutfillerCoefficient> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Batch.Add(this);
			}
			else {
				e.Item.Batch.Remove(this);
			}
		}
		
		private void OnSKULookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SKULookup", this._sKULookup.Clone());
		}
		
		private void OnSKULookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SKULookup");
		}
		
		private void OnSKULookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SKUCommonPart> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Batch.Add(this);
			}
			else {
				e.Item.Batch.Remove(this);
			}
		}
		
		private void OnUsageLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("UsageLookup", this._usageLookup.Clone());
		}
		
		private void OnUsageLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("UsageLookup");
		}
		
		private void OnUsageLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Usage> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Batch.Add(this);
			}
			else {
				e.Item.Batch.Remove(this);
			}
		}
		
		private void OnSHMentholLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SHMentholLookup", this._sHMentholLookup.Clone());
		}
		
		private void OnSHMentholLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SHMentholLookup");
		}
		
		private void OnSHMentholLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SHMenthol> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Batch.Add(this);
			}
			else {
				e.Item.Batch.Remove(this);
			}
		}
		
		private void OnDustLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("DustLookup", this._dustLookup.Clone());
		}
		
		private void OnDustLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("DustLookup");
		}
		
		private void OnDustLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dust> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Batch.Add(this);
			}
			else {
				e.Item.Batch.Remove(this);
			}
		}
		
		private void OnWasteLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("WasteLookup", this._wasteLookup.Clone());
		}
		
		private void OnWasteLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("WasteLookup");
		}
		
		private void OnWasteLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Waste> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Batch.Add(this);
			}
			else {
				e.Item.Batch.Remove(this);
			}
		}
		
		private void OnInvoiceContentChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("InvoiceContent", this._invoiceContent.Clone());
		}
		
		private void OnInvoiceContentChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("InvoiceContent");
		}
		
		private void OnInvoiceContentSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceContent> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.BatchID = this;
			}
			else {
				e.Item.BatchID = null;
			}
		}
		
		private void OnMaterialChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Material", this._material.Clone());
		}
		
		private void OnMaterialChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Material");
		}
		
		private void OnMaterialSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Material> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.BatchLookup = this;
			}
			else {
				e.Item.BatchLookup = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Clearence", Id="0x010024D8E558C8B92D4094E6420B75D7AEDD")]
	public partial class Clearence : Element {
		
		private string _documentNo;
		
		private string _referenceNumber;
		
		private System.Nullable<bool> _status;
		
		private string _procedureCode;
		
		private Microsoft.SharePoint.Linq.EntityRef<Dokument> _sADConsignmentLibraryLookup;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADDocumentType> _sADDocumentType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Clearence() {
			this._sADConsignmentLibraryLookup = new Microsoft.SharePoint.Linq.EntityRef<Dokument>();
			this._sADConsignmentLibraryLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument>>(this.OnSADConsignmentLibraryLookupSync);
			this._sADConsignmentLibraryLookup.OnChanged += new System.EventHandler(this.OnSADConsignmentLibraryLookupChanged);
			this._sADConsignmentLibraryLookup.OnChanging += new System.EventHandler(this.OnSADConsignmentLibraryLookupChanging);
			this._sADDocumentType = new Microsoft.SharePoint.Linq.EntitySet<SADDocumentType>();
			this._sADDocumentType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType>>(this.OnSADDocumentTypeSync);
			this._sADDocumentType.OnChanged += new System.EventHandler(this.OnSADDocumentTypeChanged);
			this._sADDocumentType.OnChanging += new System.EventHandler(this.OnSADDocumentTypeChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// DocumentNo
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNo", Storage="_documentNo", FieldType="Text")]
		public string DocumentNo {
			get {
				return this._documentNo;
			}
			set {
				if ((value != this._documentNo)) {
					this.OnPropertyChanging("DocumentNo", this._documentNo);
					this._documentNo = value;
					this.OnPropertyChanged("DocumentNo");
				}
			}
		}
		
		/// <summary>
		/// SAD Document Reference Number - box 7.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReferenceNumber", Storage="_referenceNumber", FieldType="Text")]
		public string ReferenceNumber {
			get {
				return this._referenceNumber;
			}
			set {
				if ((value != this._referenceNumber)) {
					this.OnPropertyChanging("ReferenceNumber", this._referenceNumber);
					this._referenceNumber = value;
					this.OnPropertyChanged("ReferenceNumber");
				}
			}
		}
		
		/// <summary>
		/// Status
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_status", FieldType="Boolean")]
		public System.Nullable<bool> Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProcedureCode", Storage="_procedureCode", FieldType="Text")]
		public string ProcedureCode {
			get {
				return this._procedureCode;
			}
			set {
				if ((value != this._procedureCode)) {
					this.OnPropertyChanging("ProcedureCode", this._procedureCode);
					this._procedureCode = value;
					this.OnPropertyChanged("ProcedureCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADConsignmentLibraryIndex", Storage="_sADConsignmentLibraryLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Consignment Library")]
		public Dokument SADConsignmentLibraryLookup {
			get {
				return this._sADConsignmentLibraryLookup.GetEntity();
			}
			set {
				this._sADConsignmentLibraryLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocument2Clearence", Storage="_sADDocumentType", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Document")]
		public Microsoft.SharePoint.Linq.EntitySet<SADDocumentType> SADDocumentType {
			get {
				return this._sADDocumentType;
			}
			set {
				this._sADDocumentType.Assign(value);
			}
		}
		
		private void OnSADConsignmentLibraryLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADConsignmentLibraryLookup", this._sADConsignmentLibraryLookup.Clone());
		}
		
		private void OnSADConsignmentLibraryLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADConsignmentLibraryLookup");
		}
		
		private void OnSADConsignmentLibraryLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument> e) {
		}
		
		private void OnSADDocumentTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDocumentType", this._sADDocumentType.Clone());
		}
		
		private void OnSADDocumentTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDocumentType");
		}
		
		private void OnSADDocumentTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ClearenceID = this;
			}
			else {
				e.Item.ClearenceID = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Consent", Id="0x0100A7FE6CFCCADBB7409C1F0FA102B9C573")]
	public partial class Consent : Element {
		
		private System.Nullable<System.DateTime> _validFromDate;
		
		private System.Nullable<System.DateTime> _validToDate;
		
		private System.Nullable<double> _productivityRateMin;
		
		private System.Nullable<double> _productivityRateMax;
		
		private System.Nullable<double> _consentPeriod;
		
		private Microsoft.SharePoint.Linq.EntitySet<IPR> _iPR;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Consent() {
			this._iPR = new Microsoft.SharePoint.Linq.EntitySet<IPR>();
			this._iPR.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR>>(this.OnIPRSync);
			this._iPR.OnChanged += new System.EventHandler(this.OnIPRChanged);
			this._iPR.OnChanging += new System.EventHandler(this.OnIPRChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValidFromDate", Storage="_validFromDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ValidFromDate {
			get {
				return this._validFromDate;
			}
			set {
				if ((value != this._validFromDate)) {
					this.OnPropertyChanging("ValidFromDate", this._validFromDate);
					this._validFromDate = value;
					this.OnPropertyChanged("ValidFromDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ValidToDate", Storage="_validToDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ValidToDate {
			get {
				return this._validToDate;
			}
			set {
				if ((value != this._validToDate)) {
					this.OnPropertyChanging("ValidToDate", this._validToDate);
					this._validToDate = value;
					this.OnPropertyChanged("ValidToDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductivityRateMin", Storage="_productivityRateMin", FieldType="Number")]
		public System.Nullable<double> ProductivityRateMin {
			get {
				return this._productivityRateMin;
			}
			set {
				if ((value != this._productivityRateMin)) {
					this.OnPropertyChanging("ProductivityRateMin", this._productivityRateMin);
					this._productivityRateMin = value;
					this.OnPropertyChanged("ProductivityRateMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductivityRateMax", Storage="_productivityRateMax", FieldType="Number")]
		public System.Nullable<double> ProductivityRateMax {
			get {
				return this._productivityRateMax;
			}
			set {
				if ((value != this._productivityRateMax)) {
					this.OnPropertyChanging("ProductivityRateMax", this._productivityRateMax);
					this._productivityRateMax = value;
					this.OnPropertyChanged("ProductivityRateMax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ConsentPeriod", Storage="_consentPeriod", FieldType="Number")]
		public System.Nullable<double> ConsentPeriod {
			get {
				return this._consentPeriod;
			}
			set {
				if ((value != this._consentPeriod)) {
					this.OnPropertyChanging("ConsentPeriod", this._consentPeriod);
					this._consentPeriod = value;
					this.OnPropertyChanged("ConsentPeriod");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPR2ConsentTitle", Storage="_iPR", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="IPR")]
		public Microsoft.SharePoint.Linq.EntitySet<IPR> IPR {
			get {
				return this._iPR;
			}
			set {
				this._iPR.Assign(value);
			}
		}
		
		private void OnIPRChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPR", this._iPR.Clone());
		}
		
		private void OnIPRChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPR");
		}
		
		private void OnIPRSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ConsentNo = this;
			}
			else {
				e.Item.ConsentNo = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CustomsUnion", Id="0x0100700A5727DB0A43069A5E0A479E3B80A7")]
	public partial class CustomsUnion : Element {
		
		private string _eUPrimeMarket;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CustomsUnion() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EUPrimeMarket", Storage="_eUPrimeMarket", FieldType="Text")]
		public string EUPrimeMarket {
			get {
				return this._eUPrimeMarket;
			}
			set {
				if ((value != this._eUPrimeMarket)) {
					this.OnPropertyChanging("EUPrimeMarket", this._eUPrimeMarket);
					this._eUPrimeMarket = value;
					this.OnPropertyChanged("EUPrimeMarket");
				}
			}
		}
	}
	
	/// <summary>
	/// CutfillerCoefficient
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CutfillerCoefficient", Id="0x01001D2AFAE51342C546A5F1677134421FD5")]
	public partial class CutfillerCoefficient : Element {
		
		private System.Nullable<double> _cFTProductivityRateMin;
		
		private System.Nullable<double> _cFTProductivityRateMax;
		
		private System.Nullable<double> _cFTProductivityNormMin;
		
		private System.Nullable<double> _cFTProductivityNormMax;
		
		private Microsoft.SharePoint.Linq.EntitySet<Batch> _batch;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CutfillerCoefficient() {
			this._batch = new Microsoft.SharePoint.Linq.EntitySet<Batch>();
			this._batch.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchSync);
			this._batch.OnChanged += new System.EventHandler(this.OnBatchChanged);
			this._batch.OnChanging += new System.EventHandler(this.OnBatchChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityRateMin", Storage="_cFTProductivityRateMin", FieldType="Number")]
		public System.Nullable<double> CFTProductivityRateMin {
			get {
				return this._cFTProductivityRateMin;
			}
			set {
				if ((value != this._cFTProductivityRateMin)) {
					this.OnPropertyChanging("CFTProductivityRateMin", this._cFTProductivityRateMin);
					this._cFTProductivityRateMin = value;
					this.OnPropertyChanged("CFTProductivityRateMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityRateMax", Storage="_cFTProductivityRateMax", FieldType="Number")]
		public System.Nullable<double> CFTProductivityRateMax {
			get {
				return this._cFTProductivityRateMax;
			}
			set {
				if ((value != this._cFTProductivityRateMax)) {
					this.OnPropertyChanging("CFTProductivityRateMax", this._cFTProductivityRateMax);
					this._cFTProductivityRateMax = value;
					this.OnPropertyChanged("CFTProductivityRateMax");
				}
			}
		}
		
		/// <summary>
		/// CFTProductivityNormMin
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityNormMin", Storage="_cFTProductivityNormMin", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> CFTProductivityNormMin {
			get {
				return this._cFTProductivityNormMin;
			}
			set {
				if ((value != this._cFTProductivityNormMin)) {
					this.OnPropertyChanging("CFTProductivityNormMin", this._cFTProductivityNormMin);
					this._cFTProductivityNormMin = value;
					this.OnPropertyChanged("CFTProductivityNormMin");
				}
			}
		}
		
		/// <summary>
		/// CFTProductivityNormMax
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CFTProductivityNormMax", Storage="_cFTProductivityNormMax", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> CFTProductivityNormMax {
			get {
				return this._cFTProductivityNormMax;
			}
			set {
				if ((value != this._cFTProductivityNormMax)) {
					this.OnPropertyChanging("CFTProductivityNormMax", this._cFTProductivityNormMax);
					this._cFTProductivityNormMax = value;
					this.OnPropertyChanged("CFTProductivityNormMax");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości CutfillerCoefficient.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości CutfillerCoefficient.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CutfillerCoefficientIndex", Storage="_batch", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Batch")]
		public Microsoft.SharePoint.Linq.EntitySet<Batch> Batch {
			get {
				return this._batch;
			}
			set {
				this._batch.Assign(value);
			}
		}
		
		private void OnBatchChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Batch", this._batch.Clone());
		}
		
		private void OnBatchChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Batch");
		}
		
		private void OnBatchSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CutfillerCoefficientLookup = this;
			}
			else {
				e.Item.CutfillerCoefficientLookup = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Disposal", Id="0x01000FAE27B30BF7FC46886DA88A4D425DEF")]
	public partial class Disposal : Element {
		
		private System.Nullable<double> _no;
		
		private string _sADDocumentNo;
		
		private System.Nullable<System.DateTime> _sADDate;
		
		private string _invoiceNo;
		
		private string _iPRDocumentNo;
		
		private System.Nullable<double> _settledQuantity;
		
		private System.Nullable<double> _dutyPerSettledAmount;
		
		private System.Nullable<double> _vATPerSettledAmount;
		
		private System.Nullable<double> _dutyAndVAT;
		
		private System.Nullable<double> _tobaccoValue;
		
		private System.Nullable<double> _remainingQuantity;
		
		private string _customsProcedure;
		
		private System.Nullable<DisposalStatus> _disposalStatus;
		
		private System.Nullable<CustomsStatus> _customsStatus;
		
		private System.Nullable<ClearingType> _clearingType;
		
		private Microsoft.SharePoint.Linq.EntityRef<PCNCode> _compensationGood;
		
		private Microsoft.SharePoint.Linq.EntityRef<Clearence> _clearenceListLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<JSOXCustomsSummary> _jSOXCustomsSummaryListLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<Batch> _batchLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<IPR> _iPRID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Disposal() {
			this._compensationGood = new Microsoft.SharePoint.Linq.EntityRef<PCNCode>();
			this._compensationGood.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode>>(this.OnCompensationGoodSync);
			this._compensationGood.OnChanged += new System.EventHandler(this.OnCompensationGoodChanged);
			this._compensationGood.OnChanging += new System.EventHandler(this.OnCompensationGoodChanging);
			this._clearenceListLookup = new Microsoft.SharePoint.Linq.EntityRef<Clearence>();
			this._clearenceListLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnClearenceListLookupSync);
			this._clearenceListLookup.OnChanged += new System.EventHandler(this.OnClearenceListLookupChanged);
			this._clearenceListLookup.OnChanging += new System.EventHandler(this.OnClearenceListLookupChanging);
			this._jSOXCustomsSummaryListLookup = new Microsoft.SharePoint.Linq.EntityRef<JSOXCustomsSummary>();
			this._jSOXCustomsSummaryListLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXCustomsSummary>>(this.OnJSOXCustomsSummaryListLookupSync);
			this._jSOXCustomsSummaryListLookup.OnChanged += new System.EventHandler(this.OnJSOXCustomsSummaryListLookupChanged);
			this._jSOXCustomsSummaryListLookup.OnChanging += new System.EventHandler(this.OnJSOXCustomsSummaryListLookupChanging);
			this._batchLookup = new Microsoft.SharePoint.Linq.EntityRef<Batch>();
			this._batchLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchLookupSync);
			this._batchLookup.OnChanged += new System.EventHandler(this.OnBatchLookupChanged);
			this._batchLookup.OnChanging += new System.EventHandler(this.OnBatchLookupChanging);
			this._iPRID = new Microsoft.SharePoint.Linq.EntityRef<IPR>();
			this._iPRID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR>>(this.OnIPRIDSync);
			this._iPRID.OnChanged += new System.EventHandler(this.OnIPRIDChanged);
			this._iPRID.OnChanging += new System.EventHandler(this.OnIPRIDChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// No.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="No", Storage="_no", FieldType="Number")]
		public System.Nullable<double> No {
			get {
				return this._no;
			}
			set {
				if ((value != this._no)) {
					this.OnPropertyChanging("No", this._no);
					this._no = value;
					this.OnPropertyChanged("No");
				}
			}
		}
		
		/// <summary>
		/// SAD Document No.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDocumentNo", Storage="_sADDocumentNo", FieldType="Text")]
		public string SADDocumentNo {
			get {
				return this._sADDocumentNo;
			}
			set {
				if ((value != this._sADDocumentNo)) {
					this.OnPropertyChanging("SADDocumentNo", this._sADDocumentNo);
					this._sADDocumentNo = value;
					this.OnPropertyChanged("SADDocumentNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDate", Storage="_sADDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> SADDate {
			get {
				return this._sADDate;
			}
			set {
				if ((value != this._sADDate)) {
					this.OnPropertyChanging("SADDate", this._sADDate);
					this._sADDate = value;
					this.OnPropertyChanged("SADDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceNo", Storage="_invoiceNo", FieldType="Text")]
		public string InvoiceNo {
			get {
				return this._invoiceNo;
			}
			set {
				if ((value != this._invoiceNo)) {
					this.OnPropertyChanging("InvoiceNo", this._invoiceNo);
					this._invoiceNo = value;
					this.OnPropertyChanged("InvoiceNo");
				}
			}
		}
		
		/// <summary>
		/// IPR Document No.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRDocumentNo", Storage="_iPRDocumentNo", FieldType="Text")]
		public string IPRDocumentNo {
			get {
				return this._iPRDocumentNo;
			}
			set {
				if ((value != this._iPRDocumentNo)) {
					this.OnPropertyChanging("IPRDocumentNo", this._iPRDocumentNo);
					this._iPRDocumentNo = value;
					this.OnPropertyChanged("IPRDocumentNo");
				}
			}
		}
		
		/// <summary>
		/// Settled quantity
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SettledQuantity", Storage="_settledQuantity", FieldType="Number")]
		public System.Nullable<double> SettledQuantity {
			get {
				return this._settledQuantity;
			}
			set {
				if ((value != this._settledQuantity)) {
					this.OnPropertyChanging("SettledQuantity", this._settledQuantity);
					this._settledQuantity = value;
					this.OnPropertyChanged("SettledQuantity");
				}
			}
		}
		
		/// <summary>
		/// Duty per settled amount
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyPerSettledAmount", Storage="_dutyPerSettledAmount", FieldType="Number")]
		public System.Nullable<double> DutyPerSettledAmount {
			get {
				return this._dutyPerSettledAmount;
			}
			set {
				if ((value != this._dutyPerSettledAmount)) {
					this.OnPropertyChanging("DutyPerSettledAmount", this._dutyPerSettledAmount);
					this._dutyPerSettledAmount = value;
					this.OnPropertyChanged("DutyPerSettledAmount");
				}
			}
		}
		
		/// <summary>
		/// VAT per settled amount
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VATPerSettledAmount", Storage="_vATPerSettledAmount", FieldType="Number")]
		public System.Nullable<double> VATPerSettledAmount {
			get {
				return this._vATPerSettledAmount;
			}
			set {
				if ((value != this._vATPerSettledAmount)) {
					this.OnPropertyChanging("VATPerSettledAmount", this._vATPerSettledAmount);
					this._vATPerSettledAmount = value;
					this.OnPropertyChanged("VATPerSettledAmount");
				}
			}
		}
		
		/// <summary>
		/// Duty and VAT
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyAndVAT", Storage="_dutyAndVAT", FieldType="Number")]
		public System.Nullable<double> DutyAndVAT {
			get {
				return this._dutyAndVAT;
			}
			set {
				if ((value != this._dutyAndVAT)) {
					this.OnPropertyChanging("DutyAndVAT", this._dutyAndVAT);
					this._dutyAndVAT = value;
					this.OnPropertyChanged("DutyAndVAT");
				}
			}
		}
		
		/// <summary>
		/// Tobacco Value
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoValue", Storage="_tobaccoValue", FieldType="Number")]
		public System.Nullable<double> TobaccoValue {
			get {
				return this._tobaccoValue;
			}
			set {
				if ((value != this._tobaccoValue)) {
					this.OnPropertyChanging("TobaccoValue", this._tobaccoValue);
					this._tobaccoValue = value;
					this.OnPropertyChanged("TobaccoValue");
				}
			}
		}
		
		/// <summary>
		/// Remaining quantity
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RemainingQuantity", Storage="_remainingQuantity", FieldType="Number")]
		public System.Nullable<double> RemainingQuantity {
			get {
				return this._remainingQuantity;
			}
			set {
				if ((value != this._remainingQuantity)) {
					this.OnPropertyChanging("RemainingQuantity", this._remainingQuantity);
					this._remainingQuantity = value;
					this.OnPropertyChanged("RemainingQuantity");
				}
			}
		}
		
		/// <summary>
		/// CustomsProcedure
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsProcedure", Storage="_customsProcedure", FieldType="Text")]
		public string CustomsProcedure {
			get {
				return this._customsProcedure;
			}
			set {
				if ((value != this._customsProcedure)) {
					this.OnPropertyChanging("CustomsProcedure", this._customsProcedure);
					this._customsProcedure = value;
					this.OnPropertyChanged("CustomsProcedure");
				}
			}
		}
		
		/// <summary>
		/// Disposal Status
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DisposalStatus", Storage="_disposalStatus", FieldType="Choice")]
		public System.Nullable<DisposalStatus> DisposalStatus {
			get {
				return this._disposalStatus;
			}
			set {
				if ((value != this._disposalStatus)) {
					this.OnPropertyChanging("DisposalStatus", this._disposalStatus);
					this._disposalStatus = value;
					this.OnPropertyChanged("DisposalStatus");
				}
			}
		}
		
		/// <summary>
		/// Customs Status
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsStatus", Storage="_customsStatus", FieldType="Choice")]
		public System.Nullable<CustomsStatus> CustomsStatus {
			get {
				return this._customsStatus;
			}
			set {
				if ((value != this._customsStatus)) {
					this.OnPropertyChanging("CustomsStatus", this._customsStatus);
					this._customsStatus = value;
					this.OnPropertyChanged("CustomsStatus");
				}
			}
		}
		
		/// <summary>
		/// Winding-up
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ClearingType", Storage="_clearingType", FieldType="Choice")]
		public System.Nullable<ClearingType> ClearingType {
			get {
				return this._clearingType;
			}
			set {
				if ((value != this._clearingType)) {
					this.OnPropertyChanging("ClearingType", this._clearingType);
					this._clearingType = value;
					this.OnPropertyChanged("ClearingType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2PCNCompensationGood", Storage="_compensationGood", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="PCN Code")]
		public PCNCode CompensationGood {
			get {
				return this._compensationGood.GetEntity();
			}
			set {
				this._compensationGood.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ClearenceIndex", Storage="_clearenceListLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Clearence")]
		public Clearence ClearenceListLookup {
			get {
				return this._clearenceListLookup.GetEntity();
			}
			set {
				this._clearenceListLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="JSOXCustomsSummaryIndex", Storage="_jSOXCustomsSummaryListLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JSOX Customs Summary")]
		public JSOXCustomsSummary JSOXCustomsSummaryListLookup {
			get {
				return this._jSOXCustomsSummaryListLookup.GetEntity();
			}
			set {
				this._jSOXCustomsSummaryListLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BatchIndex", Storage="_batchLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Batch")]
		public Batch BatchLookup {
			get {
				return this._batchLookup.GetEntity();
			}
			set {
				this._batchLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2IPRIndex", Storage="_iPRID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="IPR")]
		public IPR IPRID {
			get {
				return this._iPRID.GetEntity();
			}
			set {
				this._iPRID.SetEntity(value);
			}
		}
		
		private void OnCompensationGoodChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CompensationGood", this._compensationGood.Clone());
		}
		
		private void OnCompensationGoodChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CompensationGood");
		}
		
		private void OnCompensationGoodSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal.Add(this);
			}
			else {
				e.Item.Disposal.Remove(this);
			}
		}
		
		private void OnClearenceListLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ClearenceListLookup", this._clearenceListLookup.Clone());
		}
		
		private void OnClearenceListLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ClearenceListLookup");
		}
		
		private void OnClearenceListLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
		}
		
		private void OnJSOXCustomsSummaryListLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("JSOXCustomsSummaryListLookup", this._jSOXCustomsSummaryListLookup.Clone());
		}
		
		private void OnJSOXCustomsSummaryListLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("JSOXCustomsSummaryListLookup");
		}
		
		private void OnJSOXCustomsSummaryListLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXCustomsSummary> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal.Add(this);
			}
			else {
				e.Item.Disposal.Remove(this);
			}
		}
		
		private void OnBatchLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BatchLookup", this._batchLookup.Clone());
		}
		
		private void OnBatchLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BatchLookup");
		}
		
		private void OnBatchLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
		}
		
		private void OnIPRIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPRID", this._iPRID.Clone());
		}
		
		private void OnIPRIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPRID");
		}
		
		private void OnIPRIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Disposal.Add(this);
			}
			else {
				e.Item.Disposal.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Dust
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Dust", Id="0x0100E2A6EE8469AA524286812782556DFFF0")]
	public partial class Dust : Element {
		
		private System.Nullable<double> _dustRatio;
		
		private System.Nullable<ProductType> _productType;
		
		private Microsoft.SharePoint.Linq.EntitySet<Batch> _batch;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Dust() {
			this._batch = new Microsoft.SharePoint.Linq.EntitySet<Batch>();
			this._batch.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchSync);
			this._batch.OnChanged += new System.EventHandler(this.OnBatchChanged);
			this._batch.OnChanging += new System.EventHandler(this.OnBatchChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// DustRatio
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DustRatio", Storage="_dustRatio", FieldType="Number")]
		public System.Nullable<double> DustRatio {
			get {
				return this._dustRatio;
			}
			set {
				if ((value != this._dustRatio)) {
					this.OnPropertyChanging("DustRatio", this._dustRatio);
					this._dustRatio = value;
					this.OnPropertyChanged("DustRatio");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Dust.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Dust.");
			}
		}
		
		/// <summary>
		/// Material Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DustIndex", Storage="_batch", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Batch")]
		public Microsoft.SharePoint.Linq.EntitySet<Batch> Batch {
			get {
				return this._batch;
			}
			set {
				this._batch.Assign(value);
			}
		}
		
		private void OnBatchChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Batch", this._batch.Clone());
		}
		
		private void OnBatchChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Batch");
		}
		
		private void OnBatchSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.DustLookup = this;
			}
			else {
				e.Item.DustLookup = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Format", Id="0x01008229B51223914BB3B88F3ABDB737237B")]
	public partial class Format : Element {
		
		private string _cigaretteLenght;
		
		private string _filterLenght;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Format() {
			this.OnCreated();
		}
		
		/// <summary>
		/// CigaretteLenght
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CigaretteLenght", Storage="_cigaretteLenght", Required=true, FieldType="Text")]
		public string CigaretteLenght {
			get {
				return this._cigaretteLenght;
			}
			set {
				if ((value != this._cigaretteLenght)) {
					this.OnPropertyChanging("CigaretteLenght", this._cigaretteLenght);
					this._cigaretteLenght = value;
					this.OnPropertyChanged("CigaretteLenght");
				}
			}
		}
		
		/// <summary>
		/// FilterLenght
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FilterLenght", Storage="_filterLenght", Required=true, FieldType="Text")]
		public string FilterLenght {
			get {
				return this._filterLenght;
			}
			set {
				if ((value != this._filterLenght)) {
					this.OnPropertyChanging("FilterLenght", this._filterLenght);
					this._filterLenght = value;
					this.OnPropertyChanged("FilterLenght");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="InvoiceContent", Id="0x010082E2FD28F40C4269AC5C796F220F10C3")]
	public partial class InvoiceContent : Element {
		
		private System.Nullable<double> _itemNo;
		
		private System.Nullable<double> _quantity;
		
		private string _units;
		
		private System.Nullable<ProductType> _productType;
		
		private System.Nullable<Status> _status;
		
		private Microsoft.SharePoint.Linq.EntityRef<InvoiceLib> _invoiceLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<Batch> _batchID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public InvoiceContent() {
			this._invoiceLookup = new Microsoft.SharePoint.Linq.EntityRef<InvoiceLib>();
			this._invoiceLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceLib>>(this.OnInvoiceLookupSync);
			this._invoiceLookup.OnChanged += new System.EventHandler(this.OnInvoiceLookupChanged);
			this._invoiceLookup.OnChanging += new System.EventHandler(this.OnInvoiceLookupChanging);
			this._batchID = new Microsoft.SharePoint.Linq.EntityRef<Batch>();
			this._batchID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchIDSync);
			this._batchID.OnChanged += new System.EventHandler(this.OnBatchIDChanged);
			this._batchID.OnChanging += new System.EventHandler(this.OnBatchIDChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// PozID
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		/// <summary>
		/// Quantity
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Quantity", Storage="_quantity", FieldType="Number")]
		public System.Nullable<double> Quantity {
			get {
				return this._quantity;
			}
			set {
				if ((value != this._quantity)) {
					this.OnPropertyChanging("Quantity", this._quantity);
					this._quantity = value;
					this.OnPropertyChanged("Quantity");
				}
			}
		}
		
		/// <summary>
		/// j.m.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		/// <summary>
		/// Material Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceContentStatus", Storage="_status", FieldType="Choice")]
		public System.Nullable<Status> Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="InvoiceIndex", Storage="_invoiceLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Invoice Library")]
		public InvoiceLib InvoiceLookup {
			get {
				return this._invoiceLookup.GetEntity();
			}
			set {
				this._invoiceLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="InvoiceContent2BatchIndex", Storage="_batchID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Batch")]
		public Batch BatchID {
			get {
				return this._batchID.GetEntity();
			}
			set {
				this._batchID.SetEntity(value);
			}
		}
		
		private void OnInvoiceLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("InvoiceLookup", this._invoiceLookup.Clone());
		}
		
		private void OnInvoiceLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("InvoiceLookup");
		}
		
		private void OnInvoiceLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.InvoiceContent.Add(this);
			}
			else {
				e.Item.InvoiceContent.Remove(this);
			}
		}
		
		private void OnBatchIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BatchID", this._batchID.Clone());
		}
		
		private void OnBatchIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BatchID");
		}
		
		private void OnBatchIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.InvoiceContent.Add(this);
			}
			else {
				e.Item.InvoiceContent.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="IPR", Id="0x0100BB872D605E9F0F49B05D98D6A01655F8")]
	public partial class IPR : Element {
		
		private string _documentNo;
		
		private System.Nullable<System.DateTime> _customsDebtDate;
		
		private System.Nullable<System.DateTime> _oGLValidTo;
		
		private string _tobaccoName;
		
		private string _grade;
		
		private string _sKU;
		
		private string _batch;
		
		private string _dutyName;
		
		private System.Nullable<double> _duty;
		
		private System.Nullable<double> _dutyPerUnit;
		
		private string _vATName;
		
		private System.Nullable<double> _vAT;
		
		private System.Nullable<double> _vATPerUnit;
		
		private System.Nullable<double> _netMass;
		
		private System.Nullable<double> _grossMass;
		
		private System.Nullable<double> _cartons;
		
		private string _invoiceNo;
		
		private System.Nullable<double> _value;
		
		private string _currency;
		
		private System.Nullable<double> _unitPrice;
		
		private System.Nullable<System.DateTime> _closingDate;
		
		private System.Nullable<double> _accountBalance;
		
		private System.Nullable<double> _tobaccoNotAllocated;
		
		private System.Nullable<bool> _accountClosed;
		
		private Microsoft.SharePoint.Linq.EntitySet<Disposal> _disposal;
		
		private Microsoft.SharePoint.Linq.EntityRef<Consent> _consentNo;
		
		private Microsoft.SharePoint.Linq.EntityRef<PCNCode> _pCNTariffCode;
		
		private Microsoft.SharePoint.Linq.EntityRef<JSOX> _jSOXListLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<Clearence> _clearenceListLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<Dokument> _iPRLibraryLookup;
		
		private Microsoft.SharePoint.Linq.EntitySet<JSOXSummary> _jSOXSummary;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public IPR() {
			this._disposal = new Microsoft.SharePoint.Linq.EntitySet<Disposal>();
			this._disposal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal>>(this.OnDisposalSync);
			this._disposal.OnChanged += new System.EventHandler(this.OnDisposalChanged);
			this._disposal.OnChanging += new System.EventHandler(this.OnDisposalChanging);
			this._consentNo = new Microsoft.SharePoint.Linq.EntityRef<Consent>();
			this._consentNo.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Consent>>(this.OnConsentNoSync);
			this._consentNo.OnChanged += new System.EventHandler(this.OnConsentNoChanged);
			this._consentNo.OnChanging += new System.EventHandler(this.OnConsentNoChanging);
			this._pCNTariffCode = new Microsoft.SharePoint.Linq.EntityRef<PCNCode>();
			this._pCNTariffCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode>>(this.OnPCNTariffCodeSync);
			this._pCNTariffCode.OnChanged += new System.EventHandler(this.OnPCNTariffCodeChanged);
			this._pCNTariffCode.OnChanging += new System.EventHandler(this.OnPCNTariffCodeChanging);
			this._jSOXListLookup = new Microsoft.SharePoint.Linq.EntityRef<JSOX>();
			this._jSOXListLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOX>>(this.OnJSOXListLookupSync);
			this._jSOXListLookup.OnChanged += new System.EventHandler(this.OnJSOXListLookupChanged);
			this._jSOXListLookup.OnChanging += new System.EventHandler(this.OnJSOXListLookupChanging);
			this._clearenceListLookup = new Microsoft.SharePoint.Linq.EntityRef<Clearence>();
			this._clearenceListLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnClearenceListLookupSync);
			this._clearenceListLookup.OnChanged += new System.EventHandler(this.OnClearenceListLookupChanged);
			this._clearenceListLookup.OnChanging += new System.EventHandler(this.OnClearenceListLookupChanging);
			this._iPRLibraryLookup = new Microsoft.SharePoint.Linq.EntityRef<Dokument>();
			this._iPRLibraryLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument>>(this.OnIPRLibraryLookupSync);
			this._iPRLibraryLookup.OnChanged += new System.EventHandler(this.OnIPRLibraryLookupChanged);
			this._iPRLibraryLookup.OnChanging += new System.EventHandler(this.OnIPRLibraryLookupChanging);
			this._jSOXSummary = new Microsoft.SharePoint.Linq.EntitySet<JSOXSummary>();
			this._jSOXSummary.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXSummary>>(this.OnJSOXSummarySync);
			this._jSOXSummary.OnChanged += new System.EventHandler(this.OnJSOXSummaryChanged);
			this._jSOXSummary.OnChanging += new System.EventHandler(this.OnJSOXSummaryChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// DocumentNo
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNo", Storage="_documentNo", FieldType="Text")]
		public string DocumentNo {
			get {
				return this._documentNo;
			}
			set {
				if ((value != this._documentNo)) {
					this.OnPropertyChanging("DocumentNo", this._documentNo);
					this._documentNo = value;
					this.OnPropertyChanged("DocumentNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsDebtDate", Storage="_customsDebtDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CustomsDebtDate {
			get {
				return this._customsDebtDate;
			}
			set {
				if ((value != this._customsDebtDate)) {
					this.OnPropertyChanging("CustomsDebtDate", this._customsDebtDate);
					this._customsDebtDate = value;
					this.OnPropertyChanged("CustomsDebtDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OGLValidTo", Storage="_oGLValidTo", FieldType="DateTime")]
		public System.Nullable<System.DateTime> OGLValidTo {
			get {
				return this._oGLValidTo;
			}
			set {
				if ((value != this._oGLValidTo)) {
					this.OnPropertyChanging("OGLValidTo", this._oGLValidTo);
					this._oGLValidTo = value;
					this.OnPropertyChanged("OGLValidTo");
				}
			}
		}
		
		/// <summary>
		/// Tobacco Name
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoName", Storage="_tobaccoName", FieldType="Text")]
		public string TobaccoName {
			get {
				return this._tobaccoName;
			}
			set {
				if ((value != this._tobaccoName)) {
					this.OnPropertyChanging("TobaccoName", this._tobaccoName);
					this._tobaccoName = value;
					this.OnPropertyChanged("TobaccoName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Grade", Storage="_grade", FieldType="Text")]
		public string Grade {
			get {
				return this._grade;
			}
			set {
				if ((value != this._grade)) {
					this.OnPropertyChanging("Grade", this._grade);
					this._grade = value;
					this.OnPropertyChanged("Grade");
				}
			}
		}
		
		/// <summary>
		/// SKU
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		/// <summary>
		/// Batch
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		/// <summary>
		/// Duty Name
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyName", Storage="_dutyName", FieldType="Text")]
		public string DutyName {
			get {
				return this._dutyName;
			}
			set {
				if ((value != this._dutyName)) {
					this.OnPropertyChanging("DutyName", this._dutyName);
					this._dutyName = value;
					this.OnPropertyChanged("DutyName");
				}
			}
		}
		
		/// <summary>
		/// Cło
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Duty", Storage="_duty", FieldType="Number")]
		public System.Nullable<double> Duty {
			get {
				return this._duty;
			}
			set {
				if ((value != this._duty)) {
					this.OnPropertyChanging("Duty", this._duty);
					this._duty = value;
					this.OnPropertyChanged("Duty");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRDutyPerUnit", Storage="_dutyPerUnit", FieldType="Number")]
		public System.Nullable<double> DutyPerUnit {
			get {
				return this._dutyPerUnit;
			}
			set {
				if ((value != this._dutyPerUnit)) {
					this.OnPropertyChanging("DutyPerUnit", this._dutyPerUnit);
					this._dutyPerUnit = value;
					this.OnPropertyChanged("DutyPerUnit");
				}
			}
		}
		
		/// <summary>
		/// VAT Name
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VATName", Storage="_vATName", FieldType="Text")]
		public string VATName {
			get {
				return this._vATName;
			}
			set {
				if ((value != this._vATName)) {
					this.OnPropertyChanging("VATName", this._vATName);
					this._vATName = value;
					this.OnPropertyChanged("VATName");
				}
			}
		}
		
		/// <summary>
		/// Vat
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VAT", Storage="_vAT", FieldType="Number")]
		public System.Nullable<double> VAT {
			get {
				return this._vAT;
			}
			set {
				if ((value != this._vAT)) {
					this.OnPropertyChanging("VAT", this._vAT);
					this._vAT = value;
					this.OnPropertyChanged("VAT");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRVATPerUnit", Storage="_vATPerUnit", FieldType="Number")]
		public System.Nullable<double> VATPerUnit {
			get {
				return this._vATPerUnit;
			}
			set {
				if ((value != this._vATPerUnit)) {
					this.OnPropertyChanging("VATPerUnit", this._vATPerUnit);
					this._vATPerUnit = value;
					this.OnPropertyChanged("VATPerUnit");
				}
			}
		}
		
		/// <summary>
		/// Net mass
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NetMass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GrossMass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		/// <summary>
		/// Cartons
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Cartons", Storage="_cartons", FieldType="Number")]
		public System.Nullable<double> Cartons {
			get {
				return this._cartons;
			}
			set {
				if ((value != this._cartons)) {
					this.OnPropertyChanging("Cartons", this._cartons);
					this._cartons = value;
					this.OnPropertyChanged("Cartons");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceNo", Storage="_invoiceNo", FieldType="Text")]
		public string InvoiceNo {
			get {
				return this._invoiceNo;
			}
			set {
				if ((value != this._invoiceNo)) {
					this.OnPropertyChanging("InvoiceNo", this._invoiceNo);
					this._invoiceNo = value;
					this.OnPropertyChanged("InvoiceNo");
				}
			}
		}
		
		/// <summary>
		/// Value
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Value", Storage="_value", FieldType="Number")]
		public System.Nullable<double> Value {
			get {
				return this._value;
			}
			set {
				if ((value != this._value)) {
					this.OnPropertyChanging("Value", this._value);
					this._value = value;
					this.OnPropertyChanged("Value");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Currency", Storage="_currency", FieldType="Text")]
		public string Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRUnitPrice", Storage="_unitPrice", FieldType="Number")]
		public System.Nullable<double> UnitPrice {
			get {
				return this._unitPrice;
			}
			set {
				if ((value != this._unitPrice)) {
					this.OnPropertyChanging("UnitPrice", this._unitPrice);
					this._unitPrice = value;
					this.OnPropertyChanged("UnitPrice");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ClosingDate", Storage="_closingDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ClosingDate {
			get {
				return this._closingDate;
			}
			set {
				if ((value != this._closingDate)) {
					this.OnPropertyChanging("ClosingDate", this._closingDate);
					this._closingDate = value;
					this.OnPropertyChanged("ClosingDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AccountBalance", Storage="_accountBalance", Required=true, FieldType="Number")]
		public System.Nullable<double> AccountBalance {
			get {
				return this._accountBalance;
			}
			set {
				if ((value != this._accountBalance)) {
					this.OnPropertyChanging("AccountBalance", this._accountBalance);
					this._accountBalance = value;
					this.OnPropertyChanged("AccountBalance");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoNotAllocated", Storage="_tobaccoNotAllocated", FieldType="Number")]
		public System.Nullable<double> TobaccoNotAllocated {
			get {
				return this._tobaccoNotAllocated;
			}
			set {
				if ((value != this._tobaccoNotAllocated)) {
					this.OnPropertyChanging("TobaccoNotAllocated", this._tobaccoNotAllocated);
					this._tobaccoNotAllocated = value;
					this.OnPropertyChanged("TobaccoNotAllocated");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AccountClosed", Storage="_accountClosed", Required=true, FieldType="Boolean")]
		public System.Nullable<bool> AccountClosed {
			get {
				return this._accountClosed;
			}
			set {
				if ((value != this._accountClosed)) {
					this.OnPropertyChanging("AccountClosed", this._accountClosed);
					this._accountClosed = value;
					this.OnPropertyChanged("AccountClosed");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2IPRIndex", Storage="_disposal", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposal")]
		public Microsoft.SharePoint.Linq.EntitySet<Disposal> Disposal {
			get {
				return this._disposal;
			}
			set {
				this._disposal.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPR2ConsentTitle", Storage="_consentNo", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Consent")]
		public Consent ConsentNo {
			get {
				return this._consentNo.GetEntity();
			}
			set {
				this._consentNo.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPR2PCNPCN", Storage="_pCNTariffCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="PCN Code")]
		public PCNCode PCNTariffCode {
			get {
				return this._pCNTariffCode.GetEntity();
			}
			set {
				this._pCNTariffCode.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="JSOXIndex", Storage="_jSOXListLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JSOX")]
		public JSOX JSOXListLookup {
			get {
				return this._jSOXListLookup.GetEntity();
			}
			set {
				this._jSOXListLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ClearenceIndex", Storage="_clearenceListLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Clearence")]
		public Clearence ClearenceListLookup {
			get {
				return this._clearenceListLookup.GetEntity();
			}
			set {
				this._clearenceListLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPRLibraryIndex", Storage="_iPRLibraryLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="IPR Library")]
		public Dokument IPRLibraryLookup {
			get {
				return this._iPRLibraryLookup.GetEntity();
			}
			set {
				this._iPRLibraryLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPRIndex", Storage="_jSOXSummary", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="JSOX Summary")]
		public Microsoft.SharePoint.Linq.EntitySet<JSOXSummary> JSOXSummary {
			get {
				return this._jSOXSummary;
			}
			set {
				this._jSOXSummary.Assign(value);
			}
		}
		
		private void OnDisposalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal", this._disposal.Clone());
		}
		
		private void OnDisposalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal");
		}
		
		private void OnDisposalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPRID = this;
			}
			else {
				e.Item.IPRID = null;
			}
		}
		
		private void OnConsentNoChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ConsentNo", this._consentNo.Clone());
		}
		
		private void OnConsentNoChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ConsentNo");
		}
		
		private void OnConsentNoSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Consent> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPR.Add(this);
			}
			else {
				e.Item.IPR.Remove(this);
			}
		}
		
		private void OnPCNTariffCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PCNTariffCode", this._pCNTariffCode.Clone());
		}
		
		private void OnPCNTariffCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PCNTariffCode");
		}
		
		private void OnPCNTariffCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PCNCode> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPR.Add(this);
			}
			else {
				e.Item.IPR.Remove(this);
			}
		}
		
		private void OnJSOXListLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("JSOXListLookup", this._jSOXListLookup.Clone());
		}
		
		private void OnJSOXListLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("JSOXListLookup");
		}
		
		private void OnJSOXListLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOX> e) {
		}
		
		private void OnClearenceListLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ClearenceListLookup", this._clearenceListLookup.Clone());
		}
		
		private void OnClearenceListLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ClearenceListLookup");
		}
		
		private void OnClearenceListLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
		}
		
		private void OnIPRLibraryLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPRLibraryLookup", this._iPRLibraryLookup.Clone());
		}
		
		private void OnIPRLibraryLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPRLibraryLookup");
		}
		
		private void OnIPRLibraryLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument> e) {
		}
		
		private void OnJSOXSummaryChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("JSOXSummary", this._jSOXSummary.Clone());
		}
		
		private void OnJSOXSummaryChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("JSOXSummary");
		}
		
		private void OnJSOXSummarySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOXSummary> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.IPRLookup = this;
			}
			else {
				e.Item.IPRLookup = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="JSOX", Id="0x0100D1CB53094EEF4E39A0F56682BF66210B")]
	public partial class JSOX : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<Dokument> _balanceLibraryLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public JSOX() {
			this._balanceLibraryLookup = new Microsoft.SharePoint.Linq.EntityRef<Dokument>();
			this._balanceLibraryLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument>>(this.OnBalanceLibraryLookupSync);
			this._balanceLibraryLookup.OnChanged += new System.EventHandler(this.OnBalanceLibraryLookupChanged);
			this._balanceLibraryLookup.OnChanging += new System.EventHandler(this.OnBalanceLibraryLookupChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BalanceLibraryIndex", Storage="_balanceLibraryLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Balance Library")]
		public Dokument BalanceLibraryLookup {
			get {
				return this._balanceLibraryLookup.GetEntity();
			}
			set {
				this._balanceLibraryLookup.SetEntity(value);
			}
		}
		
		private void OnBalanceLibraryLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BalanceLibraryLookup", this._balanceLibraryLookup.Clone());
		}
		
		private void OnBalanceLibraryLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BalanceLibraryLookup");
		}
		
		private void OnBalanceLibraryLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="JSOXCustomsSummary", Id="0x0100C94F6A12898E497EAE5EFEFDC240C3F4")]
	public partial class JSOXCustomsSummary : Element {
		
		private string _exportOrFreeCirculationSAD;
		
		private System.Nullable<System.DateTime> _sADDate;
		
		private string _invoiceNo;
		
		private string _sADConsignmentNo;
		
		private string _sADConsignmentDate;
		
		private System.Nullable<double> _totalAmount;
		
		private System.Nullable<CompensationGood> _compensationGood;
		
		private Microsoft.SharePoint.Linq.EntitySet<Disposal> _disposal;
		
		private Microsoft.SharePoint.Linq.EntityRef<JSOX> _jSOXListLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public JSOXCustomsSummary() {
			this._disposal = new Microsoft.SharePoint.Linq.EntitySet<Disposal>();
			this._disposal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal>>(this.OnDisposalSync);
			this._disposal.OnChanged += new System.EventHandler(this.OnDisposalChanged);
			this._disposal.OnChanging += new System.EventHandler(this.OnDisposalChanging);
			this._jSOXListLookup = new Microsoft.SharePoint.Linq.EntityRef<JSOX>();
			this._jSOXListLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOX>>(this.OnJSOXListLookupSync);
			this._jSOXListLookup.OnChanged += new System.EventHandler(this.OnJSOXListLookupChanged);
			this._jSOXListLookup.OnChanging += new System.EventHandler(this.OnJSOXListLookupChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExportOrFreeCirculationSAD", Storage="_exportOrFreeCirculationSAD", FieldType="Text")]
		public string ExportOrFreeCirculationSAD {
			get {
				return this._exportOrFreeCirculationSAD;
			}
			set {
				if ((value != this._exportOrFreeCirculationSAD)) {
					this.OnPropertyChanging("ExportOrFreeCirculationSAD", this._exportOrFreeCirculationSAD);
					this._exportOrFreeCirculationSAD = value;
					this.OnPropertyChanged("ExportOrFreeCirculationSAD");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDate", Storage="_sADDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> SADDate {
			get {
				return this._sADDate;
			}
			set {
				if ((value != this._sADDate)) {
					this.OnPropertyChanging("SADDate", this._sADDate);
					this._sADDate = value;
					this.OnPropertyChanged("SADDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceNo", Storage="_invoiceNo", FieldType="Text")]
		public string InvoiceNo {
			get {
				return this._invoiceNo;
			}
			set {
				if ((value != this._invoiceNo)) {
					this.OnPropertyChanging("InvoiceNo", this._invoiceNo);
					this._invoiceNo = value;
					this.OnPropertyChanged("InvoiceNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADConsignmentNo", Storage="_sADConsignmentNo", FieldType="Text")]
		public string SADConsignmentNo {
			get {
				return this._sADConsignmentNo;
			}
			set {
				if ((value != this._sADConsignmentNo)) {
					this.OnPropertyChanging("SADConsignmentNo", this._sADConsignmentNo);
					this._sADConsignmentNo = value;
					this.OnPropertyChanged("SADConsignmentNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADConsignmentDate", Storage="_sADConsignmentDate", FieldType="Text")]
		public string SADConsignmentDate {
			get {
				return this._sADConsignmentDate;
			}
			set {
				if ((value != this._sADConsignmentDate)) {
					this.OnPropertyChanging("SADConsignmentDate", this._sADConsignmentDate);
					this._sADConsignmentDate = value;
					this.OnPropertyChanged("SADConsignmentDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TotalAmount", Storage="_totalAmount", FieldType="Number")]
		public System.Nullable<double> TotalAmount {
			get {
				return this._totalAmount;
			}
			set {
				if ((value != this._totalAmount)) {
					this.OnPropertyChanging("TotalAmount", this._totalAmount);
					this._totalAmount = value;
					this.OnPropertyChanged("TotalAmount");
				}
			}
		}
		
		/// <summary>
		/// Compensation Good
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompensationGood", Storage="_compensationGood", FieldType="Choice")]
		public System.Nullable<CompensationGood> CompensationGood {
			get {
				return this._compensationGood;
			}
			set {
				if ((value != this._compensationGood)) {
					this.OnPropertyChanging("CompensationGood", this._compensationGood);
					this._compensationGood = value;
					this.OnPropertyChanged("CompensationGood");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="JSOXCustomsSummaryIndex", Storage="_disposal", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposal")]
		public Microsoft.SharePoint.Linq.EntitySet<Disposal> Disposal {
			get {
				return this._disposal;
			}
			set {
				this._disposal.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="JSOXIndex", Storage="_jSOXListLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JSOX")]
		public JSOX JSOXListLookup {
			get {
				return this._jSOXListLookup.GetEntity();
			}
			set {
				this._jSOXListLookup.SetEntity(value);
			}
		}
		
		private void OnDisposalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal", this._disposal.Clone());
		}
		
		private void OnDisposalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal");
		}
		
		private void OnDisposalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.JSOXCustomsSummaryListLookup = this;
			}
			else {
				e.Item.JSOXCustomsSummaryListLookup = null;
			}
		}
		
		private void OnJSOXListLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("JSOXListLookup", this._jSOXListLookup.Clone());
		}
		
		private void OnJSOXListLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("JSOXListLookup");
		}
		
		private void OnJSOXListLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOX> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Material", Id="0x01004D0C63D616EA814E8B077CF59ADDB12B")]
	public partial class Material : Element {
		
		private string _sKUDescription;
		
		private string _sKU;
		
		private string _batch;
		
		private string _productID;
		
		private string _location;
		
		private System.Nullable<double> _fGQuantityKUKg;
		
		private System.Nullable<double> _tobaccoQuantityKg;
		
		private string _units;
		
		private System.Nullable<ProductType> _productType;
		
		private Microsoft.SharePoint.Linq.EntityRef<Batch> _batchLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Material() {
			this._batchLookup = new Microsoft.SharePoint.Linq.EntityRef<Batch>();
			this._batchLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchLookupSync);
			this._batchLookup.OnChanged += new System.EventHandler(this.OnBatchLookupChanged);
			this._batchLookup.OnChanging += new System.EventHandler(this.OnBatchLookupChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// SKUDescription
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKUDescription", Storage="_sKUDescription", FieldType="Text")]
		public string SKUDescription {
			get {
				return this._sKUDescription;
			}
			set {
				if ((value != this._sKUDescription)) {
					this.OnPropertyChanging("SKUDescription", this._sKUDescription);
					this._sKUDescription = value;
					this.OnPropertyChanged("SKUDescription");
				}
			}
		}
		
		/// <summary>
		/// SKU
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		/// <summary>
		/// Batch
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		/// <summary>
		/// Product ID
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductID", Storage="_productID", FieldType="Text")]
		public string ProductID {
			get {
				return this._productID;
			}
			set {
				if ((value != this._productID)) {
					this.OnPropertyChanging("ProductID", this._productID);
					this._productID = value;
					this.OnPropertyChanged("ProductID");
				}
			}
		}
		
		/// <summary>
		/// StorLoc
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StorLoc", Storage="_location", FieldType="Text")]
		public string Location {
			get {
				return this._location;
			}
			set {
				if ((value != this._location)) {
					this.OnPropertyChanging("Location", this._location);
					this._location = value;
					this.OnPropertyChanged("Location");
				}
			}
		}
		
		/// <summary>
		/// FG Quantity
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FGQuantity", Storage="_fGQuantityKUKg", FieldType="Number")]
		public System.Nullable<double> FGQuantityKUKg {
			get {
				return this._fGQuantityKUKg;
			}
			set {
				if ((value != this._fGQuantityKUKg)) {
					this.OnPropertyChanging("FGQuantityKUKg", this._fGQuantityKUKg);
					this._fGQuantityKUKg = value;
					this.OnPropertyChanged("FGQuantityKUKg");
				}
			}
		}
		
		/// <summary>
		/// TobaccoQuantity
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoQuantity", Storage="_tobaccoQuantityKg", FieldType="Number")]
		public System.Nullable<double> TobaccoQuantityKg {
			get {
				return this._tobaccoQuantityKg;
			}
			set {
				if ((value != this._tobaccoQuantityKg)) {
					this.OnPropertyChanging("TobaccoQuantityKg", this._tobaccoQuantityKg);
					this._tobaccoQuantityKg = value;
					this.OnPropertyChanged("TobaccoQuantityKg");
				}
			}
		}
		
		/// <summary>
		/// j.m.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		/// <summary>
		/// Material Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Material2BatchIndex", Storage="_batchLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Batch")]
		public Batch BatchLookup {
			get {
				return this._batchLookup.GetEntity();
			}
			set {
				this._batchLookup.SetEntity(value);
			}
		}
		
		private void OnBatchLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BatchLookup", this._batchLookup.Clone());
		}
		
		private void OnBatchLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BatchLookup");
		}
		
		private void OnBatchLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Material.Add(this);
			}
			else {
				e.Item.Material.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="PCNCode", Id="0x01002E9F09B06ACF47F7ADA76C12453C7AF7")]
	public partial class PCNCode : Element {
		
		private string _productCodeNumber;
		
		private System.Nullable<CompensationGood> _compensationGood;
		
		private Microsoft.SharePoint.Linq.EntitySet<Disposal> _disposal;
		
		private Microsoft.SharePoint.Linq.EntitySet<IPR> _iPR;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PCNCode() {
			this._disposal = new Microsoft.SharePoint.Linq.EntitySet<Disposal>();
			this._disposal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal>>(this.OnDisposalSync);
			this._disposal.OnChanged += new System.EventHandler(this.OnDisposalChanged);
			this._disposal.OnChanging += new System.EventHandler(this.OnDisposalChanging);
			this._iPR = new Microsoft.SharePoint.Linq.EntitySet<IPR>();
			this._iPR.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR>>(this.OnIPRSync);
			this._iPR.OnChanged += new System.EventHandler(this.OnIPRChanged);
			this._iPR.OnChanging += new System.EventHandler(this.OnIPRChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// ProductCodeNumber
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductCodeNumber", Storage="_productCodeNumber", FieldType="Text")]
		public string ProductCodeNumber {
			get {
				return this._productCodeNumber;
			}
			set {
				if ((value != this._productCodeNumber)) {
					this.OnPropertyChanging("ProductCodeNumber", this._productCodeNumber);
					this._productCodeNumber = value;
					this.OnPropertyChanged("ProductCodeNumber");
				}
			}
		}
		
		/// <summary>
		/// Compensation Good
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompensationGood", Storage="_compensationGood", FieldType="Choice")]
		public System.Nullable<CompensationGood> CompensationGood {
			get {
				return this._compensationGood;
			}
			set {
				if ((value != this._compensationGood)) {
					this.OnPropertyChanging("CompensationGood", this._compensationGood);
					this._compensationGood = value;
					this.OnPropertyChanged("CompensationGood");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Disposal2PCNCompensationGood", Storage="_disposal", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Disposal")]
		public Microsoft.SharePoint.Linq.EntitySet<Disposal> Disposal {
			get {
				return this._disposal;
			}
			set {
				this._disposal.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPR2PCNPCN", Storage="_iPR", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="IPR")]
		public Microsoft.SharePoint.Linq.EntitySet<IPR> IPR {
			get {
				return this._iPR;
			}
			set {
				this._iPR.Assign(value);
			}
		}
		
		private void OnDisposalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Disposal", this._disposal.Clone());
		}
		
		private void OnDisposalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Disposal");
		}
		
		private void OnDisposalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Disposal> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CompensationGood = this;
			}
			else {
				e.Item.CompensationGood = null;
			}
		}
		
		private void OnIPRChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPR", this._iPR.Clone());
		}
		
		private void OnIPRChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPR");
		}
		
		private void OnIPRSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PCNTariffCode = this;
			}
			else {
				e.Item.PCNTariffCode = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADDocumentType", Id="0x0100844099FC49B54D30A1516EA17A6883FC")]
	public partial class SADDocumentType : Element {
		
		private string _referenceNumber;
		
		private System.Nullable<System.DateTime> _customsDebtDate;
		
		private string _documentNumber;
		
		private string _currency;
		
		private System.Nullable<double> _exchangeRate;
		
		private System.Nullable<double> _grossMass;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADDocumentLib> _sADDocumentLibraryLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<Clearence> _clearenceID;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADGood> _sADGood;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADDocumentType() {
			this._sADDocumentLibraryLookup = new Microsoft.SharePoint.Linq.EntityRef<SADDocumentLib>();
			this._sADDocumentLibraryLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentLib>>(this.OnSADDocumentLibraryLookupSync);
			this._sADDocumentLibraryLookup.OnChanged += new System.EventHandler(this.OnSADDocumentLibraryLookupChanged);
			this._sADDocumentLibraryLookup.OnChanging += new System.EventHandler(this.OnSADDocumentLibraryLookupChanging);
			this._clearenceID = new Microsoft.SharePoint.Linq.EntityRef<Clearence>();
			this._clearenceID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnClearenceIDSync);
			this._clearenceID.OnChanged += new System.EventHandler(this.OnClearenceIDChanged);
			this._clearenceID.OnChanging += new System.EventHandler(this.OnClearenceIDChanging);
			this._sADGood = new Microsoft.SharePoint.Linq.EntitySet<SADGood>();
			this._sADGood.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodSync);
			this._sADGood.OnChanged += new System.EventHandler(this.OnSADGoodChanged);
			this._sADGood.OnChanging += new System.EventHandler(this.OnSADGoodChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// SAD Document Reference Number - box 7.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReferenceNumber", Storage="_referenceNumber", FieldType="Text")]
		public string ReferenceNumber {
			get {
				return this._referenceNumber;
			}
			set {
				if ((value != this._referenceNumber)) {
					this.OnPropertyChanging("ReferenceNumber", this._referenceNumber);
					this._referenceNumber = value;
					this.OnPropertyChanged("ReferenceNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CustomsDebtDate", Storage="_customsDebtDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CustomsDebtDate {
			get {
				return this._customsDebtDate;
			}
			set {
				if ((value != this._customsDebtDate)) {
					this.OnPropertyChanging("CustomsDebtDate", this._customsDebtDate);
					this._customsDebtDate = value;
					this.OnPropertyChanged("CustomsDebtDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DocumentNumber", Storage="_documentNumber", FieldType="Text")]
		public string DocumentNumber {
			get {
				return this._documentNumber;
			}
			set {
				if ((value != this._documentNumber)) {
					this.OnPropertyChanging("DocumentNumber", this._documentNumber);
					this._documentNumber = value;
					this.OnPropertyChanged("DocumentNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Currency", Storage="_currency", FieldType="Text")]
		public string Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExchangeRate", Storage="_exchangeRate", FieldType="Number")]
		public System.Nullable<double> ExchangeRate {
			get {
				return this._exchangeRate;
			}
			set {
				if ((value != this._exchangeRate)) {
					this.OnPropertyChanging("ExchangeRate", this._exchangeRate);
					this._exchangeRate = value;
					this.OnPropertyChanged("ExchangeRate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GrossMass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumenLibrarytIndex", Storage="_sADDocumentLibraryLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Document Library")]
		public SADDocumentLib SADDocumentLibraryLookup {
			get {
				return this._sADDocumentLibraryLookup.GetEntity();
			}
			set {
				this._sADDocumentLibraryLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocument2Clearence", Storage="_clearenceID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Clearence")]
		public Clearence ClearenceID {
			get {
				return this._clearenceID.GetEntity();
			}
			set {
				this._clearenceID.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumentIndex", Storage="_sADGood", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Good")]
		public Microsoft.SharePoint.Linq.EntitySet<SADGood> SADGood {
			get {
				return this._sADGood;
			}
			set {
				this._sADGood.Assign(value);
			}
		}
		
		private void OnSADDocumentLibraryLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDocumentLibraryLookup", this._sADDocumentLibraryLookup.Clone());
		}
		
		private void OnSADDocumentLibraryLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDocumentLibraryLookup");
		}
		
		private void OnSADDocumentLibraryLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentLib> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDocumentType.Add(this);
			}
			else {
				e.Item.SADDocumentType.Remove(this);
			}
		}
		
		private void OnClearenceIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ClearenceID", this._clearenceID.Clone());
		}
		
		private void OnClearenceIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ClearenceID");
		}
		
		private void OnClearenceIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDocumentType.Add(this);
			}
			else {
				e.Item.SADDocumentType.Remove(this);
			}
		}
		
		private void OnSADGoodChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGood", this._sADGood.Clone());
		}
		
		private void OnSADGoodChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGood");
		}
		
		private void OnSADGoodSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDocumentLookup = this;
			}
			else {
				e.Item.SADDocumentLookup = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADDuties", Id="0x0100307F2A8F2886D24FBF3393F84E0E616B")]
	public partial class SADDuties : Element {
		
		private string _dutyType;
		
		private System.Nullable<double> _amount;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADDuties() {
			this._sADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodIDSync);
			this._sADGoodID.OnChanged += new System.EventHandler(this.OnSADGoodIDChanged);
			this._sADGoodID.OnChanging += new System.EventHandler(this.OnSADGoodIDChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Duty type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DutyType", Storage="_dutyType", FieldType="Text")]
		public string DutyType {
			get {
				return this._dutyType;
			}
			set {
				if ((value != this._dutyType)) {
					this.OnPropertyChanging("DutyType", this._dutyType);
					this._dutyType = value;
					this.OnPropertyChanged("DutyType");
				}
			}
		}
		
		/// <summary>
		/// Amount
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Amount", Storage="_amount", FieldType="Number")]
		public System.Nullable<double> Amount {
			get {
				return this._amount;
			}
			set {
				if ((value != this._amount)) {
					this.OnPropertyChanging("Amount", this._amount);
					this._amount = value;
					this.OnPropertyChanged("Amount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDuties2SADGoodID", Storage="_sADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADGoodID {
			get {
				return this._sADGoodID.GetEntity();
			}
			set {
				this._sADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGoodID", this._sADGoodID.Clone());
		}
		
		private void OnSADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGoodID");
		}
		
		private void OnSADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDuties.Add(this);
			}
			else {
				e.Item.SADDuties.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADGood", Id="0x01003016924817E4AF4A9AD790284C0BAE65")]
	public partial class SADGood : Element {
		
		private System.Nullable<double> _itemNo;
		
		private string _goodsDescription;
		
		private string _pCNTariffCode;
		
		private System.Nullable<double> _grossMass;
		
		private string _procedure;
		
		private System.Nullable<double> _totalAmountInvoiced;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADDuties> _sADDuties;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADDocumentType> _sADDocumentLookup;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADPackage> _sADPackage;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADQuantity> _sADQuantity;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADRequiredDocuments> _sADRequiredDocuments;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADGood() {
			this._sADDuties = new Microsoft.SharePoint.Linq.EntitySet<SADDuties>();
			this._sADDuties.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDuties>>(this.OnSADDutiesSync);
			this._sADDuties.OnChanged += new System.EventHandler(this.OnSADDutiesChanged);
			this._sADDuties.OnChanging += new System.EventHandler(this.OnSADDutiesChanging);
			this._sADDocumentLookup = new Microsoft.SharePoint.Linq.EntityRef<SADDocumentType>();
			this._sADDocumentLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType>>(this.OnSADDocumentLookupSync);
			this._sADDocumentLookup.OnChanged += new System.EventHandler(this.OnSADDocumentLookupChanged);
			this._sADDocumentLookup.OnChanging += new System.EventHandler(this.OnSADDocumentLookupChanging);
			this._sADPackage = new Microsoft.SharePoint.Linq.EntitySet<SADPackage>();
			this._sADPackage.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADPackage>>(this.OnSADPackageSync);
			this._sADPackage.OnChanged += new System.EventHandler(this.OnSADPackageChanged);
			this._sADPackage.OnChanging += new System.EventHandler(this.OnSADPackageChanging);
			this._sADQuantity = new Microsoft.SharePoint.Linq.EntitySet<SADQuantity>();
			this._sADQuantity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADQuantity>>(this.OnSADQuantitySync);
			this._sADQuantity.OnChanged += new System.EventHandler(this.OnSADQuantityChanged);
			this._sADQuantity.OnChanging += new System.EventHandler(this.OnSADQuantityChanging);
			this._sADRequiredDocuments = new Microsoft.SharePoint.Linq.EntitySet<SADRequiredDocuments>();
			this._sADRequiredDocuments.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADRequiredDocuments>>(this.OnSADRequiredDocumentsSync);
			this._sADRequiredDocuments.OnChanged += new System.EventHandler(this.OnSADRequiredDocumentsChanged);
			this._sADRequiredDocuments.OnChanging += new System.EventHandler(this.OnSADRequiredDocumentsChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// PozID
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		/// <summary>
		/// TBD
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsDescription", Storage="_goodsDescription", FieldType="Text")]
		public string GoodsDescription {
			get {
				return this._goodsDescription;
			}
			set {
				if ((value != this._goodsDescription)) {
					this.OnPropertyChanging("GoodsDescription", this._goodsDescription);
					this._goodsDescription = value;
					this.OnPropertyChanged("GoodsDescription");
				}
			}
		}
		
		/// <summary>
		/// Kod taryfy PCN
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PCNTariffCode", Storage="_pCNTariffCode", FieldType="Text")]
		public string PCNTariffCode {
			get {
				return this._pCNTariffCode;
			}
			set {
				if ((value != this._pCNTariffCode)) {
					this.OnPropertyChanging("PCNTariffCode", this._pCNTariffCode);
					this._pCNTariffCode = value;
					this.OnPropertyChanged("PCNTariffCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GrossMass", Storage="_grossMass", FieldType="Number")]
		public System.Nullable<double> GrossMass {
			get {
				return this._grossMass;
			}
			set {
				if ((value != this._grossMass)) {
					this.OnPropertyChanging("GrossMass", this._grossMass);
					this._grossMass = value;
					this.OnPropertyChanged("GrossMass");
				}
			}
		}
		
		/// <summary>
		/// Procedura celna
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Procedure", Storage="_procedure", FieldType="Text")]
		public string Procedure {
			get {
				return this._procedure;
			}
			set {
				if ((value != this._procedure)) {
					this.OnPropertyChanging("Procedure", this._procedure);
					this._procedure = value;
					this.OnPropertyChanged("Procedure");
				}
			}
		}
		
		/// <summary>
		/// Wartość
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TotalAmountInvoiced", Storage="_totalAmountInvoiced", FieldType="Number")]
		public System.Nullable<double> TotalAmountInvoiced {
			get {
				return this._totalAmountInvoiced;
			}
			set {
				if ((value != this._totalAmountInvoiced)) {
					this.OnPropertyChanging("TotalAmountInvoiced", this._totalAmountInvoiced);
					this._totalAmountInvoiced = value;
					this.OnPropertyChanged("TotalAmountInvoiced");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDuties2SADGoodID", Storage="_sADDuties", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Duties")]
		public Microsoft.SharePoint.Linq.EntitySet<SADDuties> SADDuties {
			get {
				return this._sADDuties;
			}
			set {
				this._sADDuties.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumentIndex", Storage="_sADDocumentLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Document")]
		public SADDocumentType SADDocumentLookup {
			get {
				return this._sADDocumentLookup.GetEntity();
			}
			set {
				this._sADDocumentLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADPackage2SADGoodID", Storage="_sADPackage", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Package")]
		public Microsoft.SharePoint.Linq.EntitySet<SADPackage> SADPackage {
			get {
				return this._sADPackage;
			}
			set {
				this._sADPackage.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADQuantity2SADGoodID", Storage="_sADQuantity", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Quantity")]
		public Microsoft.SharePoint.Linq.EntitySet<SADQuantity> SADQuantity {
			get {
				return this._sADQuantity;
			}
			set {
				this._sADQuantity.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADRequiredDoc2SADGoodID", Storage="_sADRequiredDocuments", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Required Documents")]
		public Microsoft.SharePoint.Linq.EntitySet<SADRequiredDocuments> SADRequiredDocuments {
			get {
				return this._sADRequiredDocuments;
			}
			set {
				this._sADRequiredDocuments.Assign(value);
			}
		}
		
		private void OnSADDutiesChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDuties", this._sADDuties.Clone());
		}
		
		private void OnSADDutiesChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDuties");
		}
		
		private void OnSADDutiesSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDuties> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADGoodID = this;
			}
			else {
				e.Item.SADGoodID = null;
			}
		}
		
		private void OnSADDocumentLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDocumentLookup", this._sADDocumentLookup.Clone());
		}
		
		private void OnSADDocumentLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDocumentLookup");
		}
		
		private void OnSADDocumentLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADGood.Add(this);
			}
			else {
				e.Item.SADGood.Remove(this);
			}
		}
		
		private void OnSADPackageChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADPackage", this._sADPackage.Clone());
		}
		
		private void OnSADPackageChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADPackage");
		}
		
		private void OnSADPackageSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADPackage> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADGoodID = this;
			}
			else {
				e.Item.SADGoodID = null;
			}
		}
		
		private void OnSADQuantityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADQuantity", this._sADQuantity.Clone());
		}
		
		private void OnSADQuantityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADQuantity");
		}
		
		private void OnSADQuantitySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADQuantity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADGoodID = this;
			}
			else {
				e.Item.SADGoodID = null;
			}
		}
		
		private void OnSADRequiredDocumentsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADRequiredDocuments", this._sADRequiredDocuments.Clone());
		}
		
		private void OnSADRequiredDocumentsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADRequiredDocuments");
		}
		
		private void OnSADRequiredDocumentsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADRequiredDocuments> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADGoodID = this;
			}
			else {
				e.Item.SADGoodID = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADPackage", Id="0x01007F42F9669FE35A41801B017E1D69C7D9")]
	public partial class SADPackage : Element {
		
		private System.Nullable<double> _itemNo;
		
		private string _package;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADPackage() {
			this._sADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodIDSync);
			this._sADGoodID.OnChanged += new System.EventHandler(this.OnSADGoodIDChanged);
			this._sADGoodID.OnChanging += new System.EventHandler(this.OnSADGoodIDChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// PozID
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		/// <summary>
		/// Rodzaj opakowania
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Package", Storage="_package", FieldType="Text")]
		public string Package {
			get {
				return this._package;
			}
			set {
				if ((value != this._package)) {
					this.OnPropertyChanging("Package", this._package);
					this._package = value;
					this.OnPropertyChanged("Package");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADPackage2SADGoodID", Storage="_sADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADGoodID {
			get {
				return this._sADGoodID.GetEntity();
			}
			set {
				this._sADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGoodID", this._sADGoodID.Clone());
		}
		
		private void OnSADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGoodID");
		}
		
		private void OnSADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADPackage.Add(this);
			}
			else {
				e.Item.SADPackage.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADQuantity", Id="0x010016BC5B99EA5169458266BB52B8784B3F")]
	public partial class SADQuantity : Element {
		
		private System.Nullable<double> _itemNo;
		
		private System.Nullable<double> _netMass;
		
		private string _units;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADQuantity() {
			this._sADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodIDSync);
			this._sADGoodID.OnChanged += new System.EventHandler(this.OnSADGoodIDChanged);
			this._sADGoodID.OnChanging += new System.EventHandler(this.OnSADGoodIDChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// PozID
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemNo", Storage="_itemNo", FieldType="Number")]
		public System.Nullable<double> ItemNo {
			get {
				return this._itemNo;
			}
			set {
				if ((value != this._itemNo)) {
					this.OnPropertyChanging("ItemNo", this._itemNo);
					this._itemNo = value;
					this.OnPropertyChanged("ItemNo");
				}
			}
		}
		
		/// <summary>
		/// Net mass
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NetMass", Storage="_netMass", FieldType="Number")]
		public System.Nullable<double> NetMass {
			get {
				return this._netMass;
			}
			set {
				if ((value != this._netMass)) {
					this.OnPropertyChanging("NetMass", this._netMass);
					this._netMass = value;
					this.OnPropertyChanged("NetMass");
				}
			}
		}
		
		/// <summary>
		/// j.m.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADQuantity2SADGoodID", Storage="_sADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADGoodID {
			get {
				return this._sADGoodID.GetEntity();
			}
			set {
				this._sADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGoodID", this._sADGoodID.Clone());
		}
		
		private void OnSADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGoodID");
		}
		
		private void OnSADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADQuantity.Add(this);
			}
			else {
				e.Item.SADQuantity.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADRequiredDocuments", Id="0x0100CAF95BD14627B343981DE5345DD0BD37")]
	public partial class SADRequiredDocuments : Element {
		
		private string _code;
		
		private string _number;
		
		private Microsoft.SharePoint.Linq.EntityRef<SADGood> _sADGoodID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADRequiredDocuments() {
			this._sADGoodID = new Microsoft.SharePoint.Linq.EntityRef<SADGood>();
			this._sADGoodID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood>>(this.OnSADGoodIDSync);
			this._sADGoodID.OnChanged += new System.EventHandler(this.OnSADGoodIDChanged);
			this._sADGoodID.OnChanging += new System.EventHandler(this.OnSADGoodIDChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Code", Storage="_code", FieldType="Text")]
		public string Code {
			get {
				return this._code;
			}
			set {
				if ((value != this._code)) {
					this.OnPropertyChanging("Code", this._code);
					this._code = value;
					this.OnPropertyChanged("Code");
				}
			}
		}
		
		/// <summary>
		/// Number
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Number", Storage="_number", FieldType="Text")]
		public string Number {
			get {
				return this._number;
			}
			set {
				if ((value != this._number)) {
					this.OnPropertyChanging("Number", this._number);
					this._number = value;
					this.OnPropertyChanged("Number");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADRequiredDoc2SADGoodID", Storage="_sADGoodID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAD Good")]
		public SADGood SADGoodID {
			get {
				return this._sADGoodID.GetEntity();
			}
			set {
				this._sADGoodID.SetEntity(value);
			}
		}
		
		private void OnSADGoodIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADGoodID", this._sADGoodID.Clone());
		}
		
		private void OnSADGoodIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADGoodID");
		}
		
		private void OnSADGoodIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADGood> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADRequiredDocuments.Add(this);
			}
			else {
				e.Item.SADRequiredDocuments.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// It contains a table of entries describing all the coefficients of menthol usage in cigarettes, including the date of their validity.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SHMenthol", Id="0x010029964D9D2D53F84CB1083741C40FA8D1")]
	public partial class SHMenthol : Element {
		
		private System.Nullable<double> _sHMentholRatio;
		
		private System.Nullable<ProductType> _productType;
		
		private Microsoft.SharePoint.Linq.EntitySet<Batch> _batch;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SHMenthol() {
			this._batch = new Microsoft.SharePoint.Linq.EntitySet<Batch>();
			this._batch.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchSync);
			this._batch.OnChanged += new System.EventHandler(this.OnBatchChanged);
			this._batch.OnChanging += new System.EventHandler(this.OnBatchChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// SHMentholRatio
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SHMentholRatio", Storage="_sHMentholRatio", Required=true, FieldType="Number")]
		public System.Nullable<double> SHMentholRatio {
			get {
				return this._sHMentholRatio;
			}
			set {
				if ((value != this._sHMentholRatio)) {
					this.OnPropertyChanging("SHMentholRatio", this._sHMentholRatio);
					this._sHMentholRatio = value;
					this.OnPropertyChanged("SHMentholRatio");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości SHMenthol.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości SHMenthol.");
			}
		}
		
		/// <summary>
		/// Material Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", Required=true, FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SHMentholIndex", Storage="_batch", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Batch")]
		public Microsoft.SharePoint.Linq.EntitySet<Batch> Batch {
			get {
				return this._batch;
			}
			set {
				this._batch.Assign(value);
			}
		}
		
		private void OnBatchChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Batch", this._batch.Clone());
		}
		
		private void OnBatchChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Batch");
		}
		
		private void OnBatchSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SHMentholLookup = this;
			}
			else {
				e.Item.SHMentholLookup = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SKUCommonPart", Id="0x010014C98F440FB04C679F1D9D39ACC92D8A")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SKUCigarette))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SKUCutfiller))]
	public partial class SKUCommonPart : Element {
		
		private string _sKU;
		
		private System.Nullable<bool> _iPRMaterial;
		
		private System.Nullable<ProductType> _productType;
		
		private Microsoft.SharePoint.Linq.EntitySet<Batch> _batch;
		
		private Microsoft.SharePoint.Linq.EntityRef<Format> _formatLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<Dokument> _sKULibraryLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SKUCommonPart() {
			this._batch = new Microsoft.SharePoint.Linq.EntitySet<Batch>();
			this._batch.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchSync);
			this._batch.OnChanged += new System.EventHandler(this.OnBatchChanged);
			this._batch.OnChanging += new System.EventHandler(this.OnBatchChanging);
			this._formatLookup = new Microsoft.SharePoint.Linq.EntityRef<Format>();
			this._formatLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Format>>(this.OnFormatLookupSync);
			this._formatLookup.OnChanged += new System.EventHandler(this.OnFormatLookupChanged);
			this._formatLookup.OnChanging += new System.EventHandler(this.OnFormatLookupChanging);
			this._sKULibraryLookup = new Microsoft.SharePoint.Linq.EntityRef<Dokument>();
			this._sKULibraryLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument>>(this.OnSKULibraryLookupSync);
			this._sKULibraryLookup.OnChanged += new System.EventHandler(this.OnSKULibraryLookupChanged);
			this._sKULibraryLookup.OnChanging += new System.EventHandler(this.OnSKULibraryLookupChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// SKU
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		/// <summary>
		/// IPR Material
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRMaterial", Storage="_iPRMaterial", FieldType="Boolean")]
		public System.Nullable<bool> IPRMaterial {
			get {
				return this._iPRMaterial;
			}
			set {
				if ((value != this._iPRMaterial)) {
					this.OnPropertyChanging("IPRMaterial", this._iPRMaterial);
					this._iPRMaterial = value;
					this.OnPropertyChanged("IPRMaterial");
				}
			}
		}
		
		/// <summary>
		/// Material Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SKUIndex", Storage="_batch", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Batch")]
		public Microsoft.SharePoint.Linq.EntitySet<Batch> Batch {
			get {
				return this._batch;
			}
			set {
				this._batch.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FormatIndex", Storage="_formatLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Format")]
		public Format FormatLookup {
			get {
				return this._formatLookup.GetEntity();
			}
			set {
				this._formatLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SKULibraryIndex", Storage="_sKULibraryLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SKU Library")]
		public Dokument SKULibraryLookup {
			get {
				return this._sKULibraryLookup.GetEntity();
			}
			set {
				this._sKULibraryLookup.SetEntity(value);
			}
		}
		
		private void OnBatchChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Batch", this._batch.Clone());
		}
		
		private void OnBatchChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Batch");
		}
		
		private void OnBatchSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SKULookup = this;
			}
			else {
				e.Item.SKULookup = null;
			}
		}
		
		private void OnFormatLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FormatLookup", this._formatLookup.Clone());
		}
		
		private void OnFormatLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FormatLookup");
		}
		
		private void OnFormatLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Format> e) {
		}
		
		private void OnSKULibraryLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SKULibraryLookup", this._sKULibraryLookup.Clone());
		}
		
		private void OnSKULibraryLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SKULibraryLookup");
		}
		
		private void OnSKULibraryLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Stock", Id="0x01001A55BDA09C39724B9FAF87A859B9D82C")]
	public partial class Stock : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<Dokument> _stockLibraryLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<Dokument> _balanceLibraryLookup;
		
		private Microsoft.SharePoint.Linq.EntitySet<StockEntry> _stockEntry;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Stock() {
			this._stockLibraryLookup = new Microsoft.SharePoint.Linq.EntityRef<Dokument>();
			this._stockLibraryLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument>>(this.OnStockLibraryLookupSync);
			this._stockLibraryLookup.OnChanged += new System.EventHandler(this.OnStockLibraryLookupChanged);
			this._stockLibraryLookup.OnChanging += new System.EventHandler(this.OnStockLibraryLookupChanging);
			this._balanceLibraryLookup = new Microsoft.SharePoint.Linq.EntityRef<Dokument>();
			this._balanceLibraryLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument>>(this.OnBalanceLibraryLookupSync);
			this._balanceLibraryLookup.OnChanged += new System.EventHandler(this.OnBalanceLibraryLookupChanged);
			this._balanceLibraryLookup.OnChanging += new System.EventHandler(this.OnBalanceLibraryLookupChanging);
			this._stockEntry = new Microsoft.SharePoint.Linq.EntitySet<StockEntry>();
			this._stockEntry.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<StockEntry>>(this.OnStockEntrySync);
			this._stockEntry.OnChanged += new System.EventHandler(this.OnStockEntryChanged);
			this._stockEntry.OnChanging += new System.EventHandler(this.OnStockEntryChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="StockLibraryIndex", Storage="_stockLibraryLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Stock Library")]
		public Dokument StockLibraryLookup {
			get {
				return this._stockLibraryLookup.GetEntity();
			}
			set {
				this._stockLibraryLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BalanceLibraryIndex", Storage="_balanceLibraryLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Balance Library")]
		public Dokument BalanceLibraryLookup {
			get {
				return this._balanceLibraryLookup.GetEntity();
			}
			set {
				this._balanceLibraryLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="StockIndex", Storage="_stockEntry", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Stock Entry")]
		public Microsoft.SharePoint.Linq.EntitySet<StockEntry> StockEntry {
			get {
				return this._stockEntry;
			}
			set {
				this._stockEntry.Assign(value);
			}
		}
		
		private void OnStockLibraryLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("StockLibraryLookup", this._stockLibraryLookup.Clone());
		}
		
		private void OnStockLibraryLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("StockLibraryLookup");
		}
		
		private void OnStockLibraryLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument> e) {
		}
		
		private void OnBalanceLibraryLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BalanceLibraryLookup", this._balanceLibraryLookup.Clone());
		}
		
		private void OnBalanceLibraryLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BalanceLibraryLookup");
		}
		
		private void OnBalanceLibraryLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument> e) {
		}
		
		private void OnStockEntryChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("StockEntry", this._stockEntry.Clone());
		}
		
		private void OnStockEntryChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("StockEntry");
		}
		
		private void OnStockEntrySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<StockEntry> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.StockListLookup = this;
			}
			else {
				e.Item.StockListLookup = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="StockEntry", Id="0x0100060FE33D5AAE473ABDC2777AE86FED6C")]
	public partial class StockEntry : Element {
		
		private string _sKU;
		
		private string _location;
		
		private string _units;
		
		private string _batch;
		
		private System.Nullable<double> _unrestricted;
		
		private System.Nullable<double> _inQualityInsp;
		
		private System.Nullable<double> _restrictedUse;
		
		private System.Nullable<double> _blocked;
		
		private System.Nullable<double> _quantity;
		
		private System.Nullable<bool> _iPRType;
		
		private System.Nullable<ProductType> _productType;
		
		private Microsoft.SharePoint.Linq.EntityRef<Batch> _batchLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<Stock> _stockListLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public StockEntry() {
			this._batchLookup = new Microsoft.SharePoint.Linq.EntityRef<Batch>();
			this._batchLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchLookupSync);
			this._batchLookup.OnChanged += new System.EventHandler(this.OnBatchLookupChanged);
			this._batchLookup.OnChanging += new System.EventHandler(this.OnBatchLookupChanging);
			this._stockListLookup = new Microsoft.SharePoint.Linq.EntityRef<Stock>();
			this._stockListLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Stock>>(this.OnStockListLookupSync);
			this._stockListLookup.OnChanged += new System.EventHandler(this.OnStockListLookupChanged);
			this._stockListLookup.OnChanging += new System.EventHandler(this.OnStockListLookupChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// SKU
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SKU", Storage="_sKU", FieldType="Text")]
		public string SKU {
			get {
				return this._sKU;
			}
			set {
				if ((value != this._sKU)) {
					this.OnPropertyChanging("SKU", this._sKU);
					this._sKU = value;
					this.OnPropertyChanged("SKU");
				}
			}
		}
		
		/// <summary>
		/// StorLoc
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StorLoc", Storage="_location", FieldType="Text")]
		public string Location {
			get {
				return this._location;
			}
			set {
				if ((value != this._location)) {
					this.OnPropertyChanging("Location", this._location);
					this._location = value;
					this.OnPropertyChanged("Location");
				}
			}
		}
		
		/// <summary>
		/// j.m.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		/// <summary>
		/// Batch
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Batch", Storage="_batch", FieldType="Text")]
		public string Batch {
			get {
				return this._batch;
			}
			set {
				if ((value != this._batch)) {
					this.OnPropertyChanging("Batch", this._batch);
					this._batch = value;
					this.OnPropertyChanged("Batch");
				}
			}
		}
		
		/// <summary>
		/// Unrestricted
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Unrestricted", Storage="_unrestricted", FieldType="Number")]
		public System.Nullable<double> Unrestricted {
			get {
				return this._unrestricted;
			}
			set {
				if ((value != this._unrestricted)) {
					this.OnPropertyChanging("Unrestricted", this._unrestricted);
					this._unrestricted = value;
					this.OnPropertyChanged("Unrestricted");
				}
			}
		}
		
		/// <summary>
		/// InQualityInsp
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InQualityInsp", Storage="_inQualityInsp", FieldType="Number")]
		public System.Nullable<double> InQualityInsp {
			get {
				return this._inQualityInsp;
			}
			set {
				if ((value != this._inQualityInsp)) {
					this.OnPropertyChanging("InQualityInsp", this._inQualityInsp);
					this._inQualityInsp = value;
					this.OnPropertyChanged("InQualityInsp");
				}
			}
		}
		
		/// <summary>
		/// RestrictedUse
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RestrictedUse", Storage="_restrictedUse", FieldType="Number")]
		public System.Nullable<double> RestrictedUse {
			get {
				return this._restrictedUse;
			}
			set {
				if ((value != this._restrictedUse)) {
					this.OnPropertyChanging("RestrictedUse", this._restrictedUse);
					this._restrictedUse = value;
					this.OnPropertyChanged("RestrictedUse");
				}
			}
		}
		
		/// <summary>
		/// Blocked
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Blocked", Storage="_blocked", FieldType="Number")]
		public System.Nullable<double> Blocked {
			get {
				return this._blocked;
			}
			set {
				if ((value != this._blocked)) {
					this.OnPropertyChanging("Blocked", this._blocked);
					this._blocked = value;
					this.OnPropertyChanged("Blocked");
				}
			}
		}
		
		/// <summary>
		/// Quantity
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Quantity", Storage="_quantity", FieldType="Number")]
		public System.Nullable<double> Quantity {
			get {
				return this._quantity;
			}
			set {
				if ((value != this._quantity)) {
					this.OnPropertyChanging("Quantity", this._quantity);
					this._quantity = value;
					this.OnPropertyChanged("Quantity");
				}
			}
		}
		
		/// <summary>
		/// IPR Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IPRType", Storage="_iPRType", FieldType="Boolean")]
		public System.Nullable<bool> IPRType {
			get {
				return this._iPRType;
			}
			set {
				if ((value != this._iPRType)) {
					this.OnPropertyChanging("IPRType", this._iPRType);
					this._iPRType = value;
					this.OnPropertyChanged("IPRType");
				}
			}
		}
		
		/// <summary>
		/// Material Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BatchIndex", Storage="_batchLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Batch")]
		public Batch BatchLookup {
			get {
				return this._batchLookup.GetEntity();
			}
			set {
				this._batchLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="StockIndex", Storage="_stockListLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Stock")]
		public Stock StockListLookup {
			get {
				return this._stockListLookup.GetEntity();
			}
			set {
				this._stockListLookup.SetEntity(value);
			}
		}
		
		private void OnBatchLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BatchLookup", this._batchLookup.Clone());
		}
		
		private void OnBatchLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BatchLookup");
		}
		
		private void OnBatchLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
		}
		
		private void OnStockListLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("StockListLookup", this._stockListLookup.Clone());
		}
		
		private void OnStockListLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("StockListLookup");
		}
		
		private void OnStockListLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Stock> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.StockEntry.Add(this);
			}
			else {
				e.Item.StockEntry.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// It contains all relevant norms of tobacco usage for cigarette production. Tobacco consumption for the different formats will be entered into the system as the max and min numbers; the user should declare (select from list) an appropriate format for the norm. The list must contain information as to since when the norm has been valid and when it expires.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Usage", Id="0x01000E2260EFB66F324B9CC50EEEC274F5FD")]
	public partial class Usage : Element {
		
		private System.Nullable<double> _usageMin;
		
		private System.Nullable<double> _usageMax;
		
		private System.Nullable<double> _cTFUsageMin;
		
		private System.Nullable<double> _cTFUsageMax;
		
		private Microsoft.SharePoint.Linq.EntitySet<Batch> _batch;
		
		private Microsoft.SharePoint.Linq.EntityRef<Format> _formatLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Usage() {
			this._batch = new Microsoft.SharePoint.Linq.EntitySet<Batch>();
			this._batch.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchSync);
			this._batch.OnChanged += new System.EventHandler(this.OnBatchChanged);
			this._batch.OnChanging += new System.EventHandler(this.OnBatchChanging);
			this._formatLookup = new Microsoft.SharePoint.Linq.EntityRef<Format>();
			this._formatLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Format>>(this.OnFormatLookupSync);
			this._formatLookup.OnChanged += new System.EventHandler(this.OnFormatLookupChanged);
			this._formatLookup.OnChanging += new System.EventHandler(this.OnFormatLookupChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// UsageMin
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UsageMin", Storage="_usageMin", FieldType="Number")]
		public System.Nullable<double> UsageMin {
			get {
				return this._usageMin;
			}
			set {
				if ((value != this._usageMin)) {
					this.OnPropertyChanging("UsageMin", this._usageMin);
					this._usageMin = value;
					this.OnPropertyChanged("UsageMin");
				}
			}
		}
		
		/// <summary>
		/// UsageMax
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UsageMax", Storage="_usageMax", FieldType="Number")]
		public System.Nullable<double> UsageMax {
			get {
				return this._usageMax;
			}
			set {
				if ((value != this._usageMax)) {
					this.OnPropertyChanging("UsageMax", this._usageMax);
					this._usageMax = value;
					this.OnPropertyChanged("UsageMax");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CTFUsageMin", Storage="_cTFUsageMin", FieldType="Number")]
		public System.Nullable<double> CTFUsageMin {
			get {
				return this._cTFUsageMin;
			}
			set {
				if ((value != this._cTFUsageMin)) {
					this.OnPropertyChanging("CTFUsageMin", this._cTFUsageMin);
					this._cTFUsageMin = value;
					this.OnPropertyChanged("CTFUsageMin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CTFUsageMax", Storage="_cTFUsageMax", FieldType="Number")]
		public System.Nullable<double> CTFUsageMax {
			get {
				return this._cTFUsageMax;
			}
			set {
				if ((value != this._cTFUsageMax)) {
					this.OnPropertyChanging("CTFUsageMax", this._cTFUsageMax);
					this._cTFUsageMax = value;
					this.OnPropertyChanged("CTFUsageMax");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Usage.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Usage.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="UsageIndex", Storage="_batch", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Batch")]
		public Microsoft.SharePoint.Linq.EntitySet<Batch> Batch {
			get {
				return this._batch;
			}
			set {
				this._batch.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FormatIndex", Storage="_formatLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Format")]
		public Format FormatLookup {
			get {
				return this._formatLookup.GetEntity();
			}
			set {
				this._formatLookup.SetEntity(value);
			}
		}
		
		private void OnBatchChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Batch", this._batch.Clone());
		}
		
		private void OnBatchChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Batch");
		}
		
		private void OnBatchSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.UsageLookup = this;
			}
			else {
				e.Item.UsageLookup = null;
			}
		}
		
		private void OnFormatLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FormatLookup", this._formatLookup.Clone());
		}
		
		private void OnFormatLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FormatLookup");
		}
		
		private void OnFormatLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Format> e) {
		}
	}
	
	/// <summary>
	/// Warehouse
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Warehouse", Id="0x01001E57547208B49B46B4AA7CB4536B1A55")]
	public partial class Warehouse : Element {
		
		private System.Nullable<bool> _external;
		
		private System.Nullable<ProductType> _productType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Warehouse() {
			this.OnCreated();
		}
		
		/// <summary>
		/// External
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="External", Storage="_external", Required=true, FieldType="Boolean")]
		public System.Nullable<bool> External {
			get {
				return this._external;
			}
			set {
				if ((value != this._external)) {
					this.OnPropertyChanging("External", this._external);
					this._external = value;
					this.OnPropertyChanged("External");
				}
			}
		}
		
		/// <summary>
		/// Material Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Waste", Id="0x01002D6DCE3B847D5942ACDD176925283176")]
	public partial class Waste : Element {
		
		private System.Nullable<double> _wasteRatio;
		
		private System.Nullable<ProductType> _productType;
		
		private Microsoft.SharePoint.Linq.EntitySet<Batch> _batch;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Waste() {
			this._batch = new Microsoft.SharePoint.Linq.EntitySet<Batch>();
			this._batch.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchSync);
			this._batch.OnChanged += new System.EventHandler(this.OnBatchChanged);
			this._batch.OnChanging += new System.EventHandler(this.OnBatchChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// WasteRatio
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WasteRatio", Storage="_wasteRatio", FieldType="Number")]
		public System.Nullable<double> WasteRatio {
			get {
				return this._wasteRatio;
			}
			set {
				if ((value != this._wasteRatio)) {
					this.OnPropertyChanging("WasteRatio", this._wasteRatio);
					this._wasteRatio = value;
					this.OnPropertyChanged("WasteRatio");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Waste.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Waste.");
			}
		}
		
		/// <summary>
		/// Material Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ProductType", Storage="_productType", FieldType="Choice")]
		public System.Nullable<ProductType> ProductType {
			get {
				return this._productType;
			}
			set {
				if ((value != this._productType)) {
					this.OnPropertyChanging("ProductType", this._productType);
					this._productType = value;
					this.OnPropertyChanged("ProductType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="WasteIndex", Storage="_batch", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Batch")]
		public Microsoft.SharePoint.Linq.EntitySet<Batch> Batch {
			get {
				return this._batch;
			}
			set {
				this._batch.Assign(value);
			}
		}
		
		private void OnBatchChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Batch", this._batch.Clone());
		}
		
		private void OnBatchChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Batch");
		}
		
		private void OnBatchSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.WasteLookup = this;
			}
			else {
				e.Item.WasteLookup = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="BatchLib", Id="0x01010057CD1193DB9A48F4B4E6E9B55FBAC70A")]
	public partial class BatchLib : Dokument {
		
		private System.Nullable<bool> _oK;
		
		private string _comments;
		
		private Microsoft.SharePoint.Linq.EntitySet<Batch> _batch;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public BatchLib() {
			this._batch = new Microsoft.SharePoint.Linq.EntitySet<Batch>();
			this._batch.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch>>(this.OnBatchSync);
			this._batch.OnChanged += new System.EventHandler(this.OnBatchChanged);
			this._batch.OnChanging += new System.EventHandler(this.OnBatchChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchLibraryOK", Storage="_oK", FieldType="Boolean")]
		public System.Nullable<bool> OK {
			get {
				return this._oK;
			}
			set {
				if ((value != this._oK)) {
					this.OnPropertyChanging("OK", this._oK);
					this._oK = value;
					this.OnPropertyChanged("OK");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BatchLibraryComments", Storage="_comments", FieldType="Text")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BatchLibraryIndex", Storage="_batch", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Batch")]
		public Microsoft.SharePoint.Linq.EntitySet<Batch> Batch {
			get {
				return this._batch;
			}
			set {
				this._batch.Assign(value);
			}
		}
		
		private void OnBatchChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Batch", this._batch.Clone());
		}
		
		private void OnBatchChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Batch");
		}
		
		private void OnBatchSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Batch> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.BatchLibraryLookup = this;
			}
			else {
				e.Item.BatchLibraryLookup = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="InvoiceLib", Id="0x0101003054E4EBB5DE4C6391CA389A60DCD926")]
	public partial class InvoiceLib : Dokument {
		
		private string _billDoc;
		
		private System.Nullable<System.DateTime> _creationDate;
		
		private System.Nullable<bool> _oK;
		
		private System.Nullable<bool> _readOnly;
		
		private Microsoft.SharePoint.Linq.EntitySet<InvoiceContent> _invoiceContent;
		
		private Microsoft.SharePoint.Linq.EntityRef<Clearence> _clearenceListLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public InvoiceLib() {
			this._invoiceContent = new Microsoft.SharePoint.Linq.EntitySet<InvoiceContent>();
			this._invoiceContent.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceContent>>(this.OnInvoiceContentSync);
			this._invoiceContent.OnChanged += new System.EventHandler(this.OnInvoiceContentChanged);
			this._invoiceContent.OnChanging += new System.EventHandler(this.OnInvoiceContentChanging);
			this._clearenceListLookup = new Microsoft.SharePoint.Linq.EntityRef<Clearence>();
			this._clearenceListLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence>>(this.OnClearenceListLookupSync);
			this._clearenceListLookup.OnChanged += new System.EventHandler(this.OnClearenceListLookupChanged);
			this._clearenceListLookup.OnChanging += new System.EventHandler(this.OnClearenceListLookupChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// BillDoc
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BillDoc", Storage="_billDoc", FieldType="Text")]
		public string BillDoc {
			get {
				return this._billDoc;
			}
			set {
				if ((value != this._billDoc)) {
					this.OnPropertyChanging("BillDoc", this._billDoc);
					this._billDoc = value;
					this.OnPropertyChanged("BillDoc");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceCreationDate", Storage="_creationDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate {
			get {
				return this._creationDate;
			}
			set {
				if ((value != this._creationDate)) {
					this.OnPropertyChanging("CreationDate", this._creationDate);
					this._creationDate = value;
					this.OnPropertyChanged("CreationDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceLibraryStatus", Storage="_oK", FieldType="Boolean")]
		public System.Nullable<bool> OK {
			get {
				return this._oK;
			}
			set {
				if ((value != this._oK)) {
					this.OnPropertyChanging("OK", this._oK);
					this._oK = value;
					this.OnPropertyChanged("OK");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceLibraryReadOnly", Storage="_readOnly", FieldType="Boolean")]
		public System.Nullable<bool> ReadOnly {
			get {
				return this._readOnly;
			}
			set {
				if ((value != this._readOnly)) {
					this.OnPropertyChanging("ReadOnly", this._readOnly);
					this._readOnly = value;
					this.OnPropertyChanged("ReadOnly");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="InvoiceIndex", Storage="_invoiceContent", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Invoice Content")]
		public Microsoft.SharePoint.Linq.EntitySet<InvoiceContent> InvoiceContent {
			get {
				return this._invoiceContent;
			}
			set {
				this._invoiceContent.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ClearenceIndex", Storage="_clearenceListLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Clearence")]
		public Clearence ClearenceListLookup {
			get {
				return this._clearenceListLookup.GetEntity();
			}
			set {
				this._clearenceListLookup.SetEntity(value);
			}
		}
		
		private void OnInvoiceContentChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("InvoiceContent", this._invoiceContent.Clone());
		}
		
		private void OnInvoiceContentChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("InvoiceContent");
		}
		
		private void OnInvoiceContentSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<InvoiceContent> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.InvoiceLookup = this;
			}
			else {
				e.Item.InvoiceLookup = null;
			}
		}
		
		private void OnClearenceListLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ClearenceListLookup", this._clearenceListLookup.Clone());
		}
		
		private void OnClearenceListLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ClearenceListLookup");
		}
		
		private void OnClearenceListLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Clearence> e) {
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SADDocumentLib", Id="0x010100475F601A85C84D02B51F765E42311C86")]
	public partial class SADDocumentLib : Dokument {
		
		private System.Nullable<bool> _oK;
		
		private string _comments;
		
		private Microsoft.SharePoint.Linq.EntitySet<SADDocumentType> _sADDocumentType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SADDocumentLib() {
			this._sADDocumentType = new Microsoft.SharePoint.Linq.EntitySet<SADDocumentType>();
			this._sADDocumentType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType>>(this.OnSADDocumentTypeSync);
			this._sADDocumentType.OnChanged += new System.EventHandler(this.OnSADDocumentTypeChanged);
			this._sADDocumentType.OnChanging += new System.EventHandler(this.OnSADDocumentTypeChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDocumentLibraryOK", Storage="_oK", FieldType="Boolean")]
		public System.Nullable<bool> OK {
			get {
				return this._oK;
			}
			set {
				if ((value != this._oK)) {
					this.OnPropertyChanging("OK", this._oK);
					this._oK = value;
					this.OnPropertyChanged("OK");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SADDocumentLibraryComments", Storage="_comments", FieldType="Text")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SADDocumenLibrarytIndex", Storage="_sADDocumentType", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="SAD Document")]
		public Microsoft.SharePoint.Linq.EntitySet<SADDocumentType> SADDocumentType {
			get {
				return this._sADDocumentType;
			}
			set {
				this._sADDocumentType.Assign(value);
			}
		}
		
		private void OnSADDocumentTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SADDocumentType", this._sADDocumentType.Clone());
		}
		
		private void OnSADDocumentTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SADDocumentType");
		}
		
		private void OnSADDocumentTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SADDocumentType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SADDocumentLibraryLookup = this;
			}
			else {
				e.Item.SADDocumentLibraryLookup = null;
			}
		}
	}
	
	/// <summary>
	/// Balance Summary content type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="BalanceSummary", Id="0x0100BC0DDC1827F346ED911D777504830C5200673B96617EA2407484DB22020E9F5289")]
	public partial class BalanceSummary : ReportsCommonPart {
		
		private System.Nullable<double> _tobaccoInWarehouse;
		
		private System.Nullable<double> _tobaccoInCigarettesWarehouse;
		
		private System.Nullable<double> _tobaccoInCigarettesProduction;
		
		private System.Nullable<double> _tobaccoInCutfillerWarehouse;
		
		private System.Nullable<double> _balance;
		
		private Microsoft.SharePoint.Linq.EntityRef<Dokument> _balanceLibraryLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public BalanceSummary() {
			this._balanceLibraryLookup = new Microsoft.SharePoint.Linq.EntityRef<Dokument>();
			this._balanceLibraryLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument>>(this.OnBalanceLibraryLookupSync);
			this._balanceLibraryLookup.OnChanged += new System.EventHandler(this.OnBalanceLibraryLookupChanged);
			this._balanceLibraryLookup.OnChanging += new System.EventHandler(this.OnBalanceLibraryLookupChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInWarehouse", Storage="_tobaccoInWarehouse", FieldType="Number")]
		public System.Nullable<double> TobaccoInWarehouse {
			get {
				return this._tobaccoInWarehouse;
			}
			set {
				if ((value != this._tobaccoInWarehouse)) {
					this.OnPropertyChanging("TobaccoInWarehouse", this._tobaccoInWarehouse);
					this._tobaccoInWarehouse = value;
					this.OnPropertyChanged("TobaccoInWarehouse");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInCigarettesWarehouse", Storage="_tobaccoInCigarettesWarehouse", FieldType="Number")]
		public System.Nullable<double> TobaccoInCigarettesWarehouse {
			get {
				return this._tobaccoInCigarettesWarehouse;
			}
			set {
				if ((value != this._tobaccoInCigarettesWarehouse)) {
					this.OnPropertyChanging("TobaccoInCigarettesWarehouse", this._tobaccoInCigarettesWarehouse);
					this._tobaccoInCigarettesWarehouse = value;
					this.OnPropertyChanged("TobaccoInCigarettesWarehouse");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInCigarettesProduction", Storage="_tobaccoInCigarettesProduction", FieldType="Number")]
		public System.Nullable<double> TobaccoInCigarettesProduction {
			get {
				return this._tobaccoInCigarettesProduction;
			}
			set {
				if ((value != this._tobaccoInCigarettesProduction)) {
					this.OnPropertyChanging("TobaccoInCigarettesProduction", this._tobaccoInCigarettesProduction);
					this._tobaccoInCigarettesProduction = value;
					this.OnPropertyChanged("TobaccoInCigarettesProduction");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TobaccoInCutfillerWarehouse", Storage="_tobaccoInCutfillerWarehouse", FieldType="Number")]
		public System.Nullable<double> TobaccoInCutfillerWarehouse {
			get {
				return this._tobaccoInCutfillerWarehouse;
			}
			set {
				if ((value != this._tobaccoInCutfillerWarehouse)) {
					this.OnPropertyChanging("TobaccoInCutfillerWarehouse", this._tobaccoInCutfillerWarehouse);
					this._tobaccoInCutfillerWarehouse = value;
					this.OnPropertyChanged("TobaccoInCutfillerWarehouse");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Balance", Storage="_balance", FieldType="Number")]
		public System.Nullable<double> Balance {
			get {
				return this._balance;
			}
			set {
				if ((value != this._balance)) {
					this.OnPropertyChanging("Balance", this._balance);
					this._balance = value;
					this.OnPropertyChanged("Balance");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="BalanceLibraryIndex", Storage="_balanceLibraryLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Balance Library")]
		public Dokument BalanceLibraryLookup {
			get {
				return this._balanceLibraryLookup.GetEntity();
			}
			set {
				this._balanceLibraryLookup.SetEntity(value);
			}
		}
		
		private void OnBalanceLibraryLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("BalanceLibraryLookup", this._balanceLibraryLookup.Clone());
		}
		
		private void OnBalanceLibraryLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("BalanceLibraryLookup");
		}
		
		private void OnBalanceLibraryLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Dokument> e) {
		}
	}
	
	/// <summary>
	/// JSOX Summary content type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="JSOXSummary", Id="0x0100BC0DDC1827F346ED911D777504830C520093C91F91096944EAA9091C44F55FA587")]
	public partial class JSOXSummary : ReportsCommonPart {
		
		private string _oGLIntroduction;
		
		private System.Nullable<int> _balanceLookupIdentyfikator;
		
		private Microsoft.SharePoint.Linq.EntityRef<JSOX> _jSOXListLookup;
		
		private Microsoft.SharePoint.Linq.EntityRef<IPR> _iPRLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public JSOXSummary() {
			this._jSOXListLookup = new Microsoft.SharePoint.Linq.EntityRef<JSOX>();
			this._jSOXListLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOX>>(this.OnJSOXListLookupSync);
			this._jSOXListLookup.OnChanged += new System.EventHandler(this.OnJSOXListLookupChanged);
			this._jSOXListLookup.OnChanging += new System.EventHandler(this.OnJSOXListLookupChanging);
			this._iPRLookup = new Microsoft.SharePoint.Linq.EntityRef<IPR>();
			this._iPRLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR>>(this.OnIPRLookupSync);
			this._iPRLookup.OnChanged += new System.EventHandler(this.OnIPRLookupChanged);
			this._iPRLookup.OnChanging += new System.EventHandler(this.OnIPRLookupChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OGLIntroduction", Storage="_oGLIntroduction", FieldType="Text")]
		public string OGLIntroduction {
			get {
				return this._oGLIntroduction;
			}
			set {
				if ((value != this._oGLIntroduction)) {
					this.OnPropertyChanging("OGLIntroduction", this._oGLIntroduction);
					this._oGLIntroduction = value;
					this.OnPropertyChanged("OGLIntroduction");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BalanceIndex", Storage="_balanceLookupIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> BalanceLookupIdentyfikator {
			get {
				return this._balanceLookupIdentyfikator;
			}
			set {
				if ((value != this._balanceLookupIdentyfikator)) {
					this.OnPropertyChanging("BalanceLookupIdentyfikator", this._balanceLookupIdentyfikator);
					this._balanceLookupIdentyfikator = value;
					this.OnPropertyChanged("BalanceLookupIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="JSOXIndex", Storage="_jSOXListLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="JSOX")]
		public JSOX JSOXListLookup {
			get {
				return this._jSOXListLookup.GetEntity();
			}
			set {
				this._jSOXListLookup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="IPRIndex", Storage="_iPRLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="IPR")]
		public IPR IPRLookup {
			get {
				return this._iPRLookup.GetEntity();
			}
			set {
				this._iPRLookup.SetEntity(value);
			}
		}
		
		private void OnJSOXListLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("JSOXListLookup", this._jSOXListLookup.Clone());
		}
		
		private void OnJSOXListLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("JSOXListLookup");
		}
		
		private void OnJSOXListLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<JSOX> e) {
		}
		
		private void OnIPRLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("IPRLookup", this._iPRLookup.Clone());
		}
		
		private void OnIPRLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("IPRLookup");
		}
		
		private void OnIPRLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<IPR> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.JSOXSummary.Add(this);
			}
			else {
				e.Item.JSOXSummary.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Cigarette SKU
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SKUCigarette", Id="0x010014C98F440FB04C679F1D9D39ACC92D8A0029E2E9BC132C4633B01B0DF733A64ADA")]
	public partial class SKUCigarette : SKUCommonPart {
		
		private string _family;
		
		private string _brand;
		
		private string _cigaretteLenght;
		
		private string _filterLenght;
		
		private string _primeMarket;
		
		private System.Nullable<bool> _mentholMaterial;
		
		private string _menthol;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SKUCigarette() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Family", Storage="_family", FieldType="Text")]
		public string Family {
			get {
				return this._family;
			}
			set {
				if ((value != this._family)) {
					this.OnPropertyChanging("Family", this._family);
					this._family = value;
					this.OnPropertyChanged("Family");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Brand", Storage="_brand", FieldType="Text")]
		public string Brand {
			get {
				return this._brand;
			}
			set {
				if ((value != this._brand)) {
					this.OnPropertyChanging("Brand", this._brand);
					this._brand = value;
					this.OnPropertyChanged("Brand");
				}
			}
		}
		
		/// <summary>
		/// CigaretteLenght
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CigaretteLenght", Storage="_cigaretteLenght", FieldType="Text")]
		public string CigaretteLenght {
			get {
				return this._cigaretteLenght;
			}
			set {
				if ((value != this._cigaretteLenght)) {
					this.OnPropertyChanging("CigaretteLenght", this._cigaretteLenght);
					this._cigaretteLenght = value;
					this.OnPropertyChanged("CigaretteLenght");
				}
			}
		}
		
		/// <summary>
		/// FilterLenght
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FilterLenght", Storage="_filterLenght", FieldType="Text")]
		public string FilterLenght {
			get {
				return this._filterLenght;
			}
			set {
				if ((value != this._filterLenght)) {
					this.OnPropertyChanging("FilterLenght", this._filterLenght);
					this._filterLenght = value;
					this.OnPropertyChanged("FilterLenght");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PrimeMarket", Storage="_primeMarket", FieldType="Text")]
		public string PrimeMarket {
			get {
				return this._primeMarket;
			}
			set {
				if ((value != this._primeMarket)) {
					this.OnPropertyChanging("PrimeMarket", this._primeMarket);
					this._primeMarket = value;
					this.OnPropertyChanged("PrimeMarket");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MentholMaterial", Storage="_mentholMaterial", FieldType="Boolean")]
		public System.Nullable<bool> MentholMaterial {
			get {
				return this._mentholMaterial;
			}
			set {
				if ((value != this._mentholMaterial)) {
					this.OnPropertyChanging("MentholMaterial", this._mentholMaterial);
					this._mentholMaterial = value;
					this.OnPropertyChanged("MentholMaterial");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Menthol", Storage="_menthol", FieldType="Text")]
		public string Menthol {
			get {
				return this._menthol;
			}
			set {
				if ((value != this._menthol)) {
					this.OnPropertyChanging("Menthol", this._menthol);
					this._menthol = value;
					this.OnPropertyChanged("Menthol");
				}
			}
		}
	}
	
	/// <summary>
	/// Cutfiller SKU
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SKUCutfiller", Id="0x010014C98F440FB04C679F1D9D39ACC92D8A00AE74B7010F534DB980D221D41D0BCBA1")]
	public partial class SKUCutfiller : SKUCommonPart {
		
		private string _units;
		
		private string _blendPurpose;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SKUCutfiller() {
			this.OnCreated();
		}
		
		/// <summary>
		/// j.m.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Units", Storage="_units", FieldType="Text")]
		public string Units {
			get {
				return this._units;
			}
			set {
				if ((value != this._units)) {
					this.OnPropertyChanging("Units", this._units);
					this._units = value;
					this.OnPropertyChanged("Units");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BlendPurpose", Storage="_blendPurpose", FieldType="Text")]
		public string BlendPurpose {
			get {
				return this._blendPurpose;
			}
			set {
				if ((value != this._blendPurpose)) {
					this.OnPropertyChanging("BlendPurpose", this._blendPurpose);
					this._blendPurpose = value;
					this.OnPropertyChanged("BlendPurpose");
				}
			}
		}
	}
	
	public enum ProductType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Cutfiller")]
		Cutfiller = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Cigarette")]
		Cigarette = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco")]
		Tobacco = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="IPRTobacco")]
		IPRTobacco = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Other")]
		Other = 32,
	}
	
	public enum BatchStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Preliminary")]
		Preliminary = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Progress")]
		Progress = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Intermediate")]
		Intermediate = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Final")]
		Final = 16,
	}
	
	public enum DisposalStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Dust")]
		Dust = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="SH Menthol")]
		SHMenthol = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waste")]
		Waste = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Overuse")]
		Overuse = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cigaretes warehouse")]
		TobaccoInCigaretesWarehouse = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cigaretes exported")]
		TobaccoInCigaretesExported = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cigaretes destination EU")]
		TobaccoInCigaretesDestinationEU = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cigaretes production")]
		TobaccoInCigaretesProduction = 256,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cutfiller warehouse")]
		TobaccoInCutfillerWarehouse = 512,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cutfiller exported")]
		TobaccoInCutfillerExported = 1024,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cutfiller destination EU")]
		TobaccoInCutfillerDestinationEU = 2048,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tobacco in cutfiller production")]
		TobaccoInCutfillerProduction = 4096,
	}
	
	public enum CustomsStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Not started")]
		NotStarted = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Started")]
		Started = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Finished")]
		Finished = 8,
	}
	
	public enum ClearingType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Partial winding-up")]
		PartialWindingUp = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Total winding-up")]
		TotalWindingUp = 4,
	}
	
	public enum Status : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="OK")]
		OK = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Batch not found")]
		BatchNotFound = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Not enough Qnt.")]
		NotEnoughQnt = 8,
	}
	
	public enum CompensationGood : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="tytoń")]
		Tytoń = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="krajanka")]
		Krajanka = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="papierosy")]
		Papierosy = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="pył tytoiowy lub odpad")]
		PyłTytoiowyLubOdpad = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="kartony")]
		Kartony = 32,
	}
}
