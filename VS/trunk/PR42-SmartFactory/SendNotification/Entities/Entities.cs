//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:2.0.50727.5448
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.SmartFactory.Shepherd.SendNotification.Entities {
	using System;
	
	
	public partial class EntitiesDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public EntitiesDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// Alarms And Events List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Alarms And Events")]
		public Microsoft.SharePoint.Linq.EntityList<AlarmsAndEvents> AlarmsAndEvents {
			get {
				return this.GetList<AlarmsAndEvents>("Alarms And Events");
			}
		}
		
		/// <summary>
		/// Carrier Performance Report List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Carrier Performance Report")]
		public Microsoft.SharePoint.Linq.EntityList<CarrierPerformanceReport> CarrierPerformanceReport {
			get {
				return this.GetList<CarrierPerformanceReport>("Carrier Performance Report");
			}
		}
		
		/// <summary>
		/// City List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="City")]
		public Microsoft.SharePoint.Linq.EntityList<CityType> City {
			get {
				return this.GetList<CityType>("City");
			}
		}
		
		/// <summary>
		/// Commodity List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Commodity")]
		public Microsoft.SharePoint.Linq.EntityList<CommodityCommodity> Commodity {
			get {
				return this.GetList<CommodityCommodity>("Commodity");
			}
		}
		
		/// <summary>
		/// Country List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Country")]
		public Microsoft.SharePoint.Linq.EntityList<CountryClass> Country {
			get {
				return this.GetList<CountryClass>("Country");
			}
		}
		
		/// <summary>
		/// Currency List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Currency")]
		public Microsoft.SharePoint.Linq.EntityList<Currency> Currency {
			get {
				return this.GetList<Currency>("Currency");
			}
		}
		
		/// <summary>
		/// Distribution List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Distribution List")]
		public Microsoft.SharePoint.Linq.EntityList<DistributionList> DistributionList {
			get {
				return this.GetList<DistributionList>("Distribution List");
			}
		}
		
		/// <summary>
		/// Driver List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Driver")]
		public Microsoft.SharePoint.Linq.EntityList<Driver> Driver {
			get {
				return this.GetList<Driver>("Driver");
			}
		}
		
		/// <summary>
		/// Drivers Team List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Drivers Team")]
		public Microsoft.SharePoint.Linq.EntityList<ShippingDriversTeam> DriversTeam {
			get {
				return this.GetList<ShippingDriversTeam>("Drivers Team");
			}
		}
		
		/// <summary>
		/// Escort PO Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntityList<EscortPO> EscortPOLibrary {
			get {
				return this.GetList<EscortPO>("Escort PO Library");
			}
		}
		
		/// <summary>
		/// Collect all application events.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Event Log List")]
		public Microsoft.SharePoint.Linq.EntityList<Anons> EventLogList {
			get {
				return this.GetList<Anons>("Event Log List");
			}
		}
		
		/// <summary>
		/// Freight Payer List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Freight Payer")]
		public Microsoft.SharePoint.Linq.EntityList<FreightPayer> FreightPayer {
			get {
				return this.GetList<FreightPayer>("Freight Payer");
			}
		}
		
		/// <summary>
		/// Freight PO Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntityList<FreightPO> FreightPOLibrary {
			get {
				return this.GetList<FreightPO>("Freight PO Library");
			}
		}
		
		/// <summary>
		/// Load Description List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Load Description")]
		public Microsoft.SharePoint.Linq.EntityList<LoadDescription> LoadDescription {
			get {
				return this.GetList<LoadDescription>("Load Description");
			}
		}
		
		/// <summary>
		/// Partner List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Partner")]
		public Microsoft.SharePoint.Linq.EntityList<Partner> Partner {
			get {
				return this.GetList<Partner>("Partner");
			}
		}
		
		/// <summary>
		/// Route List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Route")]
		public Microsoft.SharePoint.Linq.EntityList<Route> Route {
			get {
				return this.GetList<Route>("Route");
			}
		}
		
		/// <summary>
		/// Seal Protocol Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Seal Protocol Library")]
		public Microsoft.SharePoint.Linq.EntityList<SealProtocol> SealProtocolLibrary {
			get {
				return this.GetList<SealProtocol>("Seal Protocol Library");
			}
		}
		
		/// <summary>
		/// Security Escort Route List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Security Escort Route")]
		public Microsoft.SharePoint.Linq.EntityList<SecurityEscortCatalog> SecurityEscortRoute {
			get {
				return this.GetList<SecurityEscortCatalog>("Security Escort Route");
			}
		}
		
		/// <summary>
		/// Shipping List List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Shipping")]
		public Microsoft.SharePoint.Linq.EntityList<ShippingShipping> Shipping {
			get {
				return this.GetList<ShippingShipping>("Shipping");
			}
		}
		
		/// <summary>
		/// TimeSLot List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="TimeSlot")]
		public Microsoft.SharePoint.Linq.EntityList<TimeSlotTimeSlot> TimeSlot {
			get {
				return this.GetList<TimeSlotTimeSlot>("TimeSlot");
			}
		}
		
		/// <summary>
		/// Trailer List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Trailer")]
		public Microsoft.SharePoint.Linq.EntityList<Trailer> Trailer {
			get {
				return this.GetList<Trailer>("Trailer");
			}
		}
		
		/// <summary>
		/// Transport Unit Type List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Transport Unit Type")]
		public Microsoft.SharePoint.Linq.EntityList<TransportUnitTypeTranspotUnit> TransportUnitType {
			get {
				return this.GetList<TransportUnitTypeTranspotUnit>("Transport Unit Type");
			}
		}
		
		/// <summary>
		/// Truck List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Truck")]
		public Microsoft.SharePoint.Linq.EntityList<Truck> Truck {
			get {
				return this.GetList<Truck>("Truck");
			}
		}
		
		/// <summary>
		/// Warehouse List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Warehouse")]
		public Microsoft.SharePoint.Linq.EntityList<Warehouse> Warehouse {
			get {
				return this.GetList<Warehouse>("Warehouse");
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Element", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AlarmsAndEvents))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CarrierPerformanceReport))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CityType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Commodity))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CountryType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Currency))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DistributionList))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Driver))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ShippingDriversTeam))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Dokument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Anons))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(FreightPayer))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(LoadDescription))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Partner))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Route))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SecurityEscortCatalog))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Shipping))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Wydarzenie))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Trailer))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TranspotUnit))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Truck))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Warehouse))]
	public partial class Element : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _identyfikator;
		
		private System.Nullable<int> _wersja;
		
		private string _ścieżka;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		private string _tytuł;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Element() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_identyfikator", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Identyfikator {
			get {
				return this._identyfikator;
			}
			set {
				if ((value != this._identyfikator)) {
					this.OnPropertyChanging("Identyfikator", this._identyfikator);
					this._identyfikator = value;
					this.OnPropertyChanged("Identyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_wersja", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Wersja {
			get {
				return this._wersja;
			}
			set {
				if ((value != this._wersja)) {
					this.OnPropertyChanging("Wersja", this._wersja);
					this._wersja = value;
					this.OnPropertyChanged("Wersja");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_ścieżka", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Ścieżka {
			get {
				return this._ścieżka;
			}
			set {
				if ((value != this._ścieżka)) {
					this.OnPropertyChanging("Ścieżka", this._ścieżka);
					this._ścieżka = value;
					this.OnPropertyChanged("Ścieżka");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_tytuł", Required=true, FieldType="Text")]
		public virtual string Tytuł {
			get {
				return this._tytuł;
			}
			set {
				if ((value != this._tytuł)) {
					this.OnPropertyChanging("Tytuł", this._tytuł);
					this._tytuł = value;
					this.OnPropertyChanged("Tytuł");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Dokument", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EscortPO))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(FreightPO))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SealProtocol))]
	public partial class Dokument : Element {
		
		private string _nazwa;
		
		private string _dokumentZmodyfikowanyPrzez;
		
		private string _dokumentUtworzonyPrzez;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Dokument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_nazwa", Required=true, FieldType="File")]
		public string Nazwa {
			get {
				return this._nazwa;
			}
			set {
				if ((value != this._nazwa)) {
					this.OnPropertyChanging("Nazwa", this._nazwa);
					this._nazwa = value;
					this.OnPropertyChanged("Nazwa");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_dokumentZmodyfikowanyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentZmodyfikowanyPrzez {
			get {
				return this._dokumentZmodyfikowanyPrzez;
			}
			set {
				if ((value != this._dokumentZmodyfikowanyPrzez)) {
					this.OnPropertyChanging("DokumentZmodyfikowanyPrzez", this._dokumentZmodyfikowanyPrzez);
					this._dokumentZmodyfikowanyPrzez = value;
					this.OnPropertyChanged("DokumentZmodyfikowanyPrzez");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_dokumentUtworzonyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentUtworzonyPrzez {
			get {
				return this._dokumentUtworzonyPrzez;
			}
			set {
				if ((value != this._dokumentUtworzonyPrzez)) {
					this.OnPropertyChanging("DokumentUtworzonyPrzez", this._dokumentUtworzonyPrzez);
					this._dokumentUtworzonyPrzez = value;
					this.OnPropertyChanged("DokumentUtworzonyPrzez");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element wiadomości, stan lub inną krótką informację.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Anons", Id="0x0104")]
	public partial class Anons : Element {
		
		private string _treść;
		
		private System.Nullable<System.DateTime> _wygasa;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Anons() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_treść", FieldType="Note")]
		public string Treść {
			get {
				return this._treść;
			}
			set {
				if ((value != this._treść)) {
					this.OnPropertyChanging("Treść", this._treść);
					this._treść = value;
					this.OnPropertyChanged("Treść");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_wygasa", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Wygasa {
			get {
				return this._wygasa;
			}
			set {
				if ((value != this._wygasa)) {
					this.OnPropertyChanging("Wygasa", this._wygasa);
					this._wygasa = value;
					this.OnPropertyChanged("Wygasa");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowe spotkanie, termin ostateczny lub inne wydarzenie.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wydarzenie", Id="0x0102")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TimeSlot))]
	public partial class Wydarzenie : Element {
		
		private string _lokalizacja;
		
		protected System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		private string _description;
		
		private System.Nullable<bool> _wydarzenieCałodzienne;
		
		private System.Nullable<bool> _cykl;
		
		private System.Nullable<bool> _obszarRoboczy;
		
		private System.Nullable<Kategoria> _kategoria;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Wydarzenie() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Location", Storage="_lokalizacja", FieldType="Text")]
		public virtual string Lokalizacja {
			get {
				return this._lokalizacja;
			}
			set {
				if ((value != this._lokalizacja)) {
					this.OnPropertyChanging("Lokalizacja", this._lokalizacja);
					this._lokalizacja = value;
					this.OnPropertyChanged("Lokalizacja");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndDate", Storage="_endTime", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndTime {
			get {
				return this._endTime;
			}
			set {
				if ((value != this._endTime)) {
					this.OnPropertyChanging("EndTime", this._endTime);
					this._endTime = value;
					this.OnPropertyChanged("EndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_description", FieldType="Note")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fAllDayEvent", Storage="_wydarzenieCałodzienne", FieldType="AllDayEvent")]
		public virtual System.Nullable<bool> WydarzenieCałodzienne {
			get {
				return this._wydarzenieCałodzienne;
			}
			set {
				if ((value != this._wydarzenieCałodzienne)) {
					this.OnPropertyChanging("WydarzenieCałodzienne", this._wydarzenieCałodzienne);
					this._wydarzenieCałodzienne = value;
					this.OnPropertyChanged("WydarzenieCałodzienne");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fRecurrence", Storage="_cykl", FieldType="Recurrence")]
		public virtual System.Nullable<bool> Cykl {
			get {
				return this._cykl;
			}
			set {
				if ((value != this._cykl)) {
					this.OnPropertyChanging("Cykl", this._cykl);
					this._cykl = value;
					this.OnPropertyChanged("Cykl");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkspaceLink", Storage="_obszarRoboczy", FieldType="CrossProjectLink")]
		public virtual System.Nullable<bool> ObszarRoboczy {
			get {
				return this._obszarRoboczy;
			}
			set {
				if ((value != this._obszarRoboczy)) {
					this.OnPropertyChanging("ObszarRoboczy", this._obszarRoboczy);
					this._obszarRoboczy = value;
					this.OnPropertyChanged("ObszarRoboczy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_kategoria", FieldType="Choice")]
		public virtual System.Nullable<Kategoria> Kategoria {
			get {
				return this._kategoria;
			}
			set {
				if ((value != this._kategoria)) {
					this.OnPropertyChanging("Kategoria", this._kategoria);
					this._kategoria = value;
					this.OnPropertyChanged("Kategoria");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="AlarmsAndEvents", Id="0x010049AA7238FCE34BE18336F419AE924845")]
	public partial class AlarmsAndEvents : Element {
		
		private string _details;
		
		private string _owner;
		
		private System.Nullable<Priority> _priority;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingShipping> _shippingIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AlarmsAndEvents() {
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<ShippingShipping>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingShipping>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlarmAndEventDetails", Storage="_details", FieldType="Text")]
		public string Details {
			get {
				return this._details;
			}
			set {
				if ((value != this._details)) {
					this.OnPropertyChanging("Details", this._details);
					this._details = value;
					this.OnPropertyChanged("Details");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlarmAndEventOwner", Storage="_owner", FieldType="Text")]
		public string Owner {
			get {
				return this._owner;
			}
			set {
				if ((value != this._owner)) {
					this.OnPropertyChanging("Owner", this._owner);
					this._owner = value;
					this.OnPropertyChanged("Owner");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlarmPriority", Storage="_priority", FieldType="Choice")]
		public System.Nullable<Priority> Priority {
			get {
				return this._priority;
			}
			set {
				if ((value != this._priority)) {
					this.OnPropertyChanging("Priority", this._priority);
					this._priority = value;
					this.OnPropertyChanged("Priority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public ShippingShipping ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingShipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AlarmsAndEvents.Add(this);
			}
			else {
				e.Item.AlarmsAndEvents.Remove(this);
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AlarmsAndEvents.Add(this);
			}
			else {
				e.Item.AlarmsAndEvents.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CarrierPerformanceReport", Id="0x0100BB5037BBD6ED46B98AC227A358889AFA")]
	public partial class CarrierPerformanceReport : Element {
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<double> _numberTUOrdered;
		
		private System.Nullable<double> _numberTUOnTime;
		
		private System.Nullable<double> _numberTUDelayed;
		
		private System.Nullable<double> _numberTUDelayed1Hour;
		
		private System.Nullable<double> _numberTUNotDeliveredNotShowingUp;
		
		private System.Nullable<double> _numberTURejectedBadQuality;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _carrier;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CarrierPerformanceReport() {
			this._carrier = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._carrier.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnCarrierSync);
			this._carrier.OnChanged += new System.EventHandler(this.OnCarrierChanged);
			this._carrier.OnChanging += new System.EventHandler(this.OnCarrierChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarrierPerformanceReportDate", Storage="_date", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Date {
			get {
				return this._date;
			}
			set {
				if ((value != this._date)) {
					this.OnPropertyChanging("Date", this._date);
					this._date = value;
					this.OnPropertyChanged("Date");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarrierPerformanceReportNumberOrdered", Storage="_numberTUOrdered", FieldType="Number")]
		public System.Nullable<double> NumberTUOrdered {
			get {
				return this._numberTUOrdered;
			}
			set {
				if ((value != this._numberTUOrdered)) {
					this.OnPropertyChanging("NumberTUOrdered", this._numberTUOrdered);
					this._numberTUOrdered = value;
					this.OnPropertyChanged("NumberTUOrdered");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarrierPerformanceReportNumberOnTime", Storage="_numberTUOnTime", FieldType="Number")]
		public System.Nullable<double> NumberTUOnTime {
			get {
				return this._numberTUOnTime;
			}
			set {
				if ((value != this._numberTUOnTime)) {
					this.OnPropertyChanging("NumberTUOnTime", this._numberTUOnTime);
					this._numberTUOnTime = value;
					this.OnPropertyChanged("NumberTUOnTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarrierPerformanceReportNumberDelayed", Storage="_numberTUDelayed", FieldType="Number")]
		public System.Nullable<double> NumberTUDelayed {
			get {
				return this._numberTUDelayed;
			}
			set {
				if ((value != this._numberTUDelayed)) {
					this.OnPropertyChanging("NumberTUDelayed", this._numberTUDelayed);
					this._numberTUDelayed = value;
					this.OnPropertyChanged("NumberTUDelayed");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarrierPerformanceReportNumberDelayed1h", Storage="_numberTUDelayed1Hour", FieldType="Number")]
		public System.Nullable<double> NumberTUDelayed1Hour {
			get {
				return this._numberTUDelayed1Hour;
			}
			set {
				if ((value != this._numberTUDelayed1Hour)) {
					this.OnPropertyChanging("NumberTUDelayed1Hour", this._numberTUDelayed1Hour);
					this._numberTUDelayed1Hour = value;
					this.OnPropertyChanged("NumberTUDelayed1Hour");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarrierPerformanceReportNumberNotShowingUp", Storage="_numberTUNotDeliveredNotShowingUp", FieldType="Number")]
		public System.Nullable<double> NumberTUNotDeliveredNotShowingUp {
			get {
				return this._numberTUNotDeliveredNotShowingUp;
			}
			set {
				if ((value != this._numberTUNotDeliveredNotShowingUp)) {
					this.OnPropertyChanging("NumberTUNotDeliveredNotShowingUp", this._numberTUNotDeliveredNotShowingUp);
					this._numberTUNotDeliveredNotShowingUp = value;
					this.OnPropertyChanged("NumberTUNotDeliveredNotShowingUp");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarrierPerformanceReportNumberRejectedBadQuality", Storage="_numberTURejectedBadQuality", FieldType="Number")]
		public System.Nullable<double> NumberTURejectedBadQuality {
			get {
				return this._numberTURejectedBadQuality;
			}
			set {
				if ((value != this._numberTURejectedBadQuality)) {
					this.OnPropertyChanging("NumberTURejectedBadQuality", this._numberTURejectedBadQuality);
					this._numberTURejectedBadQuality = value;
					this.OnPropertyChanged("NumberTURejectedBadQuality");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CarrierPerformanceReport2PartnerTitle", Storage="_carrier", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner Carrier {
			get {
				return this._carrier.GetEntity();
			}
			set {
				this._carrier.SetEntity(value);
			}
		}
		
		private void OnCarrierChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Carrier", this._carrier.Clone());
		}
		
		private void OnCarrierChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Carrier");
		}
		
		private void OnCarrierSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CarrierPerformanceReport.Add(this);
			}
			else {
				e.Item.CarrierPerformanceReport.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CityType", Id="0x01003C7CE387CDAEA94B89FEB3FC6264FB71")]
	public partial class CityType : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<CountryClass> _countryName;
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CityType() {
			this._countryName = new Microsoft.SharePoint.Linq.EntityRef<CountryClass>();
			this._countryName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryClass>>(this.OnCountryNameSync);
			this._countryName.OnChanged += new System.EventHandler(this.OnCountryNameChanged);
			this._countryName.OnChanging += new System.EventHandler(this.OnCountryNameChanging);
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CountryTitle", Storage="_countryName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Country")]
		public CountryClass CountryName {
			get {
				return this._countryName.GetEntity();
			}
			set {
				this._countryName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2CityTitle", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2City", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnCountryNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CountryName", this._countryName.Clone());
		}
		
		private void OnCountryNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CountryName");
		}
		
		private void OnCountryNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryClass> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CityType.Add(this);
			}
			else {
				e.Item.CityType.Remove(this);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CityName = this;
			}
			else {
				e.Item.CityName = null;
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.City = this;
			}
			else {
				e.Item.City = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Commodity", Id="0x01003A76AB24637A7541B0D982B65D5916CE")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CommodityCommodity))]
	public partial class Commodity : Element {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Commodity() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CountryType", Id="0x0100CE031DC456C86C409854D818EDA7E1F3")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CountryClass))]
	public partial class CountryType : Element {
		
		private string _group;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CountryType() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CountryGroup", Storage="_group", FieldType="Text")]
		public string Group {
			get {
				return this._group;
			}
			set {
				if ((value != this._group)) {
					this.OnPropertyChanging("Group", this._group);
					this._group = value;
					this.OnPropertyChanged("Group");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Currency", Id="0x010024C2D44B310A47EDB90969B622490CF9")]
	public partial class Currency : Element {
		
		private System.Nullable<double> _exchangeRate;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping0;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping1;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping2;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Currency() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._shipping0 = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShipping0Sync);
			this._shipping0.OnChanged += new System.EventHandler(this.OnShipping0Changed);
			this._shipping0.OnChanging += new System.EventHandler(this.OnShipping0Changing);
			this._shipping1 = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShipping1Sync);
			this._shipping1.OnChanged += new System.EventHandler(this.OnShipping1Changed);
			this._shipping1.OnChanging += new System.EventHandler(this.OnShipping1Changing);
			this._shipping2 = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping2.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShipping2Sync);
			this._shipping2.OnChanged += new System.EventHandler(this.OnShipping2Changed);
			this._shipping2.OnChanging += new System.EventHandler(this.OnShipping2Changing);
			this.OnCreated();
		}
		
		/// <summary>
		/// Exchange Rate
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExchangeRate", Storage="_exchangeRate", FieldType="Number")]
		public System.Nullable<double> ExchangeRate {
			get {
				return this._exchangeRate;
			}
			set {
				if ((value != this._exchangeRate)) {
					this.OnPropertyChanging("ExchangeRate", this._exchangeRate);
					this._exchangeRate = value;
					this.OnPropertyChanged("ExchangeRate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForAdditionalCosts", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForFreight", Storage="_shipping0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping0 {
			get {
				return this._shipping0;
			}
			set {
				this._shipping0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForEscort", Storage="_shipping1", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping1 {
			get {
				return this._shipping1;
			}
			set {
				this._shipping1.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForTotalCostsPerKU", Storage="_shipping2", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping2 {
			get {
				return this._shipping2;
			}
			set {
				this._shipping2.Assign(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AdditionalCostsCurrency = this;
			}
			else {
				e.Item.AdditionalCostsCurrency = null;
			}
		}
		
		private void OnShipping0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping0", this._shipping0.Clone());
		}
		
		private void OnShipping0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping0");
		}
		
		private void OnShipping0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightCostsCurrency = this;
			}
			else {
				e.Item.FreightCostsCurrency = null;
			}
		}
		
		private void OnShipping1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping1", this._shipping1.Clone());
		}
		
		private void OnShipping1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping1");
		}
		
		private void OnShipping1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortCostsCurrency = this;
			}
			else {
				e.Item.EscortCostsCurrency = null;
			}
		}
		
		private void OnShipping2Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2", this._shipping2.Clone());
		}
		
		private void OnShipping2Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2");
		}
		
		private void OnShipping2Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TotalCostsPerKUCurrency = this;
			}
			else {
				e.Item.TotalCostsPerKUCurrency = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="DistributionList", Id="0x01009EC30F7F369D427D825C9478610D3E58")]
	public partial class DistributionList : Element {
		
		private string _eMail;
		
		private System.Nullable<ShepherdRole> _shepherdRole;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DistributionList() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailAddress", Storage="_eMail", FieldType="Text")]
		public string EMail {
			get {
				return this._eMail;
			}
			set {
				if ((value != this._eMail)) {
					this.OnPropertyChanging("EMail", this._eMail);
					this._eMail = value;
					this.OnPropertyChanged("EMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShepherdRole", Storage="_shepherdRole", FieldType="Choice")]
		public System.Nullable<ShepherdRole> ShepherdRole {
			get {
				return this._shepherdRole;
			}
			set {
				if ((value != this._shepherdRole)) {
					this.OnPropertyChanging("ShepherdRole", this._shepherdRole);
					this._shepherdRole = value;
					this.OnPropertyChanged("ShepherdRole");
				}
			}
		}
	}
	
	/// <summary>
	/// Driver
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Driver", Id="0x0100B0982F01816047B1ABFF933B9F49B5DB")]
	public partial class Driver : Element {
		
		private string _identityDocumentNumber;
		
		private string _numerTelefonuKomórkowego;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> _shippingDriversTeam;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Driver() {
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this._shippingDriversTeam = new Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam>();
			this._shippingDriversTeam.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam>>(this.OnShippingDriversTeamSync);
			this._shippingDriversTeam.OnChanged += new System.EventHandler(this.OnShippingDriversTeamChanged);
			this._shippingDriversTeam.OnChanging += new System.EventHandler(this.OnShippingDriversTeamChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IdentityDocumentNumber", Storage="_identityDocumentNumber", FieldType="Text")]
		public string IdentityDocumentNumber {
			get {
				return this._identityDocumentNumber;
			}
			set {
				if ((value != this._identityDocumentNumber)) {
					this.OnPropertyChanging("IdentityDocumentNumber", this._identityDocumentNumber);
					this._identityDocumentNumber = value;
					this.OnPropertyChanged("IdentityDocumentNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CellPhone", Storage="_numerTelefonuKomórkowego", FieldType="Text")]
		public string NumerTelefonuKomórkowego {
			get {
				return this._numerTelefonuKomórkowego;
			}
			set {
				if ((value != this._numerTelefonuKomórkowego)) {
					this.OnPropertyChanging("NumerTelefonuKomórkowego", this._numerTelefonuKomórkowego);
					this._numerTelefonuKomórkowego = value;
					this.OnPropertyChanged("NumerTelefonuKomórkowego");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Driver.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Driver.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Driver2PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DriverTitle", Storage="_shippingDriversTeam", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Drivers Team")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> ShippingDriversTeam {
			get {
				return this._shippingDriversTeam;
			}
			set {
				this._shippingDriversTeam.Assign(value);
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Driver.Add(this);
			}
			else {
				e.Item.Driver.Remove(this);
			}
		}
		
		private void OnShippingDriversTeamChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingDriversTeam", this._shippingDriversTeam.Clone());
		}
		
		private void OnShippingDriversTeamChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingDriversTeam");
		}
		
		private void OnShippingDriversTeamSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Driver = this;
			}
			else {
				e.Item.Driver = null;
			}
		}
	}
	
	/// <summary>
	/// Drivers Team
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ShippingDriversTeam", Id="0x01000A5D8B5F3F67453882811C27556D5D30")]
	public partial class ShippingDriversTeam : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<Driver> _driver;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingShipping> _shippingIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ShippingDriversTeam() {
			this._driver = new Microsoft.SharePoint.Linq.EntityRef<Driver>();
			this._driver.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Driver>>(this.OnDriverSync);
			this._driver.OnChanged += new System.EventHandler(this.OnDriverChanged);
			this._driver.OnChanging += new System.EventHandler(this.OnDriverChanging);
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<ShippingShipping>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingShipping>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this.OnCreated();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości ShippingDriversTeam.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości ShippingDriversTeam.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DriverTitle", Storage="_driver", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Driver")]
		public Driver Driver {
			get {
				return this._driver.GetEntity();
			}
			set {
				this._driver.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public ShippingShipping ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		private void OnDriverChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Driver", this._driver.Clone());
		}
		
		private void OnDriverChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Driver");
		}
		
		private void OnDriverSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Driver> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingDriversTeam.Add(this);
			}
			else {
				e.Item.ShippingDriversTeam.Remove(this);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingShipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingDriversTeam.Add(this);
			}
			else {
				e.Item.ShippingDriversTeam.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="FreightPayer", Id="0x01002BD66F0631854603A0815888852526D0")]
	public partial class FreightPayer : Element {
		
		private string _company;
		
		private string _address;
		
		private string _kodPocztowy;
		
		private string _miasto;
		
		private string _krajRegion;
		
		private string _nIPVATNo;
		
		private string _sendInvoiceTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public FreightPayer() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PayerName", Storage="_company", FieldType="Text")]
		public string Company {
			get {
				return this._company;
			}
			set {
				if ((value != this._company)) {
					this.OnPropertyChanging("Company", this._company);
					this._company = value;
					this.OnPropertyChanged("Company");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompanyAddress", Storage="_address", FieldType="Text")]
		public string Address {
			get {
				return this._address;
			}
			set {
				if ((value != this._address)) {
					this.OnPropertyChanging("Address", this._address);
					this._address = value;
					this.OnPropertyChanged("Address");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkZip", Storage="_kodPocztowy", FieldType="Text")]
		public string KodPocztowy {
			get {
				return this._kodPocztowy;
			}
			set {
				if ((value != this._kodPocztowy)) {
					this.OnPropertyChanging("KodPocztowy", this._kodPocztowy);
					this._kodPocztowy = value;
					this.OnPropertyChanged("KodPocztowy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCity", Storage="_miasto", FieldType="Text")]
		public string Miasto {
			get {
				return this._miasto;
			}
			set {
				if ((value != this._miasto)) {
					this.OnPropertyChanging("Miasto", this._miasto);
					this._miasto = value;
					this.OnPropertyChanged("Miasto");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCountry", Storage="_krajRegion", FieldType="Text")]
		public string KrajRegion {
			get {
				return this._krajRegion;
			}
			set {
				if ((value != this._krajRegion)) {
					this.OnPropertyChanging("KrajRegion", this._krajRegion);
					this._krajRegion = value;
					this.OnPropertyChanged("KrajRegion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NIP", Storage="_nIPVATNo", FieldType="Text")]
		public string NIPVATNo {
			get {
				return this._nIPVATNo;
			}
			set {
				if ((value != this._nIPVATNo)) {
					this.OnPropertyChanging("NIPVATNo", this._nIPVATNo);
					this._nIPVATNo = value;
					this.OnPropertyChanged("NIPVATNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SendInvoiceToMultiline", Storage="_sendInvoiceTo", FieldType="Note")]
		public string SendInvoiceTo {
			get {
				return this._sendInvoiceTo;
			}
			set {
				if ((value != this._sendInvoiceTo)) {
					this.OnPropertyChanging("SendInvoiceTo", this._sendInvoiceTo);
					this._sendInvoiceTo = value;
					this.OnPropertyChanged("SendInvoiceTo");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="LoadDescription", Id="0x0100F5C0C5AAA44E47B1A7CCFECEE1E8E94E")]
	public partial class LoadDescription : Element {
		
		private string _deliveryNumber;
		
		private System.Nullable<double> _goodsQuantity;
		
		private System.Nullable<double> _numberOfPallets;
		
		private string _cMRNumber;
		
		private string _invoiceNumber;
		
		private System.Nullable<PalletType> _palletType;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingShipping> _shippingIndex;
		
		private System.Nullable<int> _marketIdentyfikator;
		
		private string _marketTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity> _commodity;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public LoadDescription() {
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<ShippingShipping>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingShipping>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this._commodity = new Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity>();
			this._commodity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity>>(this.OnCommoditySync);
			this._commodity.OnChanged += new System.EventHandler(this.OnCommodityChanged);
			this._commodity.OnChanging += new System.EventHandler(this.OnCommodityChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DeliveryNumber", Storage="_deliveryNumber", FieldType="Text")]
		public string DeliveryNumber {
			get {
				return this._deliveryNumber;
			}
			set {
				if ((value != this._deliveryNumber)) {
					this.OnPropertyChanging("DeliveryNumber", this._deliveryNumber);
					this._deliveryNumber = value;
					this.OnPropertyChanged("DeliveryNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsQuantity", Storage="_goodsQuantity", FieldType="Number")]
		public System.Nullable<double> GoodsQuantity {
			get {
				return this._goodsQuantity;
			}
			set {
				if ((value != this._goodsQuantity)) {
					this.OnPropertyChanging("GoodsQuantity", this._goodsQuantity);
					this._goodsQuantity = value;
					this.OnPropertyChanged("GoodsQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NumberOfPallets", Storage="_numberOfPallets", FieldType="Number")]
		public System.Nullable<double> NumberOfPallets {
			get {
				return this._numberOfPallets;
			}
			set {
				if ((value != this._numberOfPallets)) {
					this.OnPropertyChanging("NumberOfPallets", this._numberOfPallets);
					this._numberOfPallets = value;
					this.OnPropertyChanged("NumberOfPallets");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CMRNumber", Storage="_cMRNumber", FieldType="Text")]
		public string CMRNumber {
			get {
				return this._cMRNumber;
			}
			set {
				if ((value != this._cMRNumber)) {
					this.OnPropertyChanging("CMRNumber", this._cMRNumber);
					this._cMRNumber = value;
					this.OnPropertyChanged("CMRNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceNumber", Storage="_invoiceNumber", FieldType="Text")]
		public string InvoiceNumber {
			get {
				return this._invoiceNumber;
			}
			set {
				if ((value != this._invoiceNumber)) {
					this.OnPropertyChanging("InvoiceNumber", this._invoiceNumber);
					this._invoiceNumber = value;
					this.OnPropertyChanged("InvoiceNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PalletType", Storage="_palletType", FieldType="Choice")]
		public System.Nullable<PalletType> PalletType {
			get {
				return this._palletType;
			}
			set {
				if ((value != this._palletType)) {
					this.OnPropertyChanging("PalletType", this._palletType);
					this._palletType = value;
					this.OnPropertyChanged("PalletType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public ShippingShipping ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MarketTitle", Storage="_marketIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> MarketIdentyfikator {
			get {
				return this._marketIdentyfikator;
			}
			set {
				if ((value != this._marketIdentyfikator)) {
					this.OnPropertyChanging("MarketIdentyfikator", this._marketIdentyfikator);
					this._marketIdentyfikator = value;
					this.OnPropertyChanged("MarketIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MarketTitle", Storage="_marketTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string MarketTitle {
			get {
				return this._marketTitle;
			}
			set {
				if ((value != this._marketTitle)) {
					this.OnPropertyChanging("MarketTitle", this._marketTitle);
					this._marketTitle = value;
					this.OnPropertyChanged("MarketTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2Commodity", Storage="_commodity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public CommodityCommodity Commodity {
			get {
				return this._commodity.GetEntity();
			}
			set {
				this._commodity.SetEntity(value);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingShipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.LoadDescription.Add(this);
			}
			else {
				e.Item.LoadDescription.Remove(this);
			}
		}
		
		private void OnCommodityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Commodity", this._commodity.Clone());
		}
		
		private void OnCommodityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Commodity");
		}
		
		private void OnCommoditySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.LoadDescription.Add(this);
			}
			else {
				e.Item.LoadDescription.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Partner", Id="0x010017A675502BE747DB9FB9DCB304429EEF")]
	public partial class Partner : Element {
		
		private string _vendorNumberFromSAP;
		
		private string _eMail;
		
		private string _telefonSłużbowy;
		
		private string _numerTelefonuKomórkowego;
		
		private System.Nullable<ServiceType> _serviceType;
		
		private Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> _alarmsAndEvents;
		
		private Microsoft.SharePoint.Linq.EntitySet<CarrierPerformanceReport> _carrierPerformanceReport;
		
		private Microsoft.SharePoint.Linq.EntitySet<Driver> _driver;
		
		private System.Nullable<int> _shepherdUserIdentyfikator;
		
		private string _shepherdUserTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Warehouse> _warehouse;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<Trailer> _trailer;
		
		private Microsoft.SharePoint.Linq.EntitySet<Truck> _truck;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Partner() {
			this._alarmsAndEvents = new Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents>();
			this._alarmsAndEvents.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents>>(this.OnAlarmsAndEventsSync);
			this._alarmsAndEvents.OnChanged += new System.EventHandler(this.OnAlarmsAndEventsChanged);
			this._alarmsAndEvents.OnChanging += new System.EventHandler(this.OnAlarmsAndEventsChanging);
			this._carrierPerformanceReport = new Microsoft.SharePoint.Linq.EntitySet<CarrierPerformanceReport>();
			this._carrierPerformanceReport.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CarrierPerformanceReport>>(this.OnCarrierPerformanceReportSync);
			this._carrierPerformanceReport.OnChanged += new System.EventHandler(this.OnCarrierPerformanceReportChanged);
			this._carrierPerformanceReport.OnChanging += new System.EventHandler(this.OnCarrierPerformanceReportChanging);
			this._driver = new Microsoft.SharePoint.Linq.EntitySet<Driver>();
			this._driver.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Driver>>(this.OnDriverSync);
			this._driver.OnChanged += new System.EventHandler(this.OnDriverChanged);
			this._driver.OnChanging += new System.EventHandler(this.OnDriverChanging);
			this._warehouse = new Microsoft.SharePoint.Linq.EntityRef<Warehouse>();
			this._warehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnWarehouseSync);
			this._warehouse.OnChanged += new System.EventHandler(this.OnWarehouseChanged);
			this._warehouse.OnChanging += new System.EventHandler(this.OnWarehouseChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._trailer = new Microsoft.SharePoint.Linq.EntitySet<Trailer>();
			this._trailer.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer>>(this.OnTrailerSync);
			this._trailer.OnChanged += new System.EventHandler(this.OnTrailerChanged);
			this._trailer.OnChanging += new System.EventHandler(this.OnTrailerChanging);
			this._truck = new Microsoft.SharePoint.Linq.EntitySet<Truck>();
			this._truck.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck>>(this.OnTruckSync);
			this._truck.OnChanged += new System.EventHandler(this.OnTruckChanged);
			this._truck.OnChanging += new System.EventHandler(this.OnTruckChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VendorNumber", Storage="_vendorNumberFromSAP", FieldType="Text")]
		public string VendorNumberFromSAP {
			get {
				return this._vendorNumberFromSAP;
			}
			set {
				if ((value != this._vendorNumberFromSAP)) {
					this.OnPropertyChanging("VendorNumberFromSAP", this._vendorNumberFromSAP);
					this._vendorNumberFromSAP = value;
					this.OnPropertyChanged("VendorNumberFromSAP");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailAddress", Storage="_eMail", FieldType="Text")]
		public string EMail {
			get {
				return this._eMail;
			}
			set {
				if ((value != this._eMail)) {
					this.OnPropertyChanging("EMail", this._eMail);
					this._eMail = value;
					this.OnPropertyChanged("EMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkPhone", Storage="_telefonSłużbowy", FieldType="Text")]
		public string TelefonSłużbowy {
			get {
				return this._telefonSłużbowy;
			}
			set {
				if ((value != this._telefonSłużbowy)) {
					this.OnPropertyChanging("TelefonSłużbowy", this._telefonSłużbowy);
					this._telefonSłużbowy = value;
					this.OnPropertyChanged("TelefonSłużbowy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CellPhone", Storage="_numerTelefonuKomórkowego", FieldType="Text")]
		public string NumerTelefonuKomórkowego {
			get {
				return this._numerTelefonuKomórkowego;
			}
			set {
				if ((value != this._numerTelefonuKomórkowego)) {
					this.OnPropertyChanging("NumerTelefonuKomórkowego", this._numerTelefonuKomórkowego);
					this._numerTelefonuKomórkowego = value;
					this.OnPropertyChanged("NumerTelefonuKomórkowego");
				}
			}
		}
		
		/// <summary>
		/// Service
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ServiceType", Storage="_serviceType", FieldType="Choice")]
		public System.Nullable<ServiceType> ServiceType {
			get {
				return this._serviceType;
			}
			set {
				if ((value != this._serviceType)) {
					this.OnPropertyChanging("ServiceType", this._serviceType);
					this._serviceType = value;
					this.OnPropertyChanged("ServiceType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2PartnerTitle", Storage="_alarmsAndEvents", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Alarms And Events")]
		public Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> AlarmsAndEvents {
			get {
				return this._alarmsAndEvents;
			}
			set {
				this._alarmsAndEvents.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CarrierPerformanceReport2PartnerTitle", Storage="_carrierPerformanceReport", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Carrier Performance Report")]
		public Microsoft.SharePoint.Linq.EntitySet<CarrierPerformanceReport> CarrierPerformanceReport {
			get {
				return this._carrierPerformanceReport;
			}
			set {
				this._carrierPerformanceReport.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Driver2PartnerTitle", Storage="_driver", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Driver")]
		public Microsoft.SharePoint.Linq.EntitySet<Driver> Driver {
			get {
				return this._driver;
			}
			set {
				this._driver.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShepherdUser", Storage="_shepherdUserIdentyfikator", Required=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ShepherdUserIdentyfikator {
			get {
				return this._shepherdUserIdentyfikator;
			}
			set {
				if ((value != this._shepherdUserIdentyfikator)) {
					this.OnPropertyChanging("ShepherdUserIdentyfikator", this._shepherdUserIdentyfikator);
					this._shepherdUserIdentyfikator = value;
					this.OnPropertyChanged("ShepherdUserIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShepherdUser", Storage="_shepherdUserTitle", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ShepherdUserTitle {
			get {
				return this._shepherdUserTitle;
			}
			set {
				if ((value != this._shepherdUserTitle)) {
					this.OnPropertyChanging("ShepherdUserTitle", this._shepherdUserTitle);
					this._shepherdUserTitle = value;
					this.OnPropertyChanged("ShepherdUserTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Partner2WarehouseTitle", Storage="_warehouse", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Warehouse")]
		public Warehouse Warehouse {
			get {
				return this._warehouse.GetEntity();
			}
			set {
				this._warehouse.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingOperationOutband2PartnerTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Trailer2PartnerTitle", Storage="_trailer", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Trailer")]
		public Microsoft.SharePoint.Linq.EntitySet<Trailer> Trailer {
			get {
				return this._trailer;
			}
			set {
				this._trailer.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Truck2PartnerTitle", Storage="_truck", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Truck")]
		public Microsoft.SharePoint.Linq.EntitySet<Truck> Truck {
			get {
				return this._truck;
			}
			set {
				this._truck.Assign(value);
			}
		}
		
		private void OnAlarmsAndEventsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AlarmsAndEvents", this._alarmsAndEvents.Clone());
		}
		
		private void OnAlarmsAndEventsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AlarmsAndEvents");
		}
		
		private void OnAlarmsAndEventsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.VendorName = this;
			}
			else {
				e.Item.VendorName = null;
			}
		}
		
		private void OnCarrierPerformanceReportChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CarrierPerformanceReport", this._carrierPerformanceReport.Clone());
		}
		
		private void OnCarrierPerformanceReportChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CarrierPerformanceReport");
		}
		
		private void OnCarrierPerformanceReportSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CarrierPerformanceReport> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Carrier = this;
			}
			else {
				e.Item.Carrier = null;
			}
		}
		
		private void OnDriverChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Driver", this._driver.Clone());
		}
		
		private void OnDriverChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Driver");
		}
		
		private void OnDriverSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Driver> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.VendorName = this;
			}
			else {
				e.Item.VendorName = null;
			}
		}
		
		private void OnWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Warehouse", this._warehouse.Clone());
		}
		
		private void OnWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Warehouse");
		}
		
		private void OnWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Partner.Add(this);
			}
			else {
				e.Item.Partner.Remove(this);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscortProvider = this;
			}
			else {
				e.Item.SecurityEscortProvider = null;
			}
		}
		
		private void OnTrailerChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Trailer", this._trailer.Clone());
		}
		
		private void OnTrailerChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Trailer");
		}
		
		private void OnTrailerSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.VendorName = this;
			}
			else {
				e.Item.VendorName = null;
			}
		}
		
		private void OnTruckChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Truck", this._truck.Clone());
		}
		
		private void OnTruckChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Truck");
		}
		
		private void OnTruckSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.VendorName = this;
			}
			else {
				e.Item.VendorName = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Route", Id="0x0100121B8B770545430A8B59B62D84C02C38")]
	public partial class Route : Element {
		
		private string _materialMaster;
		
		private string _remarkMM;
		
		private string _incoterm;
		
		private string _portOfDeparture;
		
		private string _cityOfDeparture;
		
		private System.Nullable<double> _transportCosts;
		
		private string _freightPO;
		
		private Microsoft.SharePoint.Linq.EntityRef<CityType> _cityName;
		
		private System.Nullable<int> _businessDescriptionIdentyfikator;
		
		private string _businessDescriptionTitle;
		
		private System.Nullable<int> _shipmentTypeIdentyfikator;
		
		private string _shipmentTypeTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _freightPayer;
		
		private Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity> _commodity;
		
		private System.Nullable<int> _sAPDestinationPlantIdentyfikator;
		
		private string _sAPDestinationPlantTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		private System.Nullable<int> _carrierIdentyfikator;
		
		private string _carrierTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<TransportUnitTypeTranspotUnit> _transportUnitType;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _currency;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Route() {
			this._cityName = new Microsoft.SharePoint.Linq.EntityRef<CityType>();
			this._cityName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnCityNameSync);
			this._cityName.OnChanged += new System.EventHandler(this.OnCityNameChanged);
			this._cityName.OnChanging += new System.EventHandler(this.OnCityNameChanging);
			this._freightPayer = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._freightPayer.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnFreightPayerSync);
			this._freightPayer.OnChanged += new System.EventHandler(this.OnFreightPayerChanged);
			this._freightPayer.OnChanging += new System.EventHandler(this.OnFreightPayerChanging);
			this._commodity = new Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity>();
			this._commodity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity>>(this.OnCommoditySync);
			this._commodity.OnChanged += new System.EventHandler(this.OnCommodityChanged);
			this._commodity.OnChanging += new System.EventHandler(this.OnCommodityChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this._transportUnitType = new Microsoft.SharePoint.Linq.EntityRef<TransportUnitTypeTranspotUnit>();
			this._transportUnitType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TransportUnitTypeTranspotUnit>>(this.OnTransportUnitTypeSync);
			this._transportUnitType.OnChanged += new System.EventHandler(this.OnTransportUnitTypeChanged);
			this._transportUnitType.OnChanging += new System.EventHandler(this.OnTransportUnitTypeChanging);
			this._currency = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._currency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnCurrencySync);
			this._currency.OnChanged += new System.EventHandler(this.OnCurrencyChanged);
			this._currency.OnChanging += new System.EventHandler(this.OnCurrencyChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MaterialMaster", Storage="_materialMaster", FieldType="Text")]
		public string MaterialMaster {
			get {
				return this._materialMaster;
			}
			set {
				if ((value != this._materialMaster)) {
					this.OnPropertyChanging("MaterialMaster", this._materialMaster);
					this._materialMaster = value;
					this.OnPropertyChanged("MaterialMaster");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RemarkMM", Storage="_remarkMM", FieldType="Text")]
		public string RemarkMM {
			get {
				return this._remarkMM;
			}
			set {
				if ((value != this._remarkMM)) {
					this.OnPropertyChanging("RemarkMM", this._remarkMM);
					this._remarkMM = value;
					this.OnPropertyChanged("RemarkMM");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Incoterm", Storage="_incoterm", FieldType="Text")]
		public string Incoterm {
			get {
				return this._incoterm;
			}
			set {
				if ((value != this._incoterm)) {
					this.OnPropertyChanging("Incoterm", this._incoterm);
					this._incoterm = value;
					this.OnPropertyChanged("Incoterm");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DeparturePort", Storage="_portOfDeparture", FieldType="Text")]
		public string PortOfDeparture {
			get {
				return this._portOfDeparture;
			}
			set {
				if ((value != this._portOfDeparture)) {
					this.OnPropertyChanging("PortOfDeparture", this._portOfDeparture);
					this._portOfDeparture = value;
					this.OnPropertyChanged("PortOfDeparture");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DepartureCity", Storage="_cityOfDeparture", FieldType="Text")]
		public string CityOfDeparture {
			get {
				return this._cityOfDeparture;
			}
			set {
				if ((value != this._cityOfDeparture)) {
					this.OnPropertyChanging("CityOfDeparture", this._cityOfDeparture);
					this._cityOfDeparture = value;
					this.OnPropertyChanged("CityOfDeparture");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TransportCosts", Storage="_transportCosts", FieldType="Number")]
		public System.Nullable<double> TransportCosts {
			get {
				return this._transportCosts;
			}
			set {
				if ((value != this._transportCosts)) {
					this.OnPropertyChanging("TransportCosts", this._transportCosts);
					this._transportCosts = value;
					this.OnPropertyChanged("TransportCosts");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsHandlingPO", Storage="_freightPO", FieldType="Text")]
		public string FreightPO {
			get {
				return this._freightPO;
			}
			set {
				if ((value != this._freightPO)) {
					this.OnPropertyChanging("FreightPO", this._freightPO);
					this._freightPO = value;
					this.OnPropertyChanged("FreightPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2CityTitle", Storage="_cityName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="City")]
		public CityType CityName {
			get {
				return this._cityName.GetEntity();
			}
			set {
				this._cityName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Route2BusinessDescriptionTitle", Storage="_businessDescriptionIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> BusinessDescriptionIdentyfikator {
			get {
				return this._businessDescriptionIdentyfikator;
			}
			set {
				if ((value != this._businessDescriptionIdentyfikator)) {
					this.OnPropertyChanging("BusinessDescriptionIdentyfikator", this._businessDescriptionIdentyfikator);
					this._businessDescriptionIdentyfikator = value;
					this.OnPropertyChanged("BusinessDescriptionIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Route2BusinessDescriptionTitle", Storage="_businessDescriptionTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string BusinessDescriptionTitle {
			get {
				return this._businessDescriptionTitle;
			}
			set {
				if ((value != this._businessDescriptionTitle)) {
					this.OnPropertyChanging("BusinessDescriptionTitle", this._businessDescriptionTitle);
					this._businessDescriptionTitle = value;
					this.OnPropertyChanged("BusinessDescriptionTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShipmentTypeTitle", Storage="_shipmentTypeIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> ShipmentTypeIdentyfikator {
			get {
				return this._shipmentTypeIdentyfikator;
			}
			set {
				if ((value != this._shipmentTypeIdentyfikator)) {
					this.OnPropertyChanging("ShipmentTypeIdentyfikator", this._shipmentTypeIdentyfikator);
					this._shipmentTypeIdentyfikator = value;
					this.OnPropertyChanged("ShipmentTypeIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShipmentTypeTitle", Storage="_shipmentTypeTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string ShipmentTypeTitle {
			get {
				return this._shipmentTypeTitle;
			}
			set {
				if ((value != this._shipmentTypeTitle)) {
					this.OnPropertyChanging("ShipmentTypeTitle", this._shipmentTypeTitle);
					this._shipmentTypeTitle = value;
					this.OnPropertyChanged("ShipmentTypeTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FreightPayerTitle", Storage="_freightPayer", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer FreightPayer {
			get {
				return this._freightPayer.GetEntity();
			}
			set {
				this._freightPayer.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2Commodity", Storage="_commodity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public CommodityCommodity Commodity {
			get {
				return this._commodity.GetEntity();
			}
			set {
				this._commodity.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SAPDestinationPlantTitle", Storage="_sAPDestinationPlantIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> SAPDestinationPlantIdentyfikator {
			get {
				return this._sAPDestinationPlantIdentyfikator;
			}
			set {
				if ((value != this._sAPDestinationPlantIdentyfikator)) {
					this.OnPropertyChanging("SAPDestinationPlantIdentyfikator", this._sAPDestinationPlantIdentyfikator);
					this._sAPDestinationPlantIdentyfikator = value;
					this.OnPropertyChanged("SAPDestinationPlantIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SAPDestinationPlantTitle", Storage="_sAPDestinationPlantTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string SAPDestinationPlantTitle {
			get {
				return this._sAPDestinationPlantTitle;
			}
			set {
				if ((value != this._sAPDestinationPlantTitle)) {
					this.OnPropertyChanging("SAPDestinationPlantTitle", this._sAPDestinationPlantTitle);
					this._sAPDestinationPlantTitle = value;
					this.OnPropertyChanged("SAPDestinationPlantTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarrierTitle", Storage="_carrierIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> CarrierIdentyfikator {
			get {
				return this._carrierIdentyfikator;
			}
			set {
				if ((value != this._carrierIdentyfikator)) {
					this.OnPropertyChanging("CarrierIdentyfikator", this._carrierIdentyfikator);
					this._carrierIdentyfikator = value;
					this.OnPropertyChanged("CarrierIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarrierTitle", Storage="_carrierTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string CarrierTitle {
			get {
				return this._carrierTitle;
			}
			set {
				if ((value != this._carrierTitle)) {
					this.OnPropertyChanging("CarrierTitle", this._carrierTitle);
					this._carrierTitle = value;
					this.OnPropertyChanged("CarrierTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TransportUnitTypeTitle", Storage="_transportUnitType", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Transport Unit Type")]
		public TransportUnitTypeTranspotUnit TransportUnitType {
			get {
				return this._transportUnitType.GetEntity();
			}
			set {
				this._transportUnitType.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CurrencyTitle", Storage="_currency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency Currency {
			get {
				return this._currency.GetEntity();
			}
			set {
				this._currency.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2RouteTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnCityNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CityName", this._cityName.Clone());
		}
		
		private void OnCityNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CityName");
		}
		
		private void OnCityNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnFreightPayerChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPayer", this._freightPayer.Clone());
		}
		
		private void OnFreightPayerChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPayer");
		}
		
		private void OnFreightPayerSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
		}
		
		private void OnCommodityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Commodity", this._commodity.Clone());
		}
		
		private void OnCommodityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Commodity");
		}
		
		private void OnCommoditySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnTransportUnitTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TransportUnitType", this._transportUnitType.Clone());
		}
		
		private void OnTransportUnitTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TransportUnitType");
		}
		
		private void OnTransportUnitTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TransportUnitTypeTranspotUnit> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnCurrencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Currency", this._currency.Clone());
		}
		
		private void OnCurrencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Currency");
		}
		
		private void OnCurrencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route = this;
			}
			else {
				e.Item.Route = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SecurityEscortCatalog", Id="0x01004D883AD19A284D1F826EA7B4E70F0ACA")]
	public partial class SecurityEscortCatalog : Element {
		
		private string _escortDestination;
		
		private string _remarkMM;
		
		private string _materialMaster;
		
		private System.Nullable<double> _securityCost;
		
		private string _securityEscortPO;
		
		private System.Nullable<int> _businessDescriptionIdentyfikator;
		
		private string _businessDescriptionTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _freightPayer;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _currency;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SecurityEscortCatalog() {
			this._freightPayer = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._freightPayer.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnFreightPayerSync);
			this._freightPayer.OnChanged += new System.EventHandler(this.OnFreightPayerChanged);
			this._freightPayer.OnChanging += new System.EventHandler(this.OnFreightPayerChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this._currency = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._currency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnCurrencySync);
			this._currency.OnChanged += new System.EventHandler(this.OnCurrencyChanged);
			this._currency.OnChanging += new System.EventHandler(this.OnCurrencyChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EscortDestination", Storage="_escortDestination", FieldType="Text")]
		public string EscortDestination {
			get {
				return this._escortDestination;
			}
			set {
				if ((value != this._escortDestination)) {
					this.OnPropertyChanging("EscortDestination", this._escortDestination);
					this._escortDestination = value;
					this.OnPropertyChanged("EscortDestination");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RemarkMM", Storage="_remarkMM", FieldType="Text")]
		public string RemarkMM {
			get {
				return this._remarkMM;
			}
			set {
				if ((value != this._remarkMM)) {
					this.OnPropertyChanging("RemarkMM", this._remarkMM);
					this._remarkMM = value;
					this.OnPropertyChanged("RemarkMM");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MaterialMaster", Storage="_materialMaster", FieldType="Text")]
		public string MaterialMaster {
			get {
				return this._materialMaster;
			}
			set {
				if ((value != this._materialMaster)) {
					this.OnPropertyChanging("MaterialMaster", this._materialMaster);
					this._materialMaster = value;
					this.OnPropertyChanged("MaterialMaster");
				}
			}
		}
		
		/// <summary>
		/// Security Cost
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityCost", Storage="_securityCost", FieldType="Number")]
		public System.Nullable<double> SecurityCost {
			get {
				return this._securityCost;
			}
			set {
				if ((value != this._securityCost)) {
					this.OnPropertyChanging("SecurityCost", this._securityCost);
					this._securityCost = value;
					this.OnPropertyChanged("SecurityCost");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityEscrotPO", Storage="_securityEscortPO", FieldType="Text")]
		public string SecurityEscortPO {
			get {
				return this._securityEscortPO;
			}
			set {
				if ((value != this._securityEscortPO)) {
					this.OnPropertyChanging("SecurityEscortPO", this._securityEscortPO);
					this._securityEscortPO = value;
					this.OnPropertyChanged("SecurityEscortPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityEscortCatalog2BusinessDescriptionTitle", Storage="_businessDescriptionIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> BusinessDescriptionIdentyfikator {
			get {
				return this._businessDescriptionIdentyfikator;
			}
			set {
				if ((value != this._businessDescriptionIdentyfikator)) {
					this.OnPropertyChanging("BusinessDescriptionIdentyfikator", this._businessDescriptionIdentyfikator);
					this._businessDescriptionIdentyfikator = value;
					this.OnPropertyChanged("BusinessDescriptionIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityEscortCatalog2BusinessDescriptionTitle", Storage="_businessDescriptionTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string BusinessDescriptionTitle {
			get {
				return this._businessDescriptionTitle;
			}
			set {
				if ((value != this._businessDescriptionTitle)) {
					this.OnPropertyChanging("BusinessDescriptionTitle", this._businessDescriptionTitle);
					this._businessDescriptionTitle = value;
					this.OnPropertyChanged("BusinessDescriptionTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FreightPayerTitle", Storage="_freightPayer", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer FreightPayer {
			get {
				return this._freightPayer.GetEntity();
			}
			set {
				this._freightPayer.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CurrencyTitle", Storage="_currency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency Currency {
			get {
				return this._currency.GetEntity();
			}
			set {
				this._currency.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityEscortCatalogTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnFreightPayerChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPayer", this._freightPayer.Clone());
		}
		
		private void OnFreightPayerChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPayer");
		}
		
		private void OnFreightPayerSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnCurrencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Currency", this._currency.Clone());
		}
		
		private void OnCurrencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Currency");
		}
		
		private void OnCurrencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscort = this;
			}
			else {
				e.Item.SecurityEscort = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Shipping", Id="0x0100BBD0D4AB58624F5B900FECE61EEC2988")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ShippingShipping))]
	public partial class Shipping : Element {
		
		private string _dockNumber;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		private System.Nullable<double> _duration;
		
		private string _cancelationReason;
		
		private string _businessDescription;
		
		private System.Nullable<System.DateTime> _estimateDeliveryTime;
		
		private System.Nullable<double> _additionalCosts;
		
		private System.Nullable<bool> _isOutbound;
		
		private System.Nullable<bool> _awaiting;
		
		private string _comments;
		
		private string _containerNo;
		
		private string _deliveryToCountry;
		
		private string _consignee;
		
		private System.Nullable<double> _euroPalletsQuantity;
		
		private System.Nullable<double> _induPalletsQuantity;
		
		private string _departureCity;
		
		private string _forwarderOceanAir;
		
		private string _commodity;
		
		private System.Nullable<double> _totalQuantityInKU;
		
		private System.Nullable<double> _freightCost;
		
		private System.Nullable<double> _securityEscortCost;
		
		private System.Nullable<double> _totalCostsPerKU;
		
		private System.Nullable<State> _state;
		
		private System.Nullable<LoadingType> _loadingType;
		
		private System.Nullable<TrailerCondition> _trailerCondition;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		private Microsoft.SharePoint.Linq.EntityRef<Warehouse> _warehouse;
		
		private Microsoft.SharePoint.Linq.EntityRef<Truck> _truckCarRegistrationNumber;
		
		private Microsoft.SharePoint.Linq.EntityRef<Trailer> _trailerRegistrationNumber;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _securityEscortProvider;
		
		private Microsoft.SharePoint.Linq.EntityRef<SealProtocol> _securitySealProtocol;
		
		private Microsoft.SharePoint.Linq.EntityRef<SecurityEscortCatalog> _securityEscort;
		
		private Microsoft.SharePoint.Linq.EntityRef<Truck> _securityEscortCarRegistrationNumber;
		
		private Microsoft.SharePoint.Linq.EntityRef<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntityRef<CityType> _city;
		
		private Microsoft.SharePoint.Linq.EntityRef<TransportUnitTypeTranspotUnit> _transportUnit;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _additionalCostsCurrency;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPO> _freightPO;
		
		private Microsoft.SharePoint.Linq.EntityRef<EscortPO> _escortPO;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _freightCostsCurrency;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _escortCostsCurrency;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _totalCostsPerKUCurrency;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Shipping() {
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this._warehouse = new Microsoft.SharePoint.Linq.EntityRef<Warehouse>();
			this._warehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnWarehouseSync);
			this._warehouse.OnChanged += new System.EventHandler(this.OnWarehouseChanged);
			this._warehouse.OnChanging += new System.EventHandler(this.OnWarehouseChanging);
			this._truckCarRegistrationNumber = new Microsoft.SharePoint.Linq.EntityRef<Truck>();
			this._truckCarRegistrationNumber.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck>>(this.OnTruckCarRegistrationNumberSync);
			this._truckCarRegistrationNumber.OnChanged += new System.EventHandler(this.OnTruckCarRegistrationNumberChanged);
			this._truckCarRegistrationNumber.OnChanging += new System.EventHandler(this.OnTruckCarRegistrationNumberChanging);
			this._trailerRegistrationNumber = new Microsoft.SharePoint.Linq.EntityRef<Trailer>();
			this._trailerRegistrationNumber.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer>>(this.OnTrailerRegistrationNumberSync);
			this._trailerRegistrationNumber.OnChanged += new System.EventHandler(this.OnTrailerRegistrationNumberChanged);
			this._trailerRegistrationNumber.OnChanging += new System.EventHandler(this.OnTrailerRegistrationNumberChanging);
			this._securityEscortProvider = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._securityEscortProvider.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnSecurityEscortProviderSync);
			this._securityEscortProvider.OnChanged += new System.EventHandler(this.OnSecurityEscortProviderChanged);
			this._securityEscortProvider.OnChanging += new System.EventHandler(this.OnSecurityEscortProviderChanging);
			this._securitySealProtocol = new Microsoft.SharePoint.Linq.EntityRef<SealProtocol>();
			this._securitySealProtocol.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SealProtocol>>(this.OnSecuritySealProtocolSync);
			this._securitySealProtocol.OnChanged += new System.EventHandler(this.OnSecuritySealProtocolChanged);
			this._securitySealProtocol.OnChanging += new System.EventHandler(this.OnSecuritySealProtocolChanging);
			this._securityEscort = new Microsoft.SharePoint.Linq.EntityRef<SecurityEscortCatalog>();
			this._securityEscort.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog>>(this.OnSecurityEscortSync);
			this._securityEscort.OnChanged += new System.EventHandler(this.OnSecurityEscortChanged);
			this._securityEscort.OnChanging += new System.EventHandler(this.OnSecurityEscortChanging);
			this._securityEscortCarRegistrationNumber = new Microsoft.SharePoint.Linq.EntityRef<Truck>();
			this._securityEscortCarRegistrationNumber.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck>>(this.OnSecurityEscortCarRegistrationNumberSync);
			this._securityEscortCarRegistrationNumber.OnChanged += new System.EventHandler(this.OnSecurityEscortCarRegistrationNumberChanged);
			this._securityEscortCarRegistrationNumber.OnChanging += new System.EventHandler(this.OnSecurityEscortCarRegistrationNumberChanging);
			this._route = new Microsoft.SharePoint.Linq.EntityRef<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._city = new Microsoft.SharePoint.Linq.EntityRef<CityType>();
			this._city.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnCitySync);
			this._city.OnChanged += new System.EventHandler(this.OnCityChanged);
			this._city.OnChanging += new System.EventHandler(this.OnCityChanging);
			this._transportUnit = new Microsoft.SharePoint.Linq.EntityRef<TransportUnitTypeTranspotUnit>();
			this._transportUnit.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TransportUnitTypeTranspotUnit>>(this.OnTransportUnitSync);
			this._transportUnit.OnChanged += new System.EventHandler(this.OnTransportUnitChanged);
			this._transportUnit.OnChanging += new System.EventHandler(this.OnTransportUnitChanging);
			this._additionalCostsCurrency = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._additionalCostsCurrency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnAdditionalCostsCurrencySync);
			this._additionalCostsCurrency.OnChanged += new System.EventHandler(this.OnAdditionalCostsCurrencyChanged);
			this._additionalCostsCurrency.OnChanging += new System.EventHandler(this.OnAdditionalCostsCurrencyChanging);
			this._freightPO = new Microsoft.SharePoint.Linq.EntityRef<FreightPO>();
			this._freightPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPOSync);
			this._freightPO.OnChanged += new System.EventHandler(this.OnFreightPOChanged);
			this._freightPO.OnChanging += new System.EventHandler(this.OnFreightPOChanging);
			this._escortPO = new Microsoft.SharePoint.Linq.EntityRef<EscortPO>();
			this._escortPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPOSync);
			this._escortPO.OnChanged += new System.EventHandler(this.OnEscortPOChanged);
			this._escortPO.OnChanging += new System.EventHandler(this.OnEscortPOChanging);
			this._freightCostsCurrency = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._freightCostsCurrency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnFreightCostsCurrencySync);
			this._freightCostsCurrency.OnChanged += new System.EventHandler(this.OnFreightCostsCurrencyChanged);
			this._freightCostsCurrency.OnChanging += new System.EventHandler(this.OnFreightCostsCurrencyChanging);
			this._escortCostsCurrency = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._escortCostsCurrency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnEscortCostsCurrencySync);
			this._escortCostsCurrency.OnChanged += new System.EventHandler(this.OnEscortCostsCurrencyChanged);
			this._escortCostsCurrency.OnChanging += new System.EventHandler(this.OnEscortCostsCurrencyChanging);
			this._totalCostsPerKUCurrency = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._totalCostsPerKUCurrency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnTotalCostsPerKUCurrencySync);
			this._totalCostsPerKUCurrency.OnChanged += new System.EventHandler(this.OnTotalCostsPerKUCurrencyChanged);
			this._totalCostsPerKUCurrency.OnChanging += new System.EventHandler(this.OnTotalCostsPerKUCurrencyChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DockNumber", Storage="_dockNumber", FieldType="Text")]
		public string DockNumber {
			get {
				return this._dockNumber;
			}
			set {
				if ((value != this._dockNumber)) {
					this.OnPropertyChanging("DockNumber", this._dockNumber);
					this._dockNumber = value;
					this.OnPropertyChanged("DockNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartTime", Storage="_startTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndTime", Storage="_endTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndTime {
			get {
				return this._endTime;
			}
			set {
				if ((value != this._endTime)) {
					this.OnPropertyChanging("EndTime", this._endTime);
					this._endTime = value;
					this.OnPropertyChanged("EndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingDuration", Storage="_duration", FieldType="Number")]
		public System.Nullable<double> Duration {
			get {
				return this._duration;
			}
			set {
				if ((value != this._duration)) {
					this.OnPropertyChanging("Duration", this._duration);
					this._duration = value;
					this.OnPropertyChanged("Duration");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CancelationReason", Storage="_cancelationReason", FieldType="Text")]
		public string CancelationReason {
			get {
				return this._cancelationReason;
			}
			set {
				if ((value != this._cancelationReason)) {
					this.OnPropertyChanging("CancelationReason", this._cancelationReason);
					this._cancelationReason = value;
					this.OnPropertyChanged("CancelationReason");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BusinessDescription", Storage="_businessDescription", FieldType="Text")]
		public string BusinessDescription {
			get {
				return this._businessDescription;
			}
			set {
				if ((value != this._businessDescription)) {
					this.OnPropertyChanging("BusinessDescription", this._businessDescription);
					this._businessDescription = value;
					this.OnPropertyChanged("BusinessDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EstimateDeliveryTime", Storage="_estimateDeliveryTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> EstimateDeliveryTime {
			get {
				return this._estimateDeliveryTime;
			}
			set {
				if ((value != this._estimateDeliveryTime)) {
					this.OnPropertyChanging("EstimateDeliveryTime", this._estimateDeliveryTime);
					this._estimateDeliveryTime = value;
					this.OnPropertyChanged("EstimateDeliveryTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AdditionalCosts", Storage="_additionalCosts", FieldType="Number")]
		public System.Nullable<double> AdditionalCosts {
			get {
				return this._additionalCosts;
			}
			set {
				if ((value != this._additionalCosts)) {
					this.OnPropertyChanging("AdditionalCosts", this._additionalCosts);
					this._additionalCosts = value;
					this.OnPropertyChanged("AdditionalCosts");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsOutbound", Storage="_isOutbound", FieldType="Boolean")]
		public System.Nullable<bool> IsOutbound {
			get {
				return this._isOutbound;
			}
			set {
				if ((value != this._isOutbound)) {
					this.OnPropertyChanging("IsOutbound", this._isOutbound);
					this._isOutbound = value;
					this.OnPropertyChanged("IsOutbound");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TruckAwaiting", Storage="_awaiting", FieldType="Boolean")]
		public System.Nullable<bool> Awaiting {
			get {
				return this._awaiting;
			}
			set {
				if ((value != this._awaiting)) {
					this.OnPropertyChanging("Awaiting", this._awaiting);
					this._awaiting = value;
					this.OnPropertyChanged("Awaiting");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TrailerConditionComments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContainerNo", Storage="_containerNo", FieldType="Text")]
		public string ContainerNo {
			get {
				return this._containerNo;
			}
			set {
				if ((value != this._containerNo)) {
					this.OnPropertyChanging("ContainerNo", this._containerNo);
					this._containerNo = value;
					this.OnPropertyChanged("ContainerNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingCountryTitle", Storage="_deliveryToCountry", FieldType="Text")]
		public string DeliveryToCountry {
			get {
				return this._deliveryToCountry;
			}
			set {
				if ((value != this._deliveryToCountry)) {
					this.OnPropertyChanging("DeliveryToCountry", this._deliveryToCountry);
					this._deliveryToCountry = value;
					this.OnPropertyChanged("DeliveryToCountry");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingFreightPayerTitle", Storage="_consignee", FieldType="Text")]
		public string Consignee {
			get {
				return this._consignee;
			}
			set {
				if ((value != this._consignee)) {
					this.OnPropertyChanging("Consignee", this._consignee);
					this._consignee = value;
					this.OnPropertyChanged("Consignee");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EuroPalletsQuantity", Storage="_euroPalletsQuantity", FieldType="Number")]
		public System.Nullable<double> EuroPalletsQuantity {
			get {
				return this._euroPalletsQuantity;
			}
			set {
				if ((value != this._euroPalletsQuantity)) {
					this.OnPropertyChanging("EuroPalletsQuantity", this._euroPalletsQuantity);
					this._euroPalletsQuantity = value;
					this.OnPropertyChanged("EuroPalletsQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InduPalletsQuantity", Storage="_induPalletsQuantity", FieldType="Number")]
		public System.Nullable<double> InduPalletsQuantity {
			get {
				return this._induPalletsQuantity;
			}
			set {
				if ((value != this._induPalletsQuantity)) {
					this.OnPropertyChanging("InduPalletsQuantity", this._induPalletsQuantity);
					this._induPalletsQuantity = value;
					this.OnPropertyChanged("InduPalletsQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingRouteDepartureCity", Storage="_departureCity", FieldType="Text")]
		public string DepartureCity {
			get {
				return this._departureCity;
			}
			set {
				if ((value != this._departureCity)) {
					this.OnPropertyChanging("DepartureCity", this._departureCity);
					this._departureCity = value;
					this.OnPropertyChanged("DepartureCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingCarrierTitle", Storage="_forwarderOceanAir", FieldType="Text")]
		public string ForwarderOceanAir {
			get {
				return this._forwarderOceanAir;
			}
			set {
				if ((value != this._forwarderOceanAir)) {
					this.OnPropertyChanging("ForwarderOceanAir", this._forwarderOceanAir);
					this._forwarderOceanAir = value;
					this.OnPropertyChanged("ForwarderOceanAir");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingCommodityTitle", Storage="_commodity", FieldType="Text")]
		public string Commodity {
			get {
				return this._commodity;
			}
			set {
				if ((value != this._commodity)) {
					this.OnPropertyChanging("Commodity", this._commodity);
					this._commodity = value;
					this.OnPropertyChanged("Commodity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TotalQuantityKU", Storage="_totalQuantityInKU", FieldType="Number")]
		public System.Nullable<double> TotalQuantityInKU {
			get {
				return this._totalQuantityInKU;
			}
			set {
				if ((value != this._totalQuantityInKU)) {
					this.OnPropertyChanging("TotalQuantityInKU", this._totalQuantityInKU);
					this._totalQuantityInKU = value;
					this.OnPropertyChanged("TotalQuantityInKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingFreightCost", Storage="_freightCost", FieldType="Number")]
		public System.Nullable<double> FreightCost {
			get {
				return this._freightCost;
			}
			set {
				if ((value != this._freightCost)) {
					this.OnPropertyChanging("FreightCost", this._freightCost);
					this._freightCost = value;
					this.OnPropertyChanged("FreightCost");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingSecurityCost", Storage="_securityEscortCost", FieldType="Number")]
		public System.Nullable<double> SecurityEscortCost {
			get {
				return this._securityEscortCost;
			}
			set {
				if ((value != this._securityEscortCost)) {
					this.OnPropertyChanging("SecurityEscortCost", this._securityEscortCost);
					this._securityEscortCost = value;
					this.OnPropertyChanged("SecurityEscortCost");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TotalCostsPerKU", Storage="_totalCostsPerKU", FieldType="Number")]
		public System.Nullable<double> TotalCostsPerKU {
			get {
				return this._totalCostsPerKU;
			}
			set {
				if ((value != this._totalCostsPerKU)) {
					this.OnPropertyChanging("TotalCostsPerKU", this._totalCostsPerKU);
					this._totalCostsPerKU = value;
					this.OnPropertyChanged("TotalCostsPerKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingState", Storage="_state", FieldType="Choice")]
		public System.Nullable<State> State {
			get {
				return this._state;
			}
			set {
				if ((value != this._state)) {
					this.OnPropertyChanging("State", this._state);
					this._state = value;
					this.OnPropertyChanged("State");
				}
			}
		}
		
		/// <summary>
		/// Loading Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LoadingType", Storage="_loadingType", FieldType="Choice")]
		public System.Nullable<LoadingType> LoadingType {
			get {
				return this._loadingType;
			}
			set {
				if ((value != this._loadingType)) {
					this.OnPropertyChanging("LoadingType", this._loadingType);
					this._loadingType = value;
					this.OnPropertyChanged("LoadingType");
				}
			}
		}
		
		/// <summary>
		/// Trailer Condition
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TrailerCondition", Storage="_trailerCondition", FieldType="Choice")]
		public System.Nullable<TrailerCondition> TrailerCondition {
			get {
				return this._trailerCondition;
			}
			set {
				if ((value != this._trailerCondition)) {
					this.OnPropertyChanging("TrailerCondition", this._trailerCondition);
					this._trailerCondition = value;
					this.OnPropertyChanged("TrailerCondition");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2WarehouseTitle", Storage="_warehouse", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Warehouse")]
		public Warehouse Warehouse {
			get {
				return this._warehouse.GetEntity();
			}
			set {
				this._warehouse.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TruckTitle", Storage="_truckCarRegistrationNumber", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Truck")]
		public Truck TruckCarRegistrationNumber {
			get {
				return this._truckCarRegistrationNumber.GetEntity();
			}
			set {
				this._truckCarRegistrationNumber.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TrailerTitle", Storage="_trailerRegistrationNumber", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Trailer")]
		public Trailer TrailerRegistrationNumber {
			get {
				return this._trailerRegistrationNumber.GetEntity();
			}
			set {
				this._trailerRegistrationNumber.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingOperationOutband2PartnerTitle", Storage="_securityEscortProvider", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner SecurityEscortProvider {
			get {
				return this._securityEscortProvider.GetEntity();
			}
			set {
				this._securityEscortProvider.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecuritySealProtocolIndex", Storage="_securitySealProtocol", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Seal Protocol Library")]
		public SealProtocol SecuritySealProtocol {
			get {
				return this._securitySealProtocol.GetEntity();
			}
			set {
				this._securitySealProtocol.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityEscortCatalogTitle", Storage="_securityEscort", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Security Escort Route")]
		public SecurityEscortCatalog SecurityEscort {
			get {
				return this._securityEscort.GetEntity();
			}
			set {
				this._securityEscort.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingOperationOutband2TruckTitle", Storage="_securityEscortCarRegistrationNumber", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Truck")]
		public Truck SecurityEscortCarRegistrationNumber {
			get {
				return this._securityEscortCarRegistrationNumber.GetEntity();
			}
			set {
				this._securityEscortCarRegistrationNumber.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2RouteTitle", Storage="_route", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Route")]
		public Route Route {
			get {
				return this._route.GetEntity();
			}
			set {
				this._route.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2City", Storage="_city", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="City")]
		public CityType City {
			get {
				return this._city.GetEntity();
			}
			set {
				this._city.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2TransportUnitType", Storage="_transportUnit", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Transport Unit Type")]
		public TransportUnitTypeTranspotUnit TransportUnit {
			get {
				return this._transportUnit.GetEntity();
			}
			set {
				this._transportUnit.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForAdditionalCosts", Storage="_additionalCostsCurrency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency AdditionalCostsCurrency {
			get {
				return this._additionalCostsCurrency.GetEntity();
			}
			set {
				this._additionalCostsCurrency.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2FreightPOIndex", Storage="_freightPO", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight PO Library")]
		public FreightPO FreightPO {
			get {
				return this._freightPO.GetEntity();
			}
			set {
				this._freightPO.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2EscortPOIndex", Storage="_escortPO", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Escort PO Library")]
		public EscortPO EscortPO {
			get {
				return this._escortPO.GetEntity();
			}
			set {
				this._escortPO.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForFreight", Storage="_freightCostsCurrency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency FreightCostsCurrency {
			get {
				return this._freightCostsCurrency.GetEntity();
			}
			set {
				this._freightCostsCurrency.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForEscort", Storage="_escortCostsCurrency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency EscortCostsCurrency {
			get {
				return this._escortCostsCurrency.GetEntity();
			}
			set {
				this._escortCostsCurrency.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForTotalCostsPerKU", Storage="_totalCostsPerKUCurrency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency TotalCostsPerKUCurrency {
			get {
				return this._totalCostsPerKUCurrency.GetEntity();
			}
			set {
				this._totalCostsPerKUCurrency.SetEntity(value);
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Warehouse", this._warehouse.Clone());
		}
		
		private void OnWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Warehouse");
		}
		
		private void OnWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnTruckCarRegistrationNumberChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TruckCarRegistrationNumber", this._truckCarRegistrationNumber.Clone());
		}
		
		private void OnTruckCarRegistrationNumberChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TruckCarRegistrationNumber");
		}
		
		private void OnTruckCarRegistrationNumberSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnTrailerRegistrationNumberChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TrailerRegistrationNumber", this._trailerRegistrationNumber.Clone());
		}
		
		private void OnTrailerRegistrationNumberChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TrailerRegistrationNumber");
		}
		
		private void OnTrailerRegistrationNumberSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnSecurityEscortProviderChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscortProvider", this._securityEscortProvider.Clone());
		}
		
		private void OnSecurityEscortProviderChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscortProvider");
		}
		
		private void OnSecurityEscortProviderSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnSecuritySealProtocolChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecuritySealProtocol", this._securitySealProtocol.Clone());
		}
		
		private void OnSecuritySealProtocolChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecuritySealProtocol");
		}
		
		private void OnSecuritySealProtocolSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SealProtocol> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnSecurityEscortChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscort", this._securityEscort.Clone());
		}
		
		private void OnSecurityEscortChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscort");
		}
		
		private void OnSecurityEscortSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnSecurityEscortCarRegistrationNumberChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscortCarRegistrationNumber", this._securityEscortCarRegistrationNumber.Clone());
		}
		
		private void OnSecurityEscortCarRegistrationNumberChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscortCarRegistrationNumber");
		}
		
		private void OnSecurityEscortCarRegistrationNumberSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping0.Add(this);
			}
			else {
				e.Item.Shipping0.Remove(this);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnCityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("City", this._city.Clone());
		}
		
		private void OnCityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("City");
		}
		
		private void OnCitySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnTransportUnitChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TransportUnit", this._transportUnit.Clone());
		}
		
		private void OnTransportUnitChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TransportUnit");
		}
		
		private void OnTransportUnitSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TransportUnitTypeTranspotUnit> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnAdditionalCostsCurrencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AdditionalCostsCurrency", this._additionalCostsCurrency.Clone());
		}
		
		private void OnAdditionalCostsCurrencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AdditionalCostsCurrency");
		}
		
		private void OnAdditionalCostsCurrencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnFreightPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO", this._freightPO.Clone());
		}
		
		private void OnFreightPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO");
		}
		
		private void OnFreightPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnEscortPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO", this._escortPO.Clone());
		}
		
		private void OnEscortPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO");
		}
		
		private void OnEscortPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnFreightCostsCurrencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightCostsCurrency", this._freightCostsCurrency.Clone());
		}
		
		private void OnFreightCostsCurrencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightCostsCurrency");
		}
		
		private void OnFreightCostsCurrencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping0.Add(this);
			}
			else {
				e.Item.Shipping0.Remove(this);
			}
		}
		
		private void OnEscortCostsCurrencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortCostsCurrency", this._escortCostsCurrency.Clone());
		}
		
		private void OnEscortCostsCurrencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortCostsCurrency");
		}
		
		private void OnEscortCostsCurrencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping1.Add(this);
			}
			else {
				e.Item.Shipping1.Remove(this);
			}
		}
		
		private void OnTotalCostsPerKUCurrencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TotalCostsPerKUCurrency", this._totalCostsPerKUCurrency.Clone());
		}
		
		private void OnTotalCostsPerKUCurrencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TotalCostsPerKUCurrency");
		}
		
		private void OnTotalCostsPerKUCurrencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2.Add(this);
			}
			else {
				e.Item.Shipping2.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Trailer", Id="0x01009EF7D9CEE9664A48928AD8C8857ADA95")]
	public partial class Trailer : Element {
		
		private string _comments;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Trailer() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AdditionalComments", Storage="_comments", FieldType="Text")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TrailerTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Trailer2PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TrailerRegistrationNumber = this;
			}
			else {
				e.Item.TrailerRegistrationNumber = null;
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Trailer.Add(this);
			}
			else {
				e.Item.Trailer.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TranspotUnit", Id="0x0100017ECA95BFABB941B9E7FE63643FCD7C")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TransportUnitTypeTranspotUnit))]
	public partial class TranspotUnit : Element {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TranspotUnit() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// Truck
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Truck", Id="0x01003E7761AEF97A4C619F44D01B53A56568")]
	public partial class Truck : Element {
		
		private string _comments;
		
		private System.Nullable<VehicleType> _vehicleType;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping0;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Truck() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._shipping0 = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShipping0Sync);
			this._shipping0.OnChanged += new System.EventHandler(this.OnShipping0Changed);
			this._shipping0.OnChanging += new System.EventHandler(this.OnShipping0Changing);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AdditionalComments", Storage="_comments", FieldType="Text")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Truck.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości Truck.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VehicleType", Storage="_vehicleType", FieldType="Choice")]
		public System.Nullable<VehicleType> VehicleType {
			get {
				return this._vehicleType;
			}
			set {
				if ((value != this._vehicleType)) {
					this.OnPropertyChanging("VehicleType", this._vehicleType);
					this._vehicleType = value;
					this.OnPropertyChanged("VehicleType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TruckTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingOperationOutband2TruckTitle", Storage="_shipping0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping0 {
			get {
				return this._shipping0;
			}
			set {
				this._shipping0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Truck2PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TruckCarRegistrationNumber = this;
			}
			else {
				e.Item.TruckCarRegistrationNumber = null;
			}
		}
		
		private void OnShipping0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping0", this._shipping0.Clone());
		}
		
		private void OnShipping0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping0");
		}
		
		private void OnShipping0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscortCarRegistrationNumber = this;
			}
			else {
				e.Item.SecurityEscortCarRegistrationNumber = null;
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Truck.Add(this);
			}
			else {
				e.Item.Truck.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Warehouse", Id="0x01001E57547208B49B46B4AA7CB4536B1A55")]
	public partial class Warehouse : Element {
		
		private string _warehouseAddress;
		
		private Microsoft.SharePoint.Linq.EntitySet<Partner> _partner;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity> _commodity;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Warehouse() {
			this._partner = new Microsoft.SharePoint.Linq.EntitySet<Partner>();
			this._partner.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnPartnerSync);
			this._partner.OnChanged += new System.EventHandler(this.OnPartnerChanged);
			this._partner.OnChanging += new System.EventHandler(this.OnPartnerChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._commodity = new Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity>();
			this._commodity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity>>(this.OnCommoditySync);
			this._commodity.OnChanged += new System.EventHandler(this.OnCommodityChanged);
			this._commodity.OnChanging += new System.EventHandler(this.OnCommodityChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WarehouseAddress", Storage="_warehouseAddress", FieldType="Note")]
		public string WarehouseAddress {
			get {
				return this._warehouseAddress;
			}
			set {
				if ((value != this._warehouseAddress)) {
					this.OnPropertyChanging("WarehouseAddress", this._warehouseAddress);
					this._warehouseAddress = value;
					this.OnPropertyChanged("WarehouseAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Partner2WarehouseTitle", Storage="_partner", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Partner")]
		public Microsoft.SharePoint.Linq.EntitySet<Partner> Partner {
			get {
				return this._partner;
			}
			set {
				this._partner.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2WarehouseTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CommodityTitle", Storage="_commodity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public CommodityCommodity Commodity {
			get {
				return this._commodity.GetEntity();
			}
			set {
				this._commodity.SetEntity(value);
			}
		}
		
		private void OnPartnerChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Partner", this._partner.Clone());
		}
		
		private void OnPartnerChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Partner");
		}
		
		private void OnPartnerSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Warehouse = this;
			}
			else {
				e.Item.Warehouse = null;
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Warehouse = this;
			}
			else {
				e.Item.Warehouse = null;
			}
		}
		
		private void OnCommodityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Commodity", this._commodity.Clone());
		}
		
		private void OnCommodityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Commodity");
		}
		
		private void OnCommoditySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Warehouse.Add(this);
			}
			else {
				e.Item.Warehouse.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="EscortPO", Id="0x0101000276600256FA44439B3AA6A5221F14C4")]
	public partial class EscortPO : Dokument {
		
		private string _freightPO;
		
		private string _payerName;
		
		private string _payerAddress;
		
		private string _payerZipCode;
		
		private string _payerCty;
		
		private string _payerNIP;
		
		private System.Nullable<System.DateTime> _dispatchDate;
		
		private System.Nullable<double> _escortCosts;
		
		private string _currency;
		
		private string _securityEscortProvider;
		
		private string _city;
		
		private string _country;
		
		private string _commodity;
		
		private string _sendInvoiceTo;
		
		private string _eMail;
		
		private string _warehouseAddress;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public EscortPO() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SPOFreightPO", Storage="_freightPO", FieldType="Text")]
		public string FreightPO {
			get {
				return this._freightPO;
			}
			set {
				if ((value != this._freightPO)) {
					this.OnPropertyChanging("FreightPO", this._freightPO);
					this._freightPO = value;
					this.OnPropertyChanged("FreightPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortPayerName", Storage="_payerName", FieldType="Text")]
		public string PayerName {
			get {
				return this._payerName;
			}
			set {
				if ((value != this._payerName)) {
					this.OnPropertyChanging("PayerName", this._payerName);
					this._payerName = value;
					this.OnPropertyChanged("PayerName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortPayerAddress", Storage="_payerAddress", FieldType="Text")]
		public string PayerAddress {
			get {
				return this._payerAddress;
			}
			set {
				if ((value != this._payerAddress)) {
					this.OnPropertyChanging("PayerAddress", this._payerAddress);
					this._payerAddress = value;
					this.OnPropertyChanged("PayerAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortPayerZip", Storage="_payerZipCode", FieldType="Text")]
		public string PayerZipCode {
			get {
				return this._payerZipCode;
			}
			set {
				if ((value != this._payerZipCode)) {
					this.OnPropertyChanging("PayerZipCode", this._payerZipCode);
					this._payerZipCode = value;
					this.OnPropertyChanged("PayerZipCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortPayerCity", Storage="_payerCty", FieldType="Text")]
		public string PayerCty {
			get {
				return this._payerCty;
			}
			set {
				if ((value != this._payerCty)) {
					this.OnPropertyChanging("PayerCty", this._payerCty);
					this._payerCty = value;
					this.OnPropertyChanged("PayerCty");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortPayerNIP", Storage="_payerNIP", FieldType="Text")]
		public string PayerNIP {
			get {
				return this._payerNIP;
			}
			set {
				if ((value != this._payerNIP)) {
					this.OnPropertyChanging("PayerNIP", this._payerNIP);
					this._payerNIP = value;
					this.OnPropertyChanged("PayerNIP");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SPODispatchDate", Storage="_dispatchDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DispatchDate {
			get {
				return this._dispatchDate;
			}
			set {
				if ((value != this._dispatchDate)) {
					this.OnPropertyChanging("DispatchDate", this._dispatchDate);
					this._dispatchDate = value;
					this.OnPropertyChanged("DispatchDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortCosts", Storage="_escortCosts", FieldType="Number")]
		public System.Nullable<double> EscortCosts {
			get {
				return this._escortCosts;
			}
			set {
				if ((value != this._escortCosts)) {
					this.OnPropertyChanging("EscortCosts", this._escortCosts);
					this._escortCosts = value;
					this.OnPropertyChanged("EscortCosts");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortCurrency", Storage="_currency", FieldType="Text")]
		public string Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortProvider", Storage="_securityEscortProvider", FieldType="Text")]
		public string SecurityEscortProvider {
			get {
				return this._securityEscortProvider;
			}
			set {
				if ((value != this._securityEscortProvider)) {
					this.OnPropertyChanging("SecurityEscortProvider", this._securityEscortProvider);
					this._securityEscortProvider = value;
					this.OnPropertyChanged("SecurityEscortProvider");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOCity", Storage="_city", FieldType="Text")]
		public string City {
			get {
				return this._city;
			}
			set {
				if ((value != this._city)) {
					this.OnPropertyChanging("City", this._city);
					this._city = value;
					this.OnPropertyChanged("City");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOCountry", Storage="_country", FieldType="Text")]
		public string Country {
			get {
				return this._country;
			}
			set {
				if ((value != this._country)) {
					this.OnPropertyChanging("Country", this._country);
					this._country = value;
					this.OnPropertyChanged("Country");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOCommodity", Storage="_commodity", FieldType="Text")]
		public string Commodity {
			get {
				return this._commodity;
			}
			set {
				if ((value != this._commodity)) {
					this.OnPropertyChanging("Commodity", this._commodity);
					this._commodity = value;
					this.OnPropertyChanged("Commodity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOSentInvoiceToMultiline", Storage="_sendInvoiceTo", FieldType="Note")]
		public string SendInvoiceTo {
			get {
				return this._sendInvoiceTo;
			}
			set {
				if ((value != this._sendInvoiceTo)) {
					this.OnPropertyChanging("SendInvoiceTo", this._sendInvoiceTo);
					this._sendInvoiceTo = value;
					this.OnPropertyChanged("SendInvoiceTo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailAddress", Storage="_eMail", FieldType="Text")]
		public string EMail {
			get {
				return this._eMail;
			}
			set {
				if ((value != this._eMail)) {
					this.OnPropertyChanging("EMail", this._eMail);
					this._eMail = value;
					this.OnPropertyChanged("EMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOWarehouseAddress", Storage="_warehouseAddress", FieldType="Text")]
		public string WarehouseAddress {
			get {
				return this._warehouseAddress;
			}
			set {
				if ((value != this._warehouseAddress)) {
					this.OnPropertyChanging("WarehouseAddress", this._warehouseAddress);
					this._warehouseAddress = value;
					this.OnPropertyChanged("WarehouseAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2EscortPOIndex", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO = this;
			}
			else {
				e.Item.EscortPO = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="FreightPO", Id="0x0101003147BA6CBB014B599BBDD72087081913")]
	public partial class FreightPO : Dokument {
		
		private string _freightPO0;
		
		private string _payerName;
		
		private string _payerAddress;
		
		private string _payerZipCode;
		
		private string _payerCity;
		
		private string _payerNIP;
		
		private System.Nullable<System.DateTime> _loadingDate;
		
		private System.Nullable<System.DateTime> _dispatchDate;
		
		private string _transportUnit;
		
		private System.Nullable<double> _transportCosts;
		
		private string _currency;
		
		private string _forwarder;
		
		private string _city;
		
		private string _country;
		
		private string _commodity;
		
		private string _sendInvoiceTo;
		
		private string _eMail;
		
		private string _warehouseAddress;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public FreightPO() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOFreightPO", Storage="_freightPO0", FieldType="Text")]
		public string FreightPO0 {
			get {
				return this._freightPO0;
			}
			set {
				if ((value != this._freightPO0)) {
					this.OnPropertyChanging("FreightPO0", this._freightPO0);
					this._freightPO0 = value;
					this.OnPropertyChanged("FreightPO0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOPayerName", Storage="_payerName", FieldType="Text")]
		public string PayerName {
			get {
				return this._payerName;
			}
			set {
				if ((value != this._payerName)) {
					this.OnPropertyChanging("PayerName", this._payerName);
					this._payerName = value;
					this.OnPropertyChanged("PayerName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOPayerAddress", Storage="_payerAddress", FieldType="Text")]
		public string PayerAddress {
			get {
				return this._payerAddress;
			}
			set {
				if ((value != this._payerAddress)) {
					this.OnPropertyChanging("PayerAddress", this._payerAddress);
					this._payerAddress = value;
					this.OnPropertyChanged("PayerAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOPayerZip", Storage="_payerZipCode", FieldType="Text")]
		public string PayerZipCode {
			get {
				return this._payerZipCode;
			}
			set {
				if ((value != this._payerZipCode)) {
					this.OnPropertyChanging("PayerZipCode", this._payerZipCode);
					this._payerZipCode = value;
					this.OnPropertyChanged("PayerZipCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOPayerCity", Storage="_payerCity", FieldType="Text")]
		public string PayerCity {
			get {
				return this._payerCity;
			}
			set {
				if ((value != this._payerCity)) {
					this.OnPropertyChanging("PayerCity", this._payerCity);
					this._payerCity = value;
					this.OnPropertyChanged("PayerCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOPayerNIP", Storage="_payerNIP", FieldType="Text")]
		public string PayerNIP {
			get {
				return this._payerNIP;
			}
			set {
				if ((value != this._payerNIP)) {
					this.OnPropertyChanging("PayerNIP", this._payerNIP);
					this._payerNIP = value;
					this.OnPropertyChanged("PayerNIP");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOLoadingDate", Storage="_loadingDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> LoadingDate {
			get {
				return this._loadingDate;
			}
			set {
				if ((value != this._loadingDate)) {
					this.OnPropertyChanging("LoadingDate", this._loadingDate);
					this._loadingDate = value;
					this.OnPropertyChanged("LoadingDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPODispatchDate", Storage="_dispatchDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DispatchDate {
			get {
				return this._dispatchDate;
			}
			set {
				if ((value != this._dispatchDate)) {
					this.OnPropertyChanging("DispatchDate", this._dispatchDate);
					this._dispatchDate = value;
					this.OnPropertyChanged("DispatchDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOTransportUnitType", Storage="_transportUnit", FieldType="Text")]
		public string TransportUnit {
			get {
				return this._transportUnit;
			}
			set {
				if ((value != this._transportUnit)) {
					this.OnPropertyChanging("TransportUnit", this._transportUnit);
					this._transportUnit = value;
					this.OnPropertyChanged("TransportUnit");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOTransportCosts", Storage="_transportCosts", FieldType="Number")]
		public System.Nullable<double> TransportCosts {
			get {
				return this._transportCosts;
			}
			set {
				if ((value != this._transportCosts)) {
					this.OnPropertyChanging("TransportCosts", this._transportCosts);
					this._transportCosts = value;
					this.OnPropertyChanged("TransportCosts");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOCurrency", Storage="_currency", FieldType="Text")]
		public string Currency {
			get {
				return this._currency;
			}
			set {
				if ((value != this._currency)) {
					this.OnPropertyChanging("Currency", this._currency);
					this._currency = value;
					this.OnPropertyChanged("Currency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOForwarder", Storage="_forwarder", FieldType="Text")]
		public string Forwarder {
			get {
				return this._forwarder;
			}
			set {
				if ((value != this._forwarder)) {
					this.OnPropertyChanging("Forwarder", this._forwarder);
					this._forwarder = value;
					this.OnPropertyChanged("Forwarder");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOCity", Storage="_city", FieldType="Text")]
		public string City {
			get {
				return this._city;
			}
			set {
				if ((value != this._city)) {
					this.OnPropertyChanging("City", this._city);
					this._city = value;
					this.OnPropertyChanged("City");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOCountry", Storage="_country", FieldType="Text")]
		public string Country {
			get {
				return this._country;
			}
			set {
				if ((value != this._country)) {
					this.OnPropertyChanging("Country", this._country);
					this._country = value;
					this.OnPropertyChanged("Country");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOCommodity", Storage="_commodity", FieldType="Text")]
		public string Commodity {
			get {
				return this._commodity;
			}
			set {
				if ((value != this._commodity)) {
					this.OnPropertyChanging("Commodity", this._commodity);
					this._commodity = value;
					this.OnPropertyChanged("Commodity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOSendInvoiceToMultiline", Storage="_sendInvoiceTo", FieldType="Note")]
		public string SendInvoiceTo {
			get {
				return this._sendInvoiceTo;
			}
			set {
				if ((value != this._sendInvoiceTo)) {
					this.OnPropertyChanging("SendInvoiceTo", this._sendInvoiceTo);
					this._sendInvoiceTo = value;
					this.OnPropertyChanged("SendInvoiceTo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailAddress", Storage="_eMail", FieldType="Text")]
		public string EMail {
			get {
				return this._eMail;
			}
			set {
				if ((value != this._eMail)) {
					this.OnPropertyChanging("EMail", this._eMail);
					this._eMail = value;
					this.OnPropertyChanged("EMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOWarehouseAddress", Storage="_warehouseAddress", FieldType="Text")]
		public string WarehouseAddress {
			get {
				return this._warehouseAddress;
			}
			set {
				if ((value != this._warehouseAddress)) {
					this.OnPropertyChanging("WarehouseAddress", this._warehouseAddress);
					this._warehouseAddress = value;
					this.OnPropertyChanged("WarehouseAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2FreightPOIndex", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO = this;
			}
			else {
				e.Item.FreightPO = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SealProtocol", Id="0x010100CCFCCB37046E4ED39C17D28FAE78ED47")]
	public partial class SealProtocol : Dokument {
		
		private System.Nullable<System.DateTime> _dispatchDate;
		
		private string _city;
		
		private string _country;
		
		private string _forwarder;
		
		private string @__1stDriver;
		
		private string @__2ndDriver;
		
		private string _driverSPhone;
		
		private string _securityEscortProvider;
		
		private string @__1stEscort;
		
		private string @__2ndEscort;
		
		private string _escortPhone;
		
		private string _escortCarNo;
		
		private string _conainersNo;
		
		private System.Nullable<System.DateTime> _actualDispatchDate;
		
		private string _warehouse;
		
		private string _truckNo;
		
		private string _trailerNo;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SealProtocol() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolDispatchDate", Storage="_dispatchDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DispatchDate {
			get {
				return this._dispatchDate;
			}
			set {
				if ((value != this._dispatchDate)) {
					this.OnPropertyChanging("DispatchDate", this._dispatchDate);
					this._dispatchDate = value;
					this.OnPropertyChanged("DispatchDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolCity", Storage="_city", FieldType="Text")]
		public string City {
			get {
				return this._city;
			}
			set {
				if ((value != this._city)) {
					this.OnPropertyChanging("City", this._city);
					this._city = value;
					this.OnPropertyChanged("City");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolCountry", Storage="_country", FieldType="Text")]
		public string Country {
			get {
				return this._country;
			}
			set {
				if ((value != this._country)) {
					this.OnPropertyChanging("Country", this._country);
					this._country = value;
					this.OnPropertyChanged("Country");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolForwarder", Storage="_forwarder", FieldType="Text")]
		public string Forwarder {
			get {
				return this._forwarder;
			}
			set {
				if ((value != this._forwarder)) {
					this.OnPropertyChanging("Forwarder", this._forwarder);
					this._forwarder = value;
					this.OnPropertyChanged("Forwarder");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocol1stDriver", Storage="__1stDriver", FieldType="Text")]
		public string _1stDriver {
			get {
				return this.@__1stDriver;
			}
			set {
				if ((value != this.@__1stDriver)) {
					this.OnPropertyChanging("_1stDriver", this.@__1stDriver);
					this.@__1stDriver = value;
					this.OnPropertyChanged("_1stDriver");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocol2ndDriver", Storage="__2ndDriver", FieldType="Text")]
		public string _2ndDriver {
			get {
				return this.@__2ndDriver;
			}
			set {
				if ((value != this.@__2ndDriver)) {
					this.OnPropertyChanging("_2ndDriver", this.@__2ndDriver);
					this.@__2ndDriver = value;
					this.OnPropertyChanged("_2ndDriver");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolDriverPhone", Storage="_driverSPhone", FieldType="Text")]
		public string DriverSPhone {
			get {
				return this._driverSPhone;
			}
			set {
				if ((value != this._driverSPhone)) {
					this.OnPropertyChanging("DriverSPhone", this._driverSPhone);
					this._driverSPhone = value;
					this.OnPropertyChanged("DriverSPhone");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolSecurityEscortProvider", Storage="_securityEscortProvider", FieldType="Text")]
		public string SecurityEscortProvider {
			get {
				return this._securityEscortProvider;
			}
			set {
				if ((value != this._securityEscortProvider)) {
					this.OnPropertyChanging("SecurityEscortProvider", this._securityEscortProvider);
					this._securityEscortProvider = value;
					this.OnPropertyChanged("SecurityEscortProvider");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocol1stEscort", Storage="__1stEscort", FieldType="Text")]
		public string _1stEscort {
			get {
				return this.@__1stEscort;
			}
			set {
				if ((value != this.@__1stEscort)) {
					this.OnPropertyChanging("_1stEscort", this.@__1stEscort);
					this.@__1stEscort = value;
					this.OnPropertyChanged("_1stEscort");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocol2ndEscort", Storage="__2ndEscort", FieldType="Text")]
		public string _2ndEscort {
			get {
				return this.@__2ndEscort;
			}
			set {
				if ((value != this.@__2ndEscort)) {
					this.OnPropertyChanging("_2ndEscort", this.@__2ndEscort);
					this.@__2ndEscort = value;
					this.OnPropertyChanged("_2ndEscort");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolEscortPhone", Storage="_escortPhone", FieldType="Text")]
		public string EscortPhone {
			get {
				return this._escortPhone;
			}
			set {
				if ((value != this._escortPhone)) {
					this.OnPropertyChanging("EscortPhone", this._escortPhone);
					this._escortPhone = value;
					this.OnPropertyChanged("EscortPhone");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolEscortCarNo", Storage="_escortCarNo", FieldType="Text")]
		public string EscortCarNo {
			get {
				return this._escortCarNo;
			}
			set {
				if ((value != this._escortCarNo)) {
					this.OnPropertyChanging("EscortCarNo", this._escortCarNo);
					this._escortCarNo = value;
					this.OnPropertyChanged("EscortCarNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolContainersNo", Storage="_conainersNo", FieldType="Text")]
		public string ConainersNo {
			get {
				return this._conainersNo;
			}
			set {
				if ((value != this._conainersNo)) {
					this.OnPropertyChanging("ConainersNo", this._conainersNo);
					this._conainersNo = value;
					this.OnPropertyChanged("ConainersNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolDispatchDateActual", Storage="_actualDispatchDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ActualDispatchDate {
			get {
				return this._actualDispatchDate;
			}
			set {
				if ((value != this._actualDispatchDate)) {
					this.OnPropertyChanging("ActualDispatchDate", this._actualDispatchDate);
					this._actualDispatchDate = value;
					this.OnPropertyChanged("ActualDispatchDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolWarehouse", Storage="_warehouse", FieldType="Text")]
		public string Warehouse {
			get {
				return this._warehouse;
			}
			set {
				if ((value != this._warehouse)) {
					this.OnPropertyChanging("Warehouse", this._warehouse);
					this._warehouse = value;
					this.OnPropertyChanged("Warehouse");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolTruckNo", Storage="_truckNo", FieldType="Text")]
		public string TruckNo {
			get {
				return this._truckNo;
			}
			set {
				if ((value != this._truckNo)) {
					this.OnPropertyChanging("TruckNo", this._truckNo);
					this._truckNo = value;
					this.OnPropertyChanged("TruckNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolTrailerNo", Storage="_trailerNo", FieldType="Text")]
		public string TrailerNo {
			get {
				return this._trailerNo;
			}
			set {
				if ((value != this._trailerNo)) {
					this.OnPropertyChanging("TrailerNo", this._trailerNo);
					this._trailerNo = value;
					this.OnPropertyChanged("TrailerNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecuritySealProtocolIndex", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecuritySealProtocol = this;
			}
			else {
				e.Item.SecuritySealProtocol = null;
			}
		}
	}
	
	/// <summary>
	/// Time Slot
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TimeSlot", Id="0x0102008B8977AFA9104B18B4B25D7C06A4A3AA")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TimeSlotTimeSlot))]
	public partial class TimeSlot : Wydarzenie {
		
		private System.Nullable<System.DateTime> _entryTime;
		
		private System.Nullable<double> _actualTimeSpan;
		
		private System.Nullable<System.DateTime> _exitTime;
		
		private System.Nullable<bool> _isDouble;
		
		private System.Nullable<Occupied> _occupied;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingShipping> _shippingIndex;
		
		private System.Nullable<int> _shippingPointIdentyfikator;
		
		private string _shippingPointTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TimeSlot() {
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<ShippingShipping>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingShipping>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EntryTime", Storage="_entryTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> EntryTime {
			get {
				return this._entryTime;
			}
			set {
				if ((value != this._entryTime)) {
					this.OnPropertyChanging("EntryTime", this._entryTime);
					this._entryTime = value;
					this.OnPropertyChanged("EntryTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TimeSpan", Storage="_actualTimeSpan", FieldType="Number")]
		public System.Nullable<double> ActualTimeSpan {
			get {
				return this._actualTimeSpan;
			}
			set {
				if ((value != this._actualTimeSpan)) {
					this.OnPropertyChanging("ActualTimeSpan", this._actualTimeSpan);
					this._actualTimeSpan = value;
					this.OnPropertyChanged("ActualTimeSpan");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExitTime", Storage="_exitTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ExitTime {
			get {
				return this._exitTime;
			}
			set {
				if ((value != this._exitTime)) {
					this.OnPropertyChanging("ExitTime", this._exitTime);
					this._exitTime = value;
					this.OnPropertyChanged("ExitTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsDouble", Storage="_isDouble", FieldType="Boolean")]
		public System.Nullable<bool> IsDouble {
			get {
				return this._isDouble;
			}
			set {
				if ((value != this._isDouble)) {
					this.OnPropertyChanging("IsDouble", this._isDouble);
					this._isDouble = value;
					this.OnPropertyChanged("IsDouble");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Tytuł {
			get {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole Title zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Lokalizacja {
			get {
				throw new System.InvalidOperationException("Pole Location zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole Location zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Description {
			get {
				throw new System.InvalidOperationException("Pole Comments zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole Comments zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> WydarzenieCałodzienne {
			get {
				throw new System.InvalidOperationException("Pole fAllDayEvent zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole fAllDayEvent zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Cykl {
			get {
				throw new System.InvalidOperationException("Pole fRecurrence zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole fRecurrence zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> ObszarRoboczy {
			get {
				throw new System.InvalidOperationException("Pole WorkspaceLink zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole WorkspaceLink zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		/// <summary>
		/// Occupied
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Occupied", Storage="_occupied", FieldType="Choice")]
		public System.Nullable<Occupied> Occupied {
			get {
				return this._occupied;
			}
			set {
				if ((value != this._occupied)) {
					this.OnPropertyChanging("Occupied", this._occupied);
					this._occupied = value;
					this.OnPropertyChanged("Occupied");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Kategoria> Kategoria {
			get {
				throw new System.InvalidOperationException("Pole Category zostało usunięte z typu zawartości TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Pole Category zostało usunięte z typu zawartości TimeSlot.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TimeSlot2ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public ShippingShipping ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TimeSlot2ShippingPointLookup", Storage="_shippingPointIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> ShippingPointIdentyfikator {
			get {
				return this._shippingPointIdentyfikator;
			}
			set {
				if ((value != this._shippingPointIdentyfikator)) {
					this.OnPropertyChanging("ShippingPointIdentyfikator", this._shippingPointIdentyfikator);
					this._shippingPointIdentyfikator = value;
					this.OnPropertyChanged("ShippingPointIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TimeSlot2ShippingPointLookup", Storage="_shippingPointTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string ShippingPointTitle {
			get {
				return this._shippingPointTitle;
			}
			set {
				if ((value != this._shippingPointTitle)) {
					this.OnPropertyChanging("ShippingPointTitle", this._shippingPointTitle);
					this._shippingPointTitle = value;
					this.OnPropertyChanged("ShippingPointTitle");
				}
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingShipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TimeSlot.Add(this);
			}
			else {
				e.Item.TimeSlot.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Commodity content type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Commodity", Id="0x01003A76AB24637A7541B0D982B65D5916CE", List="Commodity")]
	public partial class CommodityCommodity : Commodity {
		
		private System.Nullable<double> _dummy;
		
		private Microsoft.SharePoint.Linq.EntitySet<LoadDescription> _loadDescription;
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntitySet<Warehouse> _warehouse;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CommodityCommodity() {
			this._loadDescription = new Microsoft.SharePoint.Linq.EntitySet<LoadDescription>();
			this._loadDescription.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription>>(this.OnLoadDescriptionSync);
			this._loadDescription.OnChanged += new System.EventHandler(this.OnLoadDescriptionChanged);
			this._loadDescription.OnChanging += new System.EventHandler(this.OnLoadDescriptionChanging);
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._warehouse = new Microsoft.SharePoint.Linq.EntitySet<Warehouse>();
			this._warehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnWarehouseSync);
			this._warehouse.OnChanged += new System.EventHandler(this.OnWarehouseChanged);
			this._warehouse.OnChanging += new System.EventHandler(this.OnWarehouseChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dummy", Storage="_dummy", FieldType="Number")]
		public System.Nullable<double> Dummy {
			get {
				return this._dummy;
			}
			set {
				if ((value != this._dummy)) {
					this.OnPropertyChanging("Dummy", this._dummy);
					this._dummy = value;
					this.OnPropertyChanged("Dummy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2Commodity", Storage="_loadDescription", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Load Description")]
		public Microsoft.SharePoint.Linq.EntitySet<LoadDescription> LoadDescription {
			get {
				return this._loadDescription;
			}
			set {
				this._loadDescription.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2Commodity", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CommodityTitle", Storage="_warehouse", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Warehouse")]
		public Microsoft.SharePoint.Linq.EntitySet<Warehouse> Warehouse {
			get {
				return this._warehouse;
			}
			set {
				this._warehouse.Assign(value);
			}
		}
		
		private void OnLoadDescriptionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("LoadDescription", this._loadDescription.Clone());
		}
		
		private void OnLoadDescriptionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("LoadDescription");
		}
		
		private void OnLoadDescriptionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Commodity = this;
			}
			else {
				e.Item.Commodity = null;
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Commodity = this;
			}
			else {
				e.Item.Commodity = null;
			}
		}
		
		private void OnWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Warehouse", this._warehouse.Clone());
		}
		
		private void OnWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Warehouse");
		}
		
		private void OnWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Commodity = this;
			}
			else {
				e.Item.Commodity = null;
			}
		}
	}
	
	/// <summary>
	/// Country
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CountryType", Id="0x0100CE031DC456C86C409854D818EDA7E1F3", List="Country")]
	public partial class CountryClass : CountryType {
		
		private System.Nullable<double> _dummy;
		
		private Microsoft.SharePoint.Linq.EntitySet<CityType> _cityType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CountryClass() {
			this._cityType = new Microsoft.SharePoint.Linq.EntitySet<CityType>();
			this._cityType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnCityTypeSync);
			this._cityType.OnChanged += new System.EventHandler(this.OnCityTypeChanged);
			this._cityType.OnChanging += new System.EventHandler(this.OnCityTypeChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dummy", Storage="_dummy", FieldType="Number")]
		public System.Nullable<double> Dummy {
			get {
				return this._dummy;
			}
			set {
				if ((value != this._dummy)) {
					this.OnPropertyChanging("Dummy", this._dummy);
					this._dummy = value;
					this.OnPropertyChanged("Dummy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CountryTitle", Storage="_cityType", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="City")]
		public Microsoft.SharePoint.Linq.EntitySet<CityType> CityType {
			get {
				return this._cityType;
			}
			set {
				this._cityType.Assign(value);
			}
		}
		
		private void OnCityTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CityType", this._cityType.Clone());
		}
		
		private void OnCityTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CityType");
		}
		
		private void OnCityTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CountryName = this;
			}
			else {
				e.Item.CountryName = null;
			}
		}
	}
	
	/// <summary>
	/// Shipping Operation - Inbound
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Shipping", Id="0x0100BBD0D4AB58624F5B900FECE61EEC2988", List="Shipping")]
	public partial class ShippingShipping : Shipping {
		
		private System.Nullable<System.DateTime> _zmodyfikowane;
		
		private Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> _alarmsAndEvents;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> _shippingDriversTeam;
		
		private Microsoft.SharePoint.Linq.EntitySet<LoadDescription> _loadDescription;
		
		private Microsoft.SharePoint.Linq.EntitySet<TimeSlot> _timeSlot;
		
		private System.Nullable<int> _zmodyfikowanePrzezIdentyfikator;
		
		private string _zmodyfikowanePrzez;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ShippingShipping() {
			this._alarmsAndEvents = new Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents>();
			this._alarmsAndEvents.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents>>(this.OnAlarmsAndEventsSync);
			this._alarmsAndEvents.OnChanged += new System.EventHandler(this.OnAlarmsAndEventsChanged);
			this._alarmsAndEvents.OnChanging += new System.EventHandler(this.OnAlarmsAndEventsChanging);
			this._shippingDriversTeam = new Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam>();
			this._shippingDriversTeam.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam>>(this.OnShippingDriversTeamSync);
			this._shippingDriversTeam.OnChanged += new System.EventHandler(this.OnShippingDriversTeamChanged);
			this._shippingDriversTeam.OnChanging += new System.EventHandler(this.OnShippingDriversTeamChanging);
			this._loadDescription = new Microsoft.SharePoint.Linq.EntitySet<LoadDescription>();
			this._loadDescription.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription>>(this.OnLoadDescriptionSync);
			this._loadDescription.OnChanged += new System.EventHandler(this.OnLoadDescriptionChanged);
			this._loadDescription.OnChanging += new System.EventHandler(this.OnLoadDescriptionChanging);
			this._timeSlot = new Microsoft.SharePoint.Linq.EntitySet<TimeSlot>();
			this._timeSlot.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlot>>(this.OnTimeSlotSync);
			this._timeSlot.OnChanged += new System.EventHandler(this.OnTimeSlotChanged);
			this._timeSlot.OnChanging += new System.EventHandler(this.OnTimeSlotChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified", Storage="_zmodyfikowane", ReadOnly=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> Zmodyfikowane {
			get {
				return this._zmodyfikowane;
			}
			set {
				if ((value != this._zmodyfikowane)) {
					this.OnPropertyChanging("Zmodyfikowane", this._zmodyfikowane);
					this._zmodyfikowane = value;
					this.OnPropertyChanged("Zmodyfikowane");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2ShippingIndex", Storage="_alarmsAndEvents", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Alarms And Events")]
		public Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> AlarmsAndEvents {
			get {
				return this._alarmsAndEvents;
			}
			set {
				this._alarmsAndEvents.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingIndex", Storage="_shippingDriversTeam", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Drivers Team")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> ShippingDriversTeam {
			get {
				return this._shippingDriversTeam;
			}
			set {
				this._shippingDriversTeam.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2ShippingIndex", Storage="_loadDescription", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Load Description")]
		public Microsoft.SharePoint.Linq.EntitySet<LoadDescription> LoadDescription {
			get {
				return this._loadDescription;
			}
			set {
				this._loadDescription.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TimeSlot2ShippingIndex", Storage="_timeSlot", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="TimeSlot")]
		public Microsoft.SharePoint.Linq.EntitySet<TimeSlot> TimeSlot {
			get {
				return this._timeSlot;
			}
			set {
				this._timeSlot.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Editor", Storage="_zmodyfikowanePrzezIdentyfikator", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ZmodyfikowanePrzezIdentyfikator {
			get {
				return this._zmodyfikowanePrzezIdentyfikator;
			}
			set {
				if ((value != this._zmodyfikowanePrzezIdentyfikator)) {
					this.OnPropertyChanging("ZmodyfikowanePrzezIdentyfikator", this._zmodyfikowanePrzezIdentyfikator);
					this._zmodyfikowanePrzezIdentyfikator = value;
					this.OnPropertyChanged("ZmodyfikowanePrzezIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Editor", Storage="_zmodyfikowanePrzez", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ZmodyfikowanePrzez {
			get {
				return this._zmodyfikowanePrzez;
			}
			set {
				if ((value != this._zmodyfikowanePrzez)) {
					this.OnPropertyChanging("ZmodyfikowanePrzez", this._zmodyfikowanePrzez);
					this._zmodyfikowanePrzez = value;
					this.OnPropertyChanged("ZmodyfikowanePrzez");
				}
			}
		}
		
		private void OnAlarmsAndEventsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AlarmsAndEvents", this._alarmsAndEvents.Clone());
		}
		
		private void OnAlarmsAndEventsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AlarmsAndEvents");
		}
		
		private void OnAlarmsAndEventsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
		
		private void OnShippingDriversTeamChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingDriversTeam", this._shippingDriversTeam.Clone());
		}
		
		private void OnShippingDriversTeamChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingDriversTeam");
		}
		
		private void OnShippingDriversTeamSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
		
		private void OnLoadDescriptionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("LoadDescription", this._loadDescription.Clone());
		}
		
		private void OnLoadDescriptionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("LoadDescription");
		}
		
		private void OnLoadDescriptionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
		
		private void OnTimeSlotChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TimeSlot", this._timeSlot.Clone());
		}
		
		private void OnTimeSlotChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TimeSlot");
		}
		
		private void OnTimeSlotSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlot> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
	}
	
	/// <summary>
	/// Transpot Unit
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TranspotUnit", Id="0x0100017ECA95BFABB941B9E7FE63643FCD7C", List="Transport Unit Type")]
	public partial class TransportUnitTypeTranspotUnit : TranspotUnit {
		
		private System.Nullable<double> _dummy;
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TransportUnitTypeTranspotUnit() {
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dummy", Storage="_dummy", FieldType="Number")]
		public System.Nullable<double> Dummy {
			get {
				return this._dummy;
			}
			set {
				if ((value != this._dummy)) {
					this.OnPropertyChanging("Dummy", this._dummy);
					this._dummy = value;
					this.OnPropertyChanged("Dummy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TransportUnitTypeTitle", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2TransportUnitType", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TransportUnitType = this;
			}
			else {
				e.Item.TransportUnitType = null;
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TransportUnit = this;
			}
			else {
				e.Item.TransportUnit = null;
			}
		}
	}
	
	/// <summary>
	/// Time Slot
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TimeSlot", Id="0x0102008B8977AFA9104B18B4B25D7C06A4A3AA", List="TimeSlot")]
	public partial class TimeSlotTimeSlot : TimeSlot {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TimeSlotTimeSlot() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EventDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public override System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
	}
	
	public enum Kategoria : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Category1")]
		_1Category1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Category2")]
		_2Category2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Category3")]
		_3Category3 = 8,
	}
	
	public enum Priority : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Normal")]
		Normal = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="High")]
		High = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Warning")]
		Warning = 8,
	}
	
	public enum ShepherdRole : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Administrator")]
		Administrator = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="InboundOwner")]
		InboundOwner = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="OutboundOwner")]
		OutboundOwner = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Operator")]
		Operator = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Supervisor")]
		Supervisor = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Guard")]
		Guard = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Coordinator")]
		Coordinator = 128,
	}
	
	public enum PalletType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Euro")]
		Euro = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Industrial")]
		Industrial = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Other")]
		Other = 8,
	}
	
	public enum ServiceType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Vendor")]
		Vendor = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Forwarder")]
		Forwarder = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Vendor and Forwarder")]
		VendorAndForwarder = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Security Escort Provider")]
		SecurityEscortProvider = 16,
	}
	
	public enum State : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Canceled")]
		Canceled = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Completed")]
		Completed = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Confirmed")]
		Confirmed = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Creation")]
		Creation = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Delayed")]
		Delayed = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="WaitingForCarrierData")]
		WaitingForCarrierData = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="WaitingForSecurityData")]
		WaitingForSecurityData = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Underway")]
		Underway = 256,
	}
	
	public enum LoadingType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Manual")]
		Manual = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Pallet")]
		Pallet = 4,
	}
	
	public enum TrailerCondition : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="5- excellent")]
		_5Excellent = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4")]
		_4 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3")]
		_3 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2")]
		_2 = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="1 - unexceptable")]
		_1Unexceptable = 32,
	}
	
	public enum VehicleType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Truck")]
		Truck = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Van")]
		Van = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Security Escort Car")]
		SecurityEscortCar = 8,
	}
	
	public enum Occupied : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Free")]
		Free = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Occupied")]
		Occupied0 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Delayed")]
		Delayed = 8,
	}
}
