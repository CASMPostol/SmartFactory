//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:2.0.50727.5448
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.SmartFactory.Shepherd.Dashboards.Entities {
	using System;
	
	
	public partial class EntitiesDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public EntitiesDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// Alarms And Events List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Alarms And Events")]
		public Microsoft.SharePoint.Linq.EntityList<AlarmsAndEvents> AlarmsAndEvents {
			get {
				return this.GetList<AlarmsAndEvents>("Alarms And Events");
			}
		}
		
		/// <summary>
		/// City List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="City")]
		public Microsoft.SharePoint.Linq.EntityList<CityType> City {
			get {
				return this.GetList<CityType>("City");
			}
		}
		
		/// <summary>
		/// Commodity List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Commodity")]
		public Microsoft.SharePoint.Linq.EntityList<CommodityCommodity> Commodity {
			get {
				return this.GetList<CommodityCommodity>("Commodity");
			}
		}
		
		/// <summary>
		/// Country List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Country")]
		public Microsoft.SharePoint.Linq.EntityList<CountryClass> Country {
			get {
				return this.GetList<CountryClass>("Country");
			}
		}
		
		/// <summary>
		/// Currency List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Currency")]
		public Microsoft.SharePoint.Linq.EntityList<Currency> Currency {
			get {
				return this.GetList<Currency>("Currency");
			}
		}
		
		/// <summary>
		/// Escort PO Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntityList<EscortPO> EscortPOLibrary {
			get {
				return this.GetList<EscortPO>("Escort PO Library");
			}
		}
		
		/// <summary>
		/// Collect all application events.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Event Log List")]
		public Microsoft.SharePoint.Linq.EntityList<Anons> EventLogList {
			get {
				return this.GetList<Anons>("Event Log List");
			}
		}
		
		/// <summary>
		/// Freight Payer List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Freight Payer")]
		public Microsoft.SharePoint.Linq.EntityList<FreightPayer> FreightPayer {
			get {
				return this.GetList<FreightPayer>("Freight Payer");
			}
		}
		
		/// <summary>
		/// Freight PO Library Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntityList<FreightPO> FreightPOLibrary {
			get {
				return this.GetList<FreightPO>("Freight PO Library");
			}
		}
		
		/// <summary>
		/// Partner List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Partner")]
		public Microsoft.SharePoint.Linq.EntityList<Partner> Partner {
			get {
				return this.GetList<Partner>("Partner");
			}
		}
		
		/// <summary>
		/// Route List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Route")]
		public Microsoft.SharePoint.Linq.EntityList<Route> Route {
			get {
				return this.GetList<Route>("Route");
			}
		}
		
		/// <summary>
		/// Security Escort Route List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Security Escort Route")]
		public Microsoft.SharePoint.Linq.EntityList<SecurityEscortCatalog> SecurityEscortRoute {
			get {
				return this.GetList<SecurityEscortCatalog>("Security Escort Route");
			}
		}
		
		/// <summary>
		/// Shipping List List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Shipping")]
		public Microsoft.SharePoint.Linq.EntityList<Shipping> Shipping {
			get {
				return this.GetList<Shipping>("Shipping");
			}
		}
		
		/// <summary>
		/// Transport Unit Type List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Transport Unit Type")]
		public Microsoft.SharePoint.Linq.EntityList<TransportUnitTypeTranspotUnit> TransportUnitType {
			get {
				return this.GetList<TransportUnitTypeTranspotUnit>("Transport Unit Type");
			}
		}
		
		/// <summary>
		/// Warehouse List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Warehouse")]
		public Microsoft.SharePoint.Linq.EntityList<Warehouse> Warehouse {
			get {
				return this.GetList<Warehouse>("Warehouse");
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Element", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AlarmsAndEvents))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CityType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Commodity))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CountryType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Currency))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Dokument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Anons))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(FreightPayer))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Partner))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Route))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SecurityEscortCatalog))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Shipping))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TranspotUnit))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Warehouse))]
	public partial class Element : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _identyfikator;
		
		private System.Nullable<int> _wersja;
		
		private string _ścieżka;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		private string _tytuł;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Element() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_identyfikator", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Identyfikator {
			get {
				return this._identyfikator;
			}
			set {
				if ((value != this._identyfikator)) {
					this.OnPropertyChanging("Identyfikator", this._identyfikator);
					this._identyfikator = value;
					this.OnPropertyChanged("Identyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_wersja", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Wersja {
			get {
				return this._wersja;
			}
			set {
				if ((value != this._wersja)) {
					this.OnPropertyChanging("Wersja", this._wersja);
					this._wersja = value;
					this.OnPropertyChanged("Wersja");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_ścieżka", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Ścieżka {
			get {
				return this._ścieżka;
			}
			set {
				if ((value != this._ścieżka)) {
					this.OnPropertyChanging("Ścieżka", this._ścieżka);
					this._ścieżka = value;
					this.OnPropertyChanged("Ścieżka");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_tytuł", Required=true, FieldType="Text")]
		public virtual string Tytuł {
			get {
				return this._tytuł;
			}
			set {
				if ((value != this._tytuł)) {
					this.OnPropertyChanging("Tytuł", this._tytuł);
					this._tytuł = value;
					this.OnPropertyChanged("Tytuł");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Dokument", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EscortPO))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(FreightPO))]
	public partial class Dokument : Element {
		
		private string _nazwa;
		
		private string _dokumentZmodyfikowanyPrzez;
		
		private string _dokumentUtworzonyPrzez;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Dokument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_nazwa", Required=true, FieldType="File")]
		public string Nazwa {
			get {
				return this._nazwa;
			}
			set {
				if ((value != this._nazwa)) {
					this.OnPropertyChanging("Nazwa", this._nazwa);
					this._nazwa = value;
					this.OnPropertyChanged("Nazwa");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_dokumentZmodyfikowanyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentZmodyfikowanyPrzez {
			get {
				return this._dokumentZmodyfikowanyPrzez;
			}
			set {
				if ((value != this._dokumentZmodyfikowanyPrzez)) {
					this.OnPropertyChanging("DokumentZmodyfikowanyPrzez", this._dokumentZmodyfikowanyPrzez);
					this._dokumentZmodyfikowanyPrzez = value;
					this.OnPropertyChanged("DokumentZmodyfikowanyPrzez");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_dokumentUtworzonyPrzez", ReadOnly=true, FieldType="Text")]
		public string DokumentUtworzonyPrzez {
			get {
				return this._dokumentUtworzonyPrzez;
			}
			set {
				if ((value != this._dokumentUtworzonyPrzez)) {
					this.OnPropertyChanging("DokumentUtworzonyPrzez", this._dokumentUtworzonyPrzez);
					this._dokumentUtworzonyPrzez = value;
					this.OnPropertyChanged("DokumentUtworzonyPrzez");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element wiadomości, stan lub inną krótką informację.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Anons", Id="0x0104")]
	public partial class Anons : Element {
		
		private string _treść;
		
		private System.Nullable<System.DateTime> _wygasa;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Anons() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_treść", FieldType="Note")]
		public string Treść {
			get {
				return this._treść;
			}
			set {
				if ((value != this._treść)) {
					this.OnPropertyChanging("Treść", this._treść);
					this._treść = value;
					this.OnPropertyChanged("Treść");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_wygasa", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Wygasa {
			get {
				return this._wygasa;
			}
			set {
				if ((value != this._wygasa)) {
					this.OnPropertyChanging("Wygasa", this._wygasa);
					this._wygasa = value;
					this.OnPropertyChanged("Wygasa");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="AlarmsAndEvents", Id="0x010049AA7238FCE34BE18336F419AE924845")]
	public partial class AlarmsAndEvents : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<Shipping> _shippingIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AlarmsAndEvents() {
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<Shipping>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public Shipping ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AlarmsAndEvents.Add(this);
			}
			else {
				e.Item.AlarmsAndEvents.Remove(this);
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AlarmsAndEvents.Add(this);
			}
			else {
				e.Item.AlarmsAndEvents.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CityType", Id="0x01003C7CE387CDAEA94B89FEB3FC6264FB71")]
	public partial class CityType : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<CountryClass> _countryName;
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<EscortPO> _escortPO;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CityType() {
			this._countryName = new Microsoft.SharePoint.Linq.EntityRef<CountryClass>();
			this._countryName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryClass>>(this.OnCountryNameSync);
			this._countryName.OnChanged += new System.EventHandler(this.OnCountryNameChanged);
			this._countryName.OnChanging += new System.EventHandler(this.OnCountryNameChanging);
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._escortPO = new Microsoft.SharePoint.Linq.EntitySet<EscortPO>();
			this._escortPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPOSync);
			this._escortPO.OnChanged += new System.EventHandler(this.OnEscortPOChanged);
			this._escortPO.OnChanging += new System.EventHandler(this.OnEscortPOChanging);
			this._freightPO = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPOSync);
			this._freightPO.OnChanged += new System.EventHandler(this.OnFreightPOChanged);
			this._freightPO.OnChanging += new System.EventHandler(this.OnFreightPOChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CountryTitle", Storage="_countryName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Country")]
		public CountryClass CountryName {
			get {
				return this._countryName.GetEntity();
			}
			set {
				this._countryName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2CityTitle", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2City", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2CityTitle", Storage="_escortPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<EscortPO> EscortPO {
			get {
				return this._escortPO;
			}
			set {
				this._escortPO.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2CityTitle", Storage="_freightPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO {
			get {
				return this._freightPO;
			}
			set {
				this._freightPO.Assign(value);
			}
		}
		
		private void OnCountryNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CountryName", this._countryName.Clone());
		}
		
		private void OnCountryNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CountryName");
		}
		
		private void OnCountryNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryClass> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CityType.Add(this);
			}
			else {
				e.Item.CityType.Remove(this);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CityName = this;
			}
			else {
				e.Item.CityName = null;
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.City = this;
			}
			else {
				e.Item.City = null;
			}
		}
		
		private void OnEscortPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO", this._escortPO.Clone());
		}
		
		private void OnEscortPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO");
		}
		
		private void OnEscortPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.City = this;
			}
			else {
				e.Item.City = null;
			}
		}
		
		private void OnFreightPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO", this._freightPO.Clone());
		}
		
		private void OnFreightPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO");
		}
		
		private void OnFreightPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.City = this;
			}
			else {
				e.Item.City = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Commodity", Id="0x01003A76AB24637A7541B0D982B65D5916CE")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CommodityCommodity))]
	public partial class Commodity : Element {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Commodity() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CountryType", Id="0x0100CE031DC456C86C409854D818EDA7E1F3")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CountryClass))]
	public partial class CountryType : Element {
		
		private string _group;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CountryType() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CountryGroup", Storage="_group", FieldType="Text")]
		public string Group {
			get {
				return this._group;
			}
			set {
				if ((value != this._group)) {
					this.OnPropertyChanging("Group", this._group);
					this._group = value;
					this.OnPropertyChanged("Group");
				}
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Currency", Id="0x010024C2D44B310A47EDB90969B622490CF9")]
	public partial class Currency : Element {
		
		private System.Nullable<double> _exchangeRate;
		
		private Microsoft.SharePoint.Linq.EntitySet<EscortPO> _escortPO;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Currency() {
			this._escortPO = new Microsoft.SharePoint.Linq.EntitySet<EscortPO>();
			this._escortPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPOSync);
			this._escortPO.OnChanged += new System.EventHandler(this.OnEscortPOChanged);
			this._escortPO.OnChanging += new System.EventHandler(this.OnEscortPOChanging);
			this._freightPO = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPOSync);
			this._freightPO.OnChanged += new System.EventHandler(this.OnFreightPOChanged);
			this._freightPO.OnChanging += new System.EventHandler(this.OnFreightPOChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Exchange Rate
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExchangeRate", Storage="_exchangeRate", FieldType="Number")]
		public System.Nullable<double> ExchangeRate {
			get {
				return this._exchangeRate;
			}
			set {
				if ((value != this._exchangeRate)) {
					this.OnPropertyChanging("ExchangeRate", this._exchangeRate);
					this._exchangeRate = value;
					this.OnPropertyChanged("ExchangeRate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2CurrencyTitle", Storage="_escortPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<EscortPO> EscortPO {
			get {
				return this._escortPO;
			}
			set {
				this._escortPO.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2CurrencyTitle", Storage="_freightPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO {
			get {
				return this._freightPO;
			}
			set {
				this._freightPO.Assign(value);
			}
		}
		
		private void OnEscortPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO", this._escortPO.Clone());
		}
		
		private void OnEscortPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO");
		}
		
		private void OnEscortPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Currency = this;
			}
			else {
				e.Item.Currency = null;
			}
		}
		
		private void OnFreightPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO", this._freightPO.Clone());
		}
		
		private void OnFreightPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO");
		}
		
		private void OnFreightPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Currency = this;
			}
			else {
				e.Item.Currency = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="FreightPayer", Id="0x01002BD66F0631854603A0815888852526D0")]
	public partial class FreightPayer : Element {
		
		private string _company;
		
		private string _address;
		
		private string _kodPocztowy;
		
		private string _miasto;
		
		private string _krajRegion;
		
		private string _nIPVATNo;
		
		private string _sendInvoiceTo;
		
		private Microsoft.SharePoint.Linq.EntitySet<EscortPO> _escortPO;
		
		private Microsoft.SharePoint.Linq.EntitySet<EscortPO> _escortPO0;
		
		private Microsoft.SharePoint.Linq.EntitySet<EscortPO> _escortPO1;
		
		private Microsoft.SharePoint.Linq.EntitySet<EscortPO> _escortPO2;
		
		private Microsoft.SharePoint.Linq.EntitySet<EscortPO> _escortPO3;
		
		private Microsoft.SharePoint.Linq.EntitySet<EscortPO> _escortPO4;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO0;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO1;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO2;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO3;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO4;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public FreightPayer() {
			this._escortPO = new Microsoft.SharePoint.Linq.EntitySet<EscortPO>();
			this._escortPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPOSync);
			this._escortPO.OnChanged += new System.EventHandler(this.OnEscortPOChanged);
			this._escortPO.OnChanging += new System.EventHandler(this.OnEscortPOChanging);
			this._escortPO0 = new Microsoft.SharePoint.Linq.EntitySet<EscortPO>();
			this._escortPO0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPO0Sync);
			this._escortPO0.OnChanged += new System.EventHandler(this.OnEscortPO0Changed);
			this._escortPO0.OnChanging += new System.EventHandler(this.OnEscortPO0Changing);
			this._escortPO1 = new Microsoft.SharePoint.Linq.EntitySet<EscortPO>();
			this._escortPO1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPO1Sync);
			this._escortPO1.OnChanged += new System.EventHandler(this.OnEscortPO1Changed);
			this._escortPO1.OnChanging += new System.EventHandler(this.OnEscortPO1Changing);
			this._escortPO2 = new Microsoft.SharePoint.Linq.EntitySet<EscortPO>();
			this._escortPO2.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPO2Sync);
			this._escortPO2.OnChanged += new System.EventHandler(this.OnEscortPO2Changed);
			this._escortPO2.OnChanging += new System.EventHandler(this.OnEscortPO2Changing);
			this._escortPO3 = new Microsoft.SharePoint.Linq.EntitySet<EscortPO>();
			this._escortPO3.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPO3Sync);
			this._escortPO3.OnChanged += new System.EventHandler(this.OnEscortPO3Changed);
			this._escortPO3.OnChanging += new System.EventHandler(this.OnEscortPO3Changing);
			this._escortPO4 = new Microsoft.SharePoint.Linq.EntitySet<EscortPO>();
			this._escortPO4.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPO4Sync);
			this._escortPO4.OnChanged += new System.EventHandler(this.OnEscortPO4Changed);
			this._escortPO4.OnChanging += new System.EventHandler(this.OnEscortPO4Changing);
			this._freightPO = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPOSync);
			this._freightPO.OnChanged += new System.EventHandler(this.OnFreightPOChanged);
			this._freightPO.OnChanging += new System.EventHandler(this.OnFreightPOChanging);
			this._freightPO0 = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPO0Sync);
			this._freightPO0.OnChanged += new System.EventHandler(this.OnFreightPO0Changed);
			this._freightPO0.OnChanging += new System.EventHandler(this.OnFreightPO0Changing);
			this._freightPO1 = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPO1Sync);
			this._freightPO1.OnChanged += new System.EventHandler(this.OnFreightPO1Changed);
			this._freightPO1.OnChanging += new System.EventHandler(this.OnFreightPO1Changing);
			this._freightPO2 = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO2.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPO2Sync);
			this._freightPO2.OnChanged += new System.EventHandler(this.OnFreightPO2Changed);
			this._freightPO2.OnChanging += new System.EventHandler(this.OnFreightPO2Changing);
			this._freightPO3 = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO3.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPO3Sync);
			this._freightPO3.OnChanged += new System.EventHandler(this.OnFreightPO3Changed);
			this._freightPO3.OnChanging += new System.EventHandler(this.OnFreightPO3Changing);
			this._freightPO4 = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO4.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPO4Sync);
			this._freightPO4.OnChanged += new System.EventHandler(this.OnFreightPO4Changed);
			this._freightPO4.OnChanging += new System.EventHandler(this.OnFreightPO4Changing);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PayerName", Storage="_company", FieldType="Text")]
		public string Company {
			get {
				return this._company;
			}
			set {
				if ((value != this._company)) {
					this.OnPropertyChanging("Company", this._company);
					this._company = value;
					this.OnPropertyChanged("Company");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompanyAddress", Storage="_address", FieldType="Text")]
		public string Address {
			get {
				return this._address;
			}
			set {
				if ((value != this._address)) {
					this.OnPropertyChanging("Address", this._address);
					this._address = value;
					this.OnPropertyChanged("Address");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkZip", Storage="_kodPocztowy", FieldType="Text")]
		public string KodPocztowy {
			get {
				return this._kodPocztowy;
			}
			set {
				if ((value != this._kodPocztowy)) {
					this.OnPropertyChanging("KodPocztowy", this._kodPocztowy);
					this._kodPocztowy = value;
					this.OnPropertyChanged("KodPocztowy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCity", Storage="_miasto", FieldType="Text")]
		public string Miasto {
			get {
				return this._miasto;
			}
			set {
				if ((value != this._miasto)) {
					this.OnPropertyChanging("Miasto", this._miasto);
					this._miasto = value;
					this.OnPropertyChanged("Miasto");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCountry", Storage="_krajRegion", FieldType="Text")]
		public string KrajRegion {
			get {
				return this._krajRegion;
			}
			set {
				if ((value != this._krajRegion)) {
					this.OnPropertyChanging("KrajRegion", this._krajRegion);
					this._krajRegion = value;
					this.OnPropertyChanged("KrajRegion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NIP", Storage="_nIPVATNo", FieldType="Text")]
		public string NIPVATNo {
			get {
				return this._nIPVATNo;
			}
			set {
				if ((value != this._nIPVATNo)) {
					this.OnPropertyChanging("NIPVATNo", this._nIPVATNo);
					this._nIPVATNo = value;
					this.OnPropertyChanged("NIPVATNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SendInvoiceTo", Storage="_sendInvoiceTo", FieldType="Text")]
		public string SendInvoiceTo {
			get {
				return this._sendInvoiceTo;
			}
			set {
				if ((value != this._sendInvoiceTo)) {
					this.OnPropertyChanging("SendInvoiceTo", this._sendInvoiceTo);
					this._sendInvoiceTo = value;
					this.OnPropertyChanged("SendInvoiceTo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerPayerName", Storage="_escortPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<EscortPO> EscortPO {
			get {
				return this._escortPO;
			}
			set {
				this._escortPO.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerCompanyAddress", Storage="_escortPO0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<EscortPO> EscortPO0 {
			get {
				return this._escortPO0;
			}
			set {
				this._escortPO0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerWorkZip", Storage="_escortPO1", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<EscortPO> EscortPO1 {
			get {
				return this._escortPO1;
			}
			set {
				this._escortPO1.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerWorkCity", Storage="_escortPO2", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<EscortPO> EscortPO2 {
			get {
				return this._escortPO2;
			}
			set {
				this._escortPO2.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerNIP", Storage="_escortPO3", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<EscortPO> EscortPO3 {
			get {
				return this._escortPO3;
			}
			set {
				this._escortPO3.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerSendInvoiceTo", Storage="_escortPO4", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<EscortPO> EscortPO4 {
			get {
				return this._escortPO4;
			}
			set {
				this._escortPO4.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerPayerName", Storage="_freightPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO {
			get {
				return this._freightPO;
			}
			set {
				this._freightPO.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerCompanyAddress", Storage="_freightPO0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO0 {
			get {
				return this._freightPO0;
			}
			set {
				this._freightPO0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerWorkZip", Storage="_freightPO1", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO1 {
			get {
				return this._freightPO1;
			}
			set {
				this._freightPO1.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerWorkCity", Storage="_freightPO2", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO2 {
			get {
				return this._freightPO2;
			}
			set {
				this._freightPO2.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerNIP", Storage="_freightPO3", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO3 {
			get {
				return this._freightPO3;
			}
			set {
				this._freightPO3.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerSendInvoiceTo", Storage="_freightPO4", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO4 {
			get {
				return this._freightPO4;
			}
			set {
				this._freightPO4.Assign(value);
			}
		}
		
		private void OnEscortPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO", this._escortPO.Clone());
		}
		
		private void OnEscortPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO");
		}
		
		private void OnEscortPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PayerName = this;
			}
			else {
				e.Item.PayerName = null;
			}
		}
		
		private void OnEscortPO0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO0", this._escortPO0.Clone());
		}
		
		private void OnEscortPO0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO0");
		}
		
		private void OnEscortPO0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CompanyAddress = this;
			}
			else {
				e.Item.CompanyAddress = null;
			}
		}
		
		private void OnEscortPO1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO1", this._escortPO1.Clone());
		}
		
		private void OnEscortPO1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO1");
		}
		
		private void OnEscortPO1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.WorkZip = this;
			}
			else {
				e.Item.WorkZip = null;
			}
		}
		
		private void OnEscortPO2Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO2", this._escortPO2.Clone());
		}
		
		private void OnEscortPO2Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO2");
		}
		
		private void OnEscortPO2Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.WorkCity = this;
			}
			else {
				e.Item.WorkCity = null;
			}
		}
		
		private void OnEscortPO3Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO3", this._escortPO3.Clone());
		}
		
		private void OnEscortPO3Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO3");
		}
		
		private void OnEscortPO3Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.NIP = this;
			}
			else {
				e.Item.NIP = null;
			}
		}
		
		private void OnEscortPO4Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO4", this._escortPO4.Clone());
		}
		
		private void OnEscortPO4Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO4");
		}
		
		private void OnEscortPO4Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SendInvoiceTo = this;
			}
			else {
				e.Item.SendInvoiceTo = null;
			}
		}
		
		private void OnFreightPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO", this._freightPO.Clone());
		}
		
		private void OnFreightPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO");
		}
		
		private void OnFreightPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PayerName = this;
			}
			else {
				e.Item.PayerName = null;
			}
		}
		
		private void OnFreightPO0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO0", this._freightPO0.Clone());
		}
		
		private void OnFreightPO0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO0");
		}
		
		private void OnFreightPO0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CompanyAddress = this;
			}
			else {
				e.Item.CompanyAddress = null;
			}
		}
		
		private void OnFreightPO1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO1", this._freightPO1.Clone());
		}
		
		private void OnFreightPO1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO1");
		}
		
		private void OnFreightPO1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.WorkZip = this;
			}
			else {
				e.Item.WorkZip = null;
			}
		}
		
		private void OnFreightPO2Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO2", this._freightPO2.Clone());
		}
		
		private void OnFreightPO2Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO2");
		}
		
		private void OnFreightPO2Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.WorkCity = this;
			}
			else {
				e.Item.WorkCity = null;
			}
		}
		
		private void OnFreightPO3Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO3", this._freightPO3.Clone());
		}
		
		private void OnFreightPO3Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO3");
		}
		
		private void OnFreightPO3Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.NIP = this;
			}
			else {
				e.Item.NIP = null;
			}
		}
		
		private void OnFreightPO4Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO4", this._freightPO4.Clone());
		}
		
		private void OnFreightPO4Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO4");
		}
		
		private void OnFreightPO4Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SendInvoiceTo = this;
			}
			else {
				e.Item.SendInvoiceTo = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Partner", Id="0x010017A675502BE747DB9FB9DCB304429EEF")]
	public partial class Partner : Element {
		
		private string _vendorNumberFromSAP;
		
		private string _eMail;
		
		private string _telefonSłużbowy;
		
		private string _numerTelefonuKomórkowego;
		
		private System.Nullable<ServiceType> _serviceType;
		
		private Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> _alarmsAndEvents;
		
		private System.Nullable<int> _shepherdUserIdentyfikator;
		
		private string _shepherdUserTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Warehouse> _warehouse;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Partner() {
			this._alarmsAndEvents = new Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents>();
			this._alarmsAndEvents.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents>>(this.OnAlarmsAndEventsSync);
			this._alarmsAndEvents.OnChanged += new System.EventHandler(this.OnAlarmsAndEventsChanged);
			this._alarmsAndEvents.OnChanging += new System.EventHandler(this.OnAlarmsAndEventsChanging);
			this._warehouse = new Microsoft.SharePoint.Linq.EntityRef<Warehouse>();
			this._warehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnWarehouseSync);
			this._warehouse.OnChanged += new System.EventHandler(this.OnWarehouseChanged);
			this._warehouse.OnChanging += new System.EventHandler(this.OnWarehouseChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._freightPO = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPOSync);
			this._freightPO.OnChanged += new System.EventHandler(this.OnFreightPOChanged);
			this._freightPO.OnChanging += new System.EventHandler(this.OnFreightPOChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VendorNumber", Storage="_vendorNumberFromSAP", FieldType="Text")]
		public string VendorNumberFromSAP {
			get {
				return this._vendorNumberFromSAP;
			}
			set {
				if ((value != this._vendorNumberFromSAP)) {
					this.OnPropertyChanging("VendorNumberFromSAP", this._vendorNumberFromSAP);
					this._vendorNumberFromSAP = value;
					this.OnPropertyChanged("VendorNumberFromSAP");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailAddress", Storage="_eMail", FieldType="Text")]
		public string EMail {
			get {
				return this._eMail;
			}
			set {
				if ((value != this._eMail)) {
					this.OnPropertyChanging("EMail", this._eMail);
					this._eMail = value;
					this.OnPropertyChanged("EMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkPhone", Storage="_telefonSłużbowy", FieldType="Text")]
		public string TelefonSłużbowy {
			get {
				return this._telefonSłużbowy;
			}
			set {
				if ((value != this._telefonSłużbowy)) {
					this.OnPropertyChanging("TelefonSłużbowy", this._telefonSłużbowy);
					this._telefonSłużbowy = value;
					this.OnPropertyChanged("TelefonSłużbowy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CellPhone", Storage="_numerTelefonuKomórkowego", FieldType="Text")]
		public string NumerTelefonuKomórkowego {
			get {
				return this._numerTelefonuKomórkowego;
			}
			set {
				if ((value != this._numerTelefonuKomórkowego)) {
					this.OnPropertyChanging("NumerTelefonuKomórkowego", this._numerTelefonuKomórkowego);
					this._numerTelefonuKomórkowego = value;
					this.OnPropertyChanged("NumerTelefonuKomórkowego");
				}
			}
		}
		
		/// <summary>
		/// Service
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ServiceType", Storage="_serviceType", FieldType="Choice")]
		public System.Nullable<ServiceType> ServiceType {
			get {
				return this._serviceType;
			}
			set {
				if ((value != this._serviceType)) {
					this.OnPropertyChanging("ServiceType", this._serviceType);
					this._serviceType = value;
					this.OnPropertyChanged("ServiceType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2PartnerTitle", Storage="_alarmsAndEvents", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Alarms And Events")]
		public Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> AlarmsAndEvents {
			get {
				return this._alarmsAndEvents;
			}
			set {
				this._alarmsAndEvents.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShepherdUser", Storage="_shepherdUserIdentyfikator", Required=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ShepherdUserIdentyfikator {
			get {
				return this._shepherdUserIdentyfikator;
			}
			set {
				if ((value != this._shepherdUserIdentyfikator)) {
					this.OnPropertyChanging("ShepherdUserIdentyfikator", this._shepherdUserIdentyfikator);
					this._shepherdUserIdentyfikator = value;
					this.OnPropertyChanged("ShepherdUserIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShepherdUser", Storage="_shepherdUserTitle", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ShepherdUserTitle {
			get {
				return this._shepherdUserTitle;
			}
			set {
				if ((value != this._shepherdUserTitle)) {
					this.OnPropertyChanging("ShepherdUserTitle", this._shepherdUserTitle);
					this._shepherdUserTitle = value;
					this.OnPropertyChanged("ShepherdUserTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Partner2WarehouseTitle", Storage="_warehouse", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Warehouse")]
		public Warehouse Warehouse {
			get {
				return this._warehouse.GetEntity();
			}
			set {
				this._warehouse.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingOperationOutband2PartnerTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2PartnerCarrier", Storage="_freightPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO {
			get {
				return this._freightPO;
			}
			set {
				this._freightPO.Assign(value);
			}
		}
		
		private void OnAlarmsAndEventsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AlarmsAndEvents", this._alarmsAndEvents.Clone());
		}
		
		private void OnAlarmsAndEventsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AlarmsAndEvents");
		}
		
		private void OnAlarmsAndEventsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.VendorName = this;
			}
			else {
				e.Item.VendorName = null;
			}
		}
		
		private void OnWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Warehouse", this._warehouse.Clone());
		}
		
		private void OnWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Warehouse");
		}
		
		private void OnWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Partner.Add(this);
			}
			else {
				e.Item.Partner.Remove(this);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscortProvider = this;
			}
			else {
				e.Item.SecurityEscortProvider = null;
			}
		}
		
		private void OnFreightPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO", this._freightPO.Clone());
		}
		
		private void OnFreightPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO");
		}
		
		private void OnFreightPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Carrier = this;
			}
			else {
				e.Item.Carrier = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Route", Id="0x0100121B8B770545430A8B59B62D84C02C38")]
	public partial class Route : Element {
		
		private string _materialMaster;
		
		private string _remarkMM;
		
		private string _incoterm;
		
		private string _portOfDeparture;
		
		private string _cityOfDeparture;
		
		private System.Nullable<double> _transportCosts;
		
		private string _freightPO;
		
		private Microsoft.SharePoint.Linq.EntityRef<CityType> _cityName;
		
		private System.Nullable<int> _businessDescriptionIdentyfikator;
		
		private string _businessDescriptionTitle;
		
		private System.Nullable<int> _shipmentTypeIdentyfikator;
		
		private string _shipmentTypeTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _freightPayer;
		
		private Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity> _commodity;
		
		private System.Nullable<int> _sAPDestinationPlantIdentyfikator;
		
		private string _sAPDestinationPlantTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		private System.Nullable<int> _carrierIdentyfikator;
		
		private string _carrierTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<TransportUnitTypeTranspotUnit> _transportUnitType;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _currency;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO0;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Route() {
			this._cityName = new Microsoft.SharePoint.Linq.EntityRef<CityType>();
			this._cityName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnCityNameSync);
			this._cityName.OnChanged += new System.EventHandler(this.OnCityNameChanged);
			this._cityName.OnChanging += new System.EventHandler(this.OnCityNameChanging);
			this._freightPayer = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._freightPayer.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnFreightPayerSync);
			this._freightPayer.OnChanged += new System.EventHandler(this.OnFreightPayerChanged);
			this._freightPayer.OnChanging += new System.EventHandler(this.OnFreightPayerChanging);
			this._commodity = new Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity>();
			this._commodity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity>>(this.OnCommoditySync);
			this._commodity.OnChanged += new System.EventHandler(this.OnCommodityChanged);
			this._commodity.OnChanging += new System.EventHandler(this.OnCommodityChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this._transportUnitType = new Microsoft.SharePoint.Linq.EntityRef<TransportUnitTypeTranspotUnit>();
			this._transportUnitType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TransportUnitTypeTranspotUnit>>(this.OnTransportUnitTypeSync);
			this._transportUnitType.OnChanged += new System.EventHandler(this.OnTransportUnitTypeChanged);
			this._transportUnitType.OnChanging += new System.EventHandler(this.OnTransportUnitTypeChanging);
			this._currency = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._currency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnCurrencySync);
			this._currency.OnChanged += new System.EventHandler(this.OnCurrencyChanged);
			this._currency.OnChanging += new System.EventHandler(this.OnCurrencyChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._freightPO0 = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPO0Sync);
			this._freightPO0.OnChanged += new System.EventHandler(this.OnFreightPO0Changed);
			this._freightPO0.OnChanging += new System.EventHandler(this.OnFreightPO0Changing);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MaterialMaster", Storage="_materialMaster", FieldType="Text")]
		public string MaterialMaster {
			get {
				return this._materialMaster;
			}
			set {
				if ((value != this._materialMaster)) {
					this.OnPropertyChanging("MaterialMaster", this._materialMaster);
					this._materialMaster = value;
					this.OnPropertyChanged("MaterialMaster");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RemarkMM", Storage="_remarkMM", FieldType="Text")]
		public string RemarkMM {
			get {
				return this._remarkMM;
			}
			set {
				if ((value != this._remarkMM)) {
					this.OnPropertyChanging("RemarkMM", this._remarkMM);
					this._remarkMM = value;
					this.OnPropertyChanged("RemarkMM");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Incoterm", Storage="_incoterm", FieldType="Text")]
		public string Incoterm {
			get {
				return this._incoterm;
			}
			set {
				if ((value != this._incoterm)) {
					this.OnPropertyChanging("Incoterm", this._incoterm);
					this._incoterm = value;
					this.OnPropertyChanged("Incoterm");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DeparturePort", Storage="_portOfDeparture", FieldType="Text")]
		public string PortOfDeparture {
			get {
				return this._portOfDeparture;
			}
			set {
				if ((value != this._portOfDeparture)) {
					this.OnPropertyChanging("PortOfDeparture", this._portOfDeparture);
					this._portOfDeparture = value;
					this.OnPropertyChanged("PortOfDeparture");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DepartureCity", Storage="_cityOfDeparture", FieldType="Text")]
		public string CityOfDeparture {
			get {
				return this._cityOfDeparture;
			}
			set {
				if ((value != this._cityOfDeparture)) {
					this.OnPropertyChanging("CityOfDeparture", this._cityOfDeparture);
					this._cityOfDeparture = value;
					this.OnPropertyChanged("CityOfDeparture");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TransportCosts", Storage="_transportCosts", FieldType="Number")]
		public System.Nullable<double> TransportCosts {
			get {
				return this._transportCosts;
			}
			set {
				if ((value != this._transportCosts)) {
					this.OnPropertyChanging("TransportCosts", this._transportCosts);
					this._transportCosts = value;
					this.OnPropertyChanged("TransportCosts");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsHandlingPO", Storage="_freightPO", FieldType="Text")]
		public string FreightPO {
			get {
				return this._freightPO;
			}
			set {
				if ((value != this._freightPO)) {
					this.OnPropertyChanging("FreightPO", this._freightPO);
					this._freightPO = value;
					this.OnPropertyChanged("FreightPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2CityTitle", Storage="_cityName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="City")]
		public CityType CityName {
			get {
				return this._cityName.GetEntity();
			}
			set {
				this._cityName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Route2BusinessDescriptionTitle", Storage="_businessDescriptionIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> BusinessDescriptionIdentyfikator {
			get {
				return this._businessDescriptionIdentyfikator;
			}
			set {
				if ((value != this._businessDescriptionIdentyfikator)) {
					this.OnPropertyChanging("BusinessDescriptionIdentyfikator", this._businessDescriptionIdentyfikator);
					this._businessDescriptionIdentyfikator = value;
					this.OnPropertyChanged("BusinessDescriptionIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Route2BusinessDescriptionTitle", Storage="_businessDescriptionTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string BusinessDescriptionTitle {
			get {
				return this._businessDescriptionTitle;
			}
			set {
				if ((value != this._businessDescriptionTitle)) {
					this.OnPropertyChanging("BusinessDescriptionTitle", this._businessDescriptionTitle);
					this._businessDescriptionTitle = value;
					this.OnPropertyChanged("BusinessDescriptionTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShipmentTypeTitle", Storage="_shipmentTypeIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> ShipmentTypeIdentyfikator {
			get {
				return this._shipmentTypeIdentyfikator;
			}
			set {
				if ((value != this._shipmentTypeIdentyfikator)) {
					this.OnPropertyChanging("ShipmentTypeIdentyfikator", this._shipmentTypeIdentyfikator);
					this._shipmentTypeIdentyfikator = value;
					this.OnPropertyChanged("ShipmentTypeIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShipmentTypeTitle", Storage="_shipmentTypeTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string ShipmentTypeTitle {
			get {
				return this._shipmentTypeTitle;
			}
			set {
				if ((value != this._shipmentTypeTitle)) {
					this.OnPropertyChanging("ShipmentTypeTitle", this._shipmentTypeTitle);
					this._shipmentTypeTitle = value;
					this.OnPropertyChanged("ShipmentTypeTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FreightPayerTitle", Storage="_freightPayer", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer FreightPayer {
			get {
				return this._freightPayer.GetEntity();
			}
			set {
				this._freightPayer.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2Commodity", Storage="_commodity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public CommodityCommodity Commodity {
			get {
				return this._commodity.GetEntity();
			}
			set {
				this._commodity.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SAPDestinationPlantTitle", Storage="_sAPDestinationPlantIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> SAPDestinationPlantIdentyfikator {
			get {
				return this._sAPDestinationPlantIdentyfikator;
			}
			set {
				if ((value != this._sAPDestinationPlantIdentyfikator)) {
					this.OnPropertyChanging("SAPDestinationPlantIdentyfikator", this._sAPDestinationPlantIdentyfikator);
					this._sAPDestinationPlantIdentyfikator = value;
					this.OnPropertyChanged("SAPDestinationPlantIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SAPDestinationPlantTitle", Storage="_sAPDestinationPlantTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string SAPDestinationPlantTitle {
			get {
				return this._sAPDestinationPlantTitle;
			}
			set {
				if ((value != this._sAPDestinationPlantTitle)) {
					this.OnPropertyChanging("SAPDestinationPlantTitle", this._sAPDestinationPlantTitle);
					this._sAPDestinationPlantTitle = value;
					this.OnPropertyChanged("SAPDestinationPlantTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarrierTitle", Storage="_carrierIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> CarrierIdentyfikator {
			get {
				return this._carrierIdentyfikator;
			}
			set {
				if ((value != this._carrierIdentyfikator)) {
					this.OnPropertyChanging("CarrierIdentyfikator", this._carrierIdentyfikator);
					this._carrierIdentyfikator = value;
					this.OnPropertyChanged("CarrierIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CarrierTitle", Storage="_carrierTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string CarrierTitle {
			get {
				return this._carrierTitle;
			}
			set {
				if ((value != this._carrierTitle)) {
					this.OnPropertyChanging("CarrierTitle", this._carrierTitle);
					this._carrierTitle = value;
					this.OnPropertyChanged("CarrierTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TransportUnitTypeTitle", Storage="_transportUnitType", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Transport Unit Type")]
		public TransportUnitTypeTranspotUnit TransportUnitType {
			get {
				return this._transportUnitType.GetEntity();
			}
			set {
				this._transportUnitType.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CurrencyTitle", Storage="_currency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency Currency {
			get {
				return this._currency.GetEntity();
			}
			set {
				this._currency.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2RouteTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2RouteTransportCosts", Storage="_freightPO0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO0 {
			get {
				return this._freightPO0;
			}
			set {
				this._freightPO0.Assign(value);
			}
		}
		
		private void OnCityNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CityName", this._cityName.Clone());
		}
		
		private void OnCityNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CityName");
		}
		
		private void OnCityNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnFreightPayerChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPayer", this._freightPayer.Clone());
		}
		
		private void OnFreightPayerChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPayer");
		}
		
		private void OnFreightPayerSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
		}
		
		private void OnCommodityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Commodity", this._commodity.Clone());
		}
		
		private void OnCommodityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Commodity");
		}
		
		private void OnCommoditySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnTransportUnitTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TransportUnitType", this._transportUnitType.Clone());
		}
		
		private void OnTransportUnitTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TransportUnitType");
		}
		
		private void OnTransportUnitTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TransportUnitTypeTranspotUnit> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnCurrencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Currency", this._currency.Clone());
		}
		
		private void OnCurrencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Currency");
		}
		
		private void OnCurrencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route = this;
			}
			else {
				e.Item.Route = null;
			}
		}
		
		private void OnFreightPO0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO0", this._freightPO0.Clone());
		}
		
		private void OnFreightPO0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO0");
		}
		
		private void OnFreightPO0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TransportCosts = this;
			}
			else {
				e.Item.TransportCosts = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SecurityEscortCatalog", Id="0x01004D883AD19A284D1F826EA7B4E70F0ACA")]
	public partial class SecurityEscortCatalog : Element {
		
		private string _escortDestination;
		
		private string _remarkMM;
		
		private string _materialMaster;
		
		private System.Nullable<double> _securityCost;
		
		private string _securityEscortPO;
		
		private System.Nullable<int> _businessDescriptionIdentyfikator;
		
		private string _businessDescriptionTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _freightPayer;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _currency;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<EscortPO> _escortPO;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SecurityEscortCatalog() {
			this._freightPayer = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._freightPayer.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnFreightPayerSync);
			this._freightPayer.OnChanged += new System.EventHandler(this.OnFreightPayerChanged);
			this._freightPayer.OnChanging += new System.EventHandler(this.OnFreightPayerChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this._currency = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._currency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnCurrencySync);
			this._currency.OnChanged += new System.EventHandler(this.OnCurrencyChanged);
			this._currency.OnChanging += new System.EventHandler(this.OnCurrencyChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._escortPO = new Microsoft.SharePoint.Linq.EntitySet<EscortPO>();
			this._escortPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPOSync);
			this._escortPO.OnChanged += new System.EventHandler(this.OnEscortPOChanged);
			this._escortPO.OnChanging += new System.EventHandler(this.OnEscortPOChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EscortDestination", Storage="_escortDestination", FieldType="Text")]
		public string EscortDestination {
			get {
				return this._escortDestination;
			}
			set {
				if ((value != this._escortDestination)) {
					this.OnPropertyChanging("EscortDestination", this._escortDestination);
					this._escortDestination = value;
					this.OnPropertyChanged("EscortDestination");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RemarkMM", Storage="_remarkMM", FieldType="Text")]
		public string RemarkMM {
			get {
				return this._remarkMM;
			}
			set {
				if ((value != this._remarkMM)) {
					this.OnPropertyChanging("RemarkMM", this._remarkMM);
					this._remarkMM = value;
					this.OnPropertyChanged("RemarkMM");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MaterialMaster", Storage="_materialMaster", FieldType="Text")]
		public string MaterialMaster {
			get {
				return this._materialMaster;
			}
			set {
				if ((value != this._materialMaster)) {
					this.OnPropertyChanging("MaterialMaster", this._materialMaster);
					this._materialMaster = value;
					this.OnPropertyChanged("MaterialMaster");
				}
			}
		}
		
		/// <summary>
		/// Security Cost
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityCost", Storage="_securityCost", FieldType="Number")]
		public System.Nullable<double> SecurityCost {
			get {
				return this._securityCost;
			}
			set {
				if ((value != this._securityCost)) {
					this.OnPropertyChanging("SecurityCost", this._securityCost);
					this._securityCost = value;
					this.OnPropertyChanged("SecurityCost");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityEscrotPO", Storage="_securityEscortPO", FieldType="Text")]
		public string SecurityEscortPO {
			get {
				return this._securityEscortPO;
			}
			set {
				if ((value != this._securityEscortPO)) {
					this.OnPropertyChanging("SecurityEscortPO", this._securityEscortPO);
					this._securityEscortPO = value;
					this.OnPropertyChanged("SecurityEscortPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityEscortCatalog2BusinessDescriptionTitle", Storage="_businessDescriptionIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> BusinessDescriptionIdentyfikator {
			get {
				return this._businessDescriptionIdentyfikator;
			}
			set {
				if ((value != this._businessDescriptionIdentyfikator)) {
					this.OnPropertyChanging("BusinessDescriptionIdentyfikator", this._businessDescriptionIdentyfikator);
					this._businessDescriptionIdentyfikator = value;
					this.OnPropertyChanged("BusinessDescriptionIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityEscortCatalog2BusinessDescriptionTitle", Storage="_businessDescriptionTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string BusinessDescriptionTitle {
			get {
				return this._businessDescriptionTitle;
			}
			set {
				if ((value != this._businessDescriptionTitle)) {
					this.OnPropertyChanging("BusinessDescriptionTitle", this._businessDescriptionTitle);
					this._businessDescriptionTitle = value;
					this.OnPropertyChanged("BusinessDescriptionTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FreightPayerTitle", Storage="_freightPayer", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer FreightPayer {
			get {
				return this._freightPayer.GetEntity();
			}
			set {
				this._freightPayer.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CurrencyTitle", Storage="_currency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency Currency {
			get {
				return this._currency.GetEntity();
			}
			set {
				this._currency.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityEscortCatalogTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2SecurityEscortRouteSecurityCost", Storage="_escortPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<EscortPO> EscortPO {
			get {
				return this._escortPO;
			}
			set {
				this._escortPO.Assign(value);
			}
		}
		
		private void OnFreightPayerChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPayer", this._freightPayer.Clone());
		}
		
		private void OnFreightPayerChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPayer");
		}
		
		private void OnFreightPayerSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnCurrencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Currency", this._currency.Clone());
		}
		
		private void OnCurrencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Currency");
		}
		
		private void OnCurrencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscort = this;
			}
			else {
				e.Item.SecurityEscort = null;
			}
		}
		
		private void OnEscortPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO", this._escortPO.Clone());
		}
		
		private void OnEscortPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO");
		}
		
		private void OnEscortPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityCost = this;
			}
			else {
				e.Item.SecurityCost = null;
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Shipping", Id="0x0100BBD0D4AB58624F5B900FECE61EEC2988")]
	public partial class Shipping : Element {
		
		private string _warehouse;
		
		private string _dockNumber;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		private System.Nullable<double> _duration;
		
		private string _cancelationReason;
		
		private string _businessDescription;
		
		private System.Nullable<System.DateTime> _estimateDeliveryTime;
		
		private System.Nullable<double> _additionalCosts;
		
		private System.Nullable<bool> _isOutbound;
		
		private string _comments;
		
		private string _containerNo;
		
		private System.Nullable<State> _state;
		
		private System.Nullable<LoadingType> _loadingType;
		
		private System.Nullable<TrailerCondition> _trailerCondition;
		
		private Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> _alarmsAndEvents;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _vendorName;
		
		private System.Nullable<int> _truckCarRegistrationNumberIdentyfikator;
		
		private string _truckCarRegistrationNumberTitle;
		
		private System.Nullable<int> _trailerRegistrationNumberIdentyfikator;
		
		private string _trailerRegistrationNumberTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _securityEscortProvider;
		
		private System.Nullable<int> _securitySealProtocolIdentyfikator;
		
		private Microsoft.SharePoint.Linq.EntityRef<SecurityEscortCatalog> _securityEscort;
		
		private System.Nullable<int> _securityEscortCarRegistrationNumberIdentyfikator;
		
		private string _securityEscortCarRegistrationNumberTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntityRef<CityType> _city;
		
		private Microsoft.SharePoint.Linq.EntityRef<TransportUnitTypeTranspotUnit> _transportUnit;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPO> _freightPO;
		
		private Microsoft.SharePoint.Linq.EntityRef<EscortPO> _escortPO;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Shipping() {
			this._alarmsAndEvents = new Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents>();
			this._alarmsAndEvents.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents>>(this.OnAlarmsAndEventsSync);
			this._alarmsAndEvents.OnChanged += new System.EventHandler(this.OnAlarmsAndEventsChanged);
			this._alarmsAndEvents.OnChanging += new System.EventHandler(this.OnAlarmsAndEventsChanging);
			this._vendorName = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._vendorName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnVendorNameSync);
			this._vendorName.OnChanged += new System.EventHandler(this.OnVendorNameChanged);
			this._vendorName.OnChanging += new System.EventHandler(this.OnVendorNameChanging);
			this._securityEscortProvider = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._securityEscortProvider.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnSecurityEscortProviderSync);
			this._securityEscortProvider.OnChanged += new System.EventHandler(this.OnSecurityEscortProviderChanged);
			this._securityEscortProvider.OnChanging += new System.EventHandler(this.OnSecurityEscortProviderChanging);
			this._securityEscort = new Microsoft.SharePoint.Linq.EntityRef<SecurityEscortCatalog>();
			this._securityEscort.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog>>(this.OnSecurityEscortSync);
			this._securityEscort.OnChanged += new System.EventHandler(this.OnSecurityEscortChanged);
			this._securityEscort.OnChanging += new System.EventHandler(this.OnSecurityEscortChanging);
			this._route = new Microsoft.SharePoint.Linq.EntityRef<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._city = new Microsoft.SharePoint.Linq.EntityRef<CityType>();
			this._city.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnCitySync);
			this._city.OnChanged += new System.EventHandler(this.OnCityChanged);
			this._city.OnChanging += new System.EventHandler(this.OnCityChanging);
			this._transportUnit = new Microsoft.SharePoint.Linq.EntityRef<TransportUnitTypeTranspotUnit>();
			this._transportUnit.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TransportUnitTypeTranspotUnit>>(this.OnTransportUnitSync);
			this._transportUnit.OnChanged += new System.EventHandler(this.OnTransportUnitChanged);
			this._transportUnit.OnChanging += new System.EventHandler(this.OnTransportUnitChanging);
			this._freightPO = new Microsoft.SharePoint.Linq.EntityRef<FreightPO>();
			this._freightPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPOSync);
			this._freightPO.OnChanged += new System.EventHandler(this.OnFreightPOChanged);
			this._freightPO.OnChanging += new System.EventHandler(this.OnFreightPOChanging);
			this._escortPO = new Microsoft.SharePoint.Linq.EntityRef<EscortPO>();
			this._escortPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPOSync);
			this._escortPO.OnChanged += new System.EventHandler(this.OnEscortPOChanged);
			this._escortPO.OnChanging += new System.EventHandler(this.OnEscortPOChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Warehouse", Storage="_warehouse", FieldType="Text")]
		public string Warehouse {
			get {
				return this._warehouse;
			}
			set {
				if ((value != this._warehouse)) {
					this.OnPropertyChanging("Warehouse", this._warehouse);
					this._warehouse = value;
					this.OnPropertyChanged("Warehouse");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DockNumber", Storage="_dockNumber", FieldType="Text")]
		public string DockNumber {
			get {
				return this._dockNumber;
			}
			set {
				if ((value != this._dockNumber)) {
					this.OnPropertyChanging("DockNumber", this._dockNumber);
					this._dockNumber = value;
					this.OnPropertyChanged("DockNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartTime", Storage="_startTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndTime", Storage="_endTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndTime {
			get {
				return this._endTime;
			}
			set {
				if ((value != this._endTime)) {
					this.OnPropertyChanging("EndTime", this._endTime);
					this._endTime = value;
					this.OnPropertyChanged("EndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingDuration", Storage="_duration", FieldType="Number")]
		public System.Nullable<double> Duration {
			get {
				return this._duration;
			}
			set {
				if ((value != this._duration)) {
					this.OnPropertyChanging("Duration", this._duration);
					this._duration = value;
					this.OnPropertyChanged("Duration");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CancelationReason", Storage="_cancelationReason", FieldType="Text")]
		public string CancelationReason {
			get {
				return this._cancelationReason;
			}
			set {
				if ((value != this._cancelationReason)) {
					this.OnPropertyChanging("CancelationReason", this._cancelationReason);
					this._cancelationReason = value;
					this.OnPropertyChanged("CancelationReason");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BusinessDescription", Storage="_businessDescription", FieldType="Text")]
		public string BusinessDescription {
			get {
				return this._businessDescription;
			}
			set {
				if ((value != this._businessDescription)) {
					this.OnPropertyChanging("BusinessDescription", this._businessDescription);
					this._businessDescription = value;
					this.OnPropertyChanged("BusinessDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EstimateDeliveryTime", Storage="_estimateDeliveryTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> EstimateDeliveryTime {
			get {
				return this._estimateDeliveryTime;
			}
			set {
				if ((value != this._estimateDeliveryTime)) {
					this.OnPropertyChanging("EstimateDeliveryTime", this._estimateDeliveryTime);
					this._estimateDeliveryTime = value;
					this.OnPropertyChanged("EstimateDeliveryTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AdditionalCosts", Storage="_additionalCosts", FieldType="Number")]
		public System.Nullable<double> AdditionalCosts {
			get {
				return this._additionalCosts;
			}
			set {
				if ((value != this._additionalCosts)) {
					this.OnPropertyChanging("AdditionalCosts", this._additionalCosts);
					this._additionalCosts = value;
					this.OnPropertyChanged("AdditionalCosts");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsOutbound", Storage="_isOutbound", FieldType="Boolean")]
		public System.Nullable<bool> IsOutbound {
			get {
				return this._isOutbound;
			}
			set {
				if ((value != this._isOutbound)) {
					this.OnPropertyChanging("IsOutbound", this._isOutbound);
					this._isOutbound = value;
					this.OnPropertyChanged("IsOutbound");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TrailerConditionComments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContainerNo", Storage="_containerNo", FieldType="Text")]
		public string ContainerNo {
			get {
				return this._containerNo;
			}
			set {
				if ((value != this._containerNo)) {
					this.OnPropertyChanging("ContainerNo", this._containerNo);
					this._containerNo = value;
					this.OnPropertyChanged("ContainerNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingState", Storage="_state", FieldType="Choice")]
		public System.Nullable<State> State {
			get {
				return this._state;
			}
			set {
				if ((value != this._state)) {
					this.OnPropertyChanging("State", this._state);
					this._state = value;
					this.OnPropertyChanged("State");
				}
			}
		}
		
		/// <summary>
		/// Loading Type
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LoadingType", Storage="_loadingType", FieldType="Choice")]
		public System.Nullable<LoadingType> LoadingType {
			get {
				return this._loadingType;
			}
			set {
				if ((value != this._loadingType)) {
					this.OnPropertyChanging("LoadingType", this._loadingType);
					this._loadingType = value;
					this.OnPropertyChanged("LoadingType");
				}
			}
		}
		
		/// <summary>
		/// Trailer Condition
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TrailerCondition", Storage="_trailerCondition", FieldType="Choice")]
		public System.Nullable<TrailerCondition> TrailerCondition {
			get {
				return this._trailerCondition;
			}
			set {
				if ((value != this._trailerCondition)) {
					this.OnPropertyChanging("TrailerCondition", this._trailerCondition);
					this._trailerCondition = value;
					this.OnPropertyChanged("TrailerCondition");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2ShippingIndex", Storage="_alarmsAndEvents", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Alarms And Events")]
		public Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> AlarmsAndEvents {
			get {
				return this._alarmsAndEvents;
			}
			set {
				this._alarmsAndEvents.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_vendorName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner VendorName {
			get {
				return this._vendorName.GetEntity();
			}
			set {
				this._vendorName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TruckTitle", Storage="_truckCarRegistrationNumberIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> TruckCarRegistrationNumberIdentyfikator {
			get {
				return this._truckCarRegistrationNumberIdentyfikator;
			}
			set {
				if ((value != this._truckCarRegistrationNumberIdentyfikator)) {
					this.OnPropertyChanging("TruckCarRegistrationNumberIdentyfikator", this._truckCarRegistrationNumberIdentyfikator);
					this._truckCarRegistrationNumberIdentyfikator = value;
					this.OnPropertyChanged("TruckCarRegistrationNumberIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TruckTitle", Storage="_truckCarRegistrationNumberTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string TruckCarRegistrationNumberTitle {
			get {
				return this._truckCarRegistrationNumberTitle;
			}
			set {
				if ((value != this._truckCarRegistrationNumberTitle)) {
					this.OnPropertyChanging("TruckCarRegistrationNumberTitle", this._truckCarRegistrationNumberTitle);
					this._truckCarRegistrationNumberTitle = value;
					this.OnPropertyChanged("TruckCarRegistrationNumberTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TrailerTitle", Storage="_trailerRegistrationNumberIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> TrailerRegistrationNumberIdentyfikator {
			get {
				return this._trailerRegistrationNumberIdentyfikator;
			}
			set {
				if ((value != this._trailerRegistrationNumberIdentyfikator)) {
					this.OnPropertyChanging("TrailerRegistrationNumberIdentyfikator", this._trailerRegistrationNumberIdentyfikator);
					this._trailerRegistrationNumberIdentyfikator = value;
					this.OnPropertyChanged("TrailerRegistrationNumberIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TrailerTitle", Storage="_trailerRegistrationNumberTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string TrailerRegistrationNumberTitle {
			get {
				return this._trailerRegistrationNumberTitle;
			}
			set {
				if ((value != this._trailerRegistrationNumberTitle)) {
					this.OnPropertyChanging("TrailerRegistrationNumberTitle", this._trailerRegistrationNumberTitle);
					this._trailerRegistrationNumberTitle = value;
					this.OnPropertyChanged("TrailerRegistrationNumberTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingOperationOutband2PartnerTitle", Storage="_securityEscortProvider", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner SecurityEscortProvider {
			get {
				return this._securityEscortProvider.GetEntity();
			}
			set {
				this._securityEscortProvider.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecuritySealProtocolIndex", Storage="_securitySealProtocolIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> SecuritySealProtocolIdentyfikator {
			get {
				return this._securitySealProtocolIdentyfikator;
			}
			set {
				if ((value != this._securitySealProtocolIdentyfikator)) {
					this.OnPropertyChanging("SecuritySealProtocolIdentyfikator", this._securitySealProtocolIdentyfikator);
					this._securitySealProtocolIdentyfikator = value;
					this.OnPropertyChanged("SecuritySealProtocolIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityEscortCatalogTitle", Storage="_securityEscort", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Security Escort Route")]
		public SecurityEscortCatalog SecurityEscort {
			get {
				return this._securityEscort.GetEntity();
			}
			set {
				this._securityEscort.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingOperationOutband2TruckTitle", Storage="_securityEscortCarRegistrationNumberIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> SecurityEscortCarRegistrationNumberIdentyfikator {
			get {
				return this._securityEscortCarRegistrationNumberIdentyfikator;
			}
			set {
				if ((value != this._securityEscortCarRegistrationNumberIdentyfikator)) {
					this.OnPropertyChanging("SecurityEscortCarRegistrationNumberIdentyfikator", this._securityEscortCarRegistrationNumberIdentyfikator);
					this._securityEscortCarRegistrationNumberIdentyfikator = value;
					this.OnPropertyChanged("SecurityEscortCarRegistrationNumberIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingOperationOutband2TruckTitle", Storage="_securityEscortCarRegistrationNumberTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string SecurityEscortCarRegistrationNumberTitle {
			get {
				return this._securityEscortCarRegistrationNumberTitle;
			}
			set {
				if ((value != this._securityEscortCarRegistrationNumberTitle)) {
					this.OnPropertyChanging("SecurityEscortCarRegistrationNumberTitle", this._securityEscortCarRegistrationNumberTitle);
					this._securityEscortCarRegistrationNumberTitle = value;
					this.OnPropertyChanged("SecurityEscortCarRegistrationNumberTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2RouteTitle", Storage="_route", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Route")]
		public Route Route {
			get {
				return this._route.GetEntity();
			}
			set {
				this._route.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2City", Storage="_city", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="City")]
		public CityType City {
			get {
				return this._city.GetEntity();
			}
			set {
				this._city.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2TransportUnitType", Storage="_transportUnit", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Transport Unit Type")]
		public TransportUnitTypeTranspotUnit TransportUnit {
			get {
				return this._transportUnit.GetEntity();
			}
			set {
				this._transportUnit.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2FreightPOIndex", Storage="_freightPO", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight PO Library")]
		public FreightPO FreightPO {
			get {
				return this._freightPO.GetEntity();
			}
			set {
				this._freightPO.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2EscortPOIndex", Storage="_escortPO", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Escort PO Library")]
		public EscortPO EscortPO {
			get {
				return this._escortPO.GetEntity();
			}
			set {
				this._escortPO.SetEntity(value);
			}
		}
		
		private void OnAlarmsAndEventsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AlarmsAndEvents", this._alarmsAndEvents.Clone());
		}
		
		private void OnAlarmsAndEventsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AlarmsAndEvents");
		}
		
		private void OnAlarmsAndEventsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
		
		private void OnVendorNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("VendorName", this._vendorName.Clone());
		}
		
		private void OnVendorNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("VendorName");
		}
		
		private void OnVendorNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnSecurityEscortProviderChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscortProvider", this._securityEscortProvider.Clone());
		}
		
		private void OnSecurityEscortProviderChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscortProvider");
		}
		
		private void OnSecurityEscortProviderSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnSecurityEscortChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscort", this._securityEscort.Clone());
		}
		
		private void OnSecurityEscortChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscort");
		}
		
		private void OnSecurityEscortSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnCityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("City", this._city.Clone());
		}
		
		private void OnCityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("City");
		}
		
		private void OnCitySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnTransportUnitChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TransportUnit", this._transportUnit.Clone());
		}
		
		private void OnTransportUnitChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TransportUnit");
		}
		
		private void OnTransportUnitSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TransportUnitTypeTranspotUnit> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnFreightPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO", this._freightPO.Clone());
		}
		
		private void OnFreightPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO");
		}
		
		private void OnFreightPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnEscortPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO", this._escortPO.Clone());
		}
		
		private void OnEscortPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO");
		}
		
		private void OnEscortPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TranspotUnit", Id="0x0100017ECA95BFABB941B9E7FE63643FCD7C")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TransportUnitTypeTranspotUnit))]
	public partial class TranspotUnit : Element {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TranspotUnit() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// Utwórz nowy element listy.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Warehouse", Id="0x01001E57547208B49B46B4AA7CB4536B1A55")]
	public partial class Warehouse : Element {
		
		private string _warehouseAddress;
		
		private Microsoft.SharePoint.Linq.EntitySet<Partner> _partner;
		
		private Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity> _commodity;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Warehouse() {
			this._partner = new Microsoft.SharePoint.Linq.EntitySet<Partner>();
			this._partner.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnPartnerSync);
			this._partner.OnChanged += new System.EventHandler(this.OnPartnerChanged);
			this._partner.OnChanging += new System.EventHandler(this.OnPartnerChanging);
			this._commodity = new Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity>();
			this._commodity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity>>(this.OnCommoditySync);
			this._commodity.OnChanged += new System.EventHandler(this.OnCommodityChanged);
			this._commodity.OnChanging += new System.EventHandler(this.OnCommodityChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WarehouseAddress", Storage="_warehouseAddress", FieldType="Note")]
		public string WarehouseAddress {
			get {
				return this._warehouseAddress;
			}
			set {
				if ((value != this._warehouseAddress)) {
					this.OnPropertyChanging("WarehouseAddress", this._warehouseAddress);
					this._warehouseAddress = value;
					this.OnPropertyChanged("WarehouseAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Partner2WarehouseTitle", Storage="_partner", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Partner")]
		public Microsoft.SharePoint.Linq.EntitySet<Partner> Partner {
			get {
				return this._partner;
			}
			set {
				this._partner.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CommodityTitle", Storage="_commodity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public CommodityCommodity Commodity {
			get {
				return this._commodity.GetEntity();
			}
			set {
				this._commodity.SetEntity(value);
			}
		}
		
		private void OnPartnerChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Partner", this._partner.Clone());
		}
		
		private void OnPartnerChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Partner");
		}
		
		private void OnPartnerSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Warehouse = this;
			}
			else {
				e.Item.Warehouse = null;
			}
		}
		
		private void OnCommodityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Commodity", this._commodity.Clone());
		}
		
		private void OnCommodityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Commodity");
		}
		
		private void OnCommoditySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Warehouse.Add(this);
			}
			else {
				e.Item.Warehouse.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="EscortPO", Id="0x0101000276600256FA44439B3AA6A5221F14C4")]
	public partial class EscortPO : Dokument {
		
		private string _freightPO;
		
		private System.Nullable<System.DateTime> _dispatchDate;
		
		private string _eMail;
		
		private string _warehouseAddress;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _payerName;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _companyAddress;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _workZip;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _workCity;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _nIP;
		
		private Microsoft.SharePoint.Linq.EntityRef<SecurityEscortCatalog> _securityCost;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _currency;
		
		private System.Nullable<int> _securityCostIdentyfikator;
		
		private string _securityCostTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<CityType> _city;
		
		private Microsoft.SharePoint.Linq.EntityRef<CountryClass> _country;
		
		private Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity> _commodity;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _sendInvoiceTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public EscortPO() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._payerName = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._payerName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnPayerNameSync);
			this._payerName.OnChanged += new System.EventHandler(this.OnPayerNameChanged);
			this._payerName.OnChanging += new System.EventHandler(this.OnPayerNameChanging);
			this._companyAddress = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._companyAddress.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnCompanyAddressSync);
			this._companyAddress.OnChanged += new System.EventHandler(this.OnCompanyAddressChanged);
			this._companyAddress.OnChanging += new System.EventHandler(this.OnCompanyAddressChanging);
			this._workZip = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._workZip.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnWorkZipSync);
			this._workZip.OnChanged += new System.EventHandler(this.OnWorkZipChanged);
			this._workZip.OnChanging += new System.EventHandler(this.OnWorkZipChanging);
			this._workCity = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._workCity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnWorkCitySync);
			this._workCity.OnChanged += new System.EventHandler(this.OnWorkCityChanged);
			this._workCity.OnChanging += new System.EventHandler(this.OnWorkCityChanging);
			this._nIP = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._nIP.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnNIPSync);
			this._nIP.OnChanged += new System.EventHandler(this.OnNIPChanged);
			this._nIP.OnChanging += new System.EventHandler(this.OnNIPChanging);
			this._securityCost = new Microsoft.SharePoint.Linq.EntityRef<SecurityEscortCatalog>();
			this._securityCost.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog>>(this.OnSecurityCostSync);
			this._securityCost.OnChanged += new System.EventHandler(this.OnSecurityCostChanged);
			this._securityCost.OnChanging += new System.EventHandler(this.OnSecurityCostChanging);
			this._currency = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._currency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnCurrencySync);
			this._currency.OnChanged += new System.EventHandler(this.OnCurrencyChanged);
			this._currency.OnChanging += new System.EventHandler(this.OnCurrencyChanging);
			this._city = new Microsoft.SharePoint.Linq.EntityRef<CityType>();
			this._city.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnCitySync);
			this._city.OnChanged += new System.EventHandler(this.OnCityChanged);
			this._city.OnChanging += new System.EventHandler(this.OnCityChanging);
			this._country = new Microsoft.SharePoint.Linq.EntityRef<CountryClass>();
			this._country.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryClass>>(this.OnCountrySync);
			this._country.OnChanged += new System.EventHandler(this.OnCountryChanged);
			this._country.OnChanging += new System.EventHandler(this.OnCountryChanging);
			this._commodity = new Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity>();
			this._commodity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity>>(this.OnCommoditySync);
			this._commodity.OnChanged += new System.EventHandler(this.OnCommodityChanged);
			this._commodity.OnChanging += new System.EventHandler(this.OnCommodityChanging);
			this._sendInvoiceTo = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._sendInvoiceTo.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnSendInvoiceToSync);
			this._sendInvoiceTo.OnChanged += new System.EventHandler(this.OnSendInvoiceToChanged);
			this._sendInvoiceTo.OnChanging += new System.EventHandler(this.OnSendInvoiceToChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SPOFreightPO", Storage="_freightPO", FieldType="Text")]
		public string FreightPO {
			get {
				return this._freightPO;
			}
			set {
				if ((value != this._freightPO)) {
					this.OnPropertyChanging("FreightPO", this._freightPO);
					this._freightPO = value;
					this.OnPropertyChanged("FreightPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SPODispatchDate", Storage="_dispatchDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DispatchDate {
			get {
				return this._dispatchDate;
			}
			set {
				if ((value != this._dispatchDate)) {
					this.OnPropertyChanging("DispatchDate", this._dispatchDate);
					this._dispatchDate = value;
					this.OnPropertyChanged("DispatchDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailAddress", Storage="_eMail", FieldType="Text")]
		public string EMail {
			get {
				return this._eMail;
			}
			set {
				if ((value != this._eMail)) {
					this.OnPropertyChanging("EMail", this._eMail);
					this._eMail = value;
					this.OnPropertyChanged("EMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOWarehouseAddress", Storage="_warehouseAddress", FieldType="Text")]
		public string WarehouseAddress {
			get {
				return this._warehouseAddress;
			}
			set {
				if ((value != this._warehouseAddress)) {
					this.OnPropertyChanging("WarehouseAddress", this._warehouseAddress);
					this._warehouseAddress = value;
					this.OnPropertyChanged("WarehouseAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2EscortPOIndex", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerPayerName", Storage="_payerName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer PayerName {
			get {
				return this._payerName.GetEntity();
			}
			set {
				this._payerName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerCompanyAddress", Storage="_companyAddress", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer CompanyAddress {
			get {
				return this._companyAddress.GetEntity();
			}
			set {
				this._companyAddress.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerWorkZip", Storage="_workZip", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer WorkZip {
			get {
				return this._workZip.GetEntity();
			}
			set {
				this._workZip.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerWorkCity", Storage="_workCity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer WorkCity {
			get {
				return this._workCity.GetEntity();
			}
			set {
				this._workCity.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerNIP", Storage="_nIP", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer NIP {
			get {
				return this._nIP.GetEntity();
			}
			set {
				this._nIP.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2SecurityEscortRouteSecurityCost", Storage="_securityCost", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Security Escort Route")]
		public SecurityEscortCatalog SecurityCost {
			get {
				return this._securityCost.GetEntity();
			}
			set {
				this._securityCost.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2CurrencyTitle", Storage="_currency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency Currency {
			get {
				return this._currency.GetEntity();
			}
			set {
				this._currency.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SPO2PartnerTitle", Storage="_securityCostIdentyfikator", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> SecurityCostIdentyfikator {
			get {
				return this._securityCostIdentyfikator;
			}
			set {
				if ((value != this._securityCostIdentyfikator)) {
					this.OnPropertyChanging("SecurityCostIdentyfikator", this._securityCostIdentyfikator);
					this._securityCostIdentyfikator = value;
					this.OnPropertyChanged("SecurityCostIdentyfikator");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SPO2PartnerTitle", Storage="_securityCostTitle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string SecurityCostTitle {
			get {
				return this._securityCostTitle;
			}
			set {
				if ((value != this._securityCostTitle)) {
					this.OnPropertyChanging("SecurityCostTitle", this._securityCostTitle);
					this._securityCostTitle = value;
					this.OnPropertyChanged("SecurityCostTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2CityTitle", Storage="_city", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="City")]
		public CityType City {
			get {
				return this._city.GetEntity();
			}
			set {
				this._city.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2CountryTitle", Storage="_country", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Country")]
		public CountryClass Country {
			get {
				return this._country.GetEntity();
			}
			set {
				this._country.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2CommodityTitle", Storage="_commodity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public CommodityCommodity Commodity {
			get {
				return this._commodity.GetEntity();
			}
			set {
				this._commodity.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2FreightPayerSendInvoiceTo", Storage="_sendInvoiceTo", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer SendInvoiceTo {
			get {
				return this._sendInvoiceTo.GetEntity();
			}
			set {
				this._sendInvoiceTo.SetEntity(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO = this;
			}
			else {
				e.Item.EscortPO = null;
			}
		}
		
		private void OnPayerNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PayerName", this._payerName.Clone());
		}
		
		private void OnPayerNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PayerName");
		}
		
		private void OnPayerNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO.Add(this);
			}
			else {
				e.Item.EscortPO.Remove(this);
			}
		}
		
		private void OnCompanyAddressChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CompanyAddress", this._companyAddress.Clone());
		}
		
		private void OnCompanyAddressChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CompanyAddress");
		}
		
		private void OnCompanyAddressSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO0.Add(this);
			}
			else {
				e.Item.EscortPO0.Remove(this);
			}
		}
		
		private void OnWorkZipChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("WorkZip", this._workZip.Clone());
		}
		
		private void OnWorkZipChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("WorkZip");
		}
		
		private void OnWorkZipSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO1.Add(this);
			}
			else {
				e.Item.EscortPO1.Remove(this);
			}
		}
		
		private void OnWorkCityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("WorkCity", this._workCity.Clone());
		}
		
		private void OnWorkCityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("WorkCity");
		}
		
		private void OnWorkCitySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO2.Add(this);
			}
			else {
				e.Item.EscortPO2.Remove(this);
			}
		}
		
		private void OnNIPChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("NIP", this._nIP.Clone());
		}
		
		private void OnNIPChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("NIP");
		}
		
		private void OnNIPSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO3.Add(this);
			}
			else {
				e.Item.EscortPO3.Remove(this);
			}
		}
		
		private void OnSecurityCostChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityCost", this._securityCost.Clone());
		}
		
		private void OnSecurityCostChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityCost");
		}
		
		private void OnSecurityCostSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO.Add(this);
			}
			else {
				e.Item.EscortPO.Remove(this);
			}
		}
		
		private void OnCurrencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Currency", this._currency.Clone());
		}
		
		private void OnCurrencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Currency");
		}
		
		private void OnCurrencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO.Add(this);
			}
			else {
				e.Item.EscortPO.Remove(this);
			}
		}
		
		private void OnCityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("City", this._city.Clone());
		}
		
		private void OnCityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("City");
		}
		
		private void OnCitySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO.Add(this);
			}
			else {
				e.Item.EscortPO.Remove(this);
			}
		}
		
		private void OnCountryChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Country", this._country.Clone());
		}
		
		private void OnCountryChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Country");
		}
		
		private void OnCountrySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryClass> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO.Add(this);
			}
			else {
				e.Item.EscortPO.Remove(this);
			}
		}
		
		private void OnCommodityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Commodity", this._commodity.Clone());
		}
		
		private void OnCommodityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Commodity");
		}
		
		private void OnCommoditySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO.Add(this);
			}
			else {
				e.Item.EscortPO.Remove(this);
			}
		}
		
		private void OnSendInvoiceToChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SendInvoiceTo", this._sendInvoiceTo.Clone());
		}
		
		private void OnSendInvoiceToChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SendInvoiceTo");
		}
		
		private void OnSendInvoiceToSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EscortPO4.Add(this);
			}
			else {
				e.Item.EscortPO4.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Utwórz nowy dokument.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="FreightPO", Id="0x0101003147BA6CBB014B599BBDD72087081913")]
	public partial class FreightPO : Dokument {
		
		private string _freightPO0;
		
		private System.Nullable<System.DateTime> _loadingDate;
		
		private System.Nullable<System.DateTime> _dispatchDate;
		
		private string _eMail;
		
		private string _warehouseAddress;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _payerName;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _companyAddress;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _workZip;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _workCity;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _nIP;
		
		private Microsoft.SharePoint.Linq.EntityRef<TransportUnitTypeTranspotUnit> _transportUnitType;
		
		private Microsoft.SharePoint.Linq.EntityRef<Route> _transportCosts;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _currency;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _carrier;
		
		private Microsoft.SharePoint.Linq.EntityRef<CityType> _city;
		
		private Microsoft.SharePoint.Linq.EntityRef<CountryClass> _country;
		
		private Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity> _commodity;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _sendInvoiceTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public FreightPO() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._payerName = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._payerName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnPayerNameSync);
			this._payerName.OnChanged += new System.EventHandler(this.OnPayerNameChanged);
			this._payerName.OnChanging += new System.EventHandler(this.OnPayerNameChanging);
			this._companyAddress = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._companyAddress.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnCompanyAddressSync);
			this._companyAddress.OnChanged += new System.EventHandler(this.OnCompanyAddressChanged);
			this._companyAddress.OnChanging += new System.EventHandler(this.OnCompanyAddressChanging);
			this._workZip = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._workZip.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnWorkZipSync);
			this._workZip.OnChanged += new System.EventHandler(this.OnWorkZipChanged);
			this._workZip.OnChanging += new System.EventHandler(this.OnWorkZipChanging);
			this._workCity = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._workCity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnWorkCitySync);
			this._workCity.OnChanged += new System.EventHandler(this.OnWorkCityChanged);
			this._workCity.OnChanging += new System.EventHandler(this.OnWorkCityChanging);
			this._nIP = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._nIP.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnNIPSync);
			this._nIP.OnChanged += new System.EventHandler(this.OnNIPChanged);
			this._nIP.OnChanging += new System.EventHandler(this.OnNIPChanging);
			this._transportUnitType = new Microsoft.SharePoint.Linq.EntityRef<TransportUnitTypeTranspotUnit>();
			this._transportUnitType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TransportUnitTypeTranspotUnit>>(this.OnTransportUnitTypeSync);
			this._transportUnitType.OnChanged += new System.EventHandler(this.OnTransportUnitTypeChanged);
			this._transportUnitType.OnChanging += new System.EventHandler(this.OnTransportUnitTypeChanging);
			this._transportCosts = new Microsoft.SharePoint.Linq.EntityRef<Route>();
			this._transportCosts.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnTransportCostsSync);
			this._transportCosts.OnChanged += new System.EventHandler(this.OnTransportCostsChanged);
			this._transportCosts.OnChanging += new System.EventHandler(this.OnTransportCostsChanging);
			this._currency = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._currency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnCurrencySync);
			this._currency.OnChanged += new System.EventHandler(this.OnCurrencyChanged);
			this._currency.OnChanging += new System.EventHandler(this.OnCurrencyChanging);
			this._carrier = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._carrier.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnCarrierSync);
			this._carrier.OnChanged += new System.EventHandler(this.OnCarrierChanged);
			this._carrier.OnChanging += new System.EventHandler(this.OnCarrierChanging);
			this._city = new Microsoft.SharePoint.Linq.EntityRef<CityType>();
			this._city.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnCitySync);
			this._city.OnChanged += new System.EventHandler(this.OnCityChanged);
			this._city.OnChanging += new System.EventHandler(this.OnCityChanging);
			this._country = new Microsoft.SharePoint.Linq.EntityRef<CountryClass>();
			this._country.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryClass>>(this.OnCountrySync);
			this._country.OnChanged += new System.EventHandler(this.OnCountryChanged);
			this._country.OnChanging += new System.EventHandler(this.OnCountryChanging);
			this._commodity = new Microsoft.SharePoint.Linq.EntityRef<CommodityCommodity>();
			this._commodity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity>>(this.OnCommoditySync);
			this._commodity.OnChanged += new System.EventHandler(this.OnCommodityChanged);
			this._commodity.OnChanging += new System.EventHandler(this.OnCommodityChanging);
			this._sendInvoiceTo = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._sendInvoiceTo.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnSendInvoiceToSync);
			this._sendInvoiceTo.OnChanged += new System.EventHandler(this.OnSendInvoiceToChanged);
			this._sendInvoiceTo.OnChanging += new System.EventHandler(this.OnSendInvoiceToChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOFreightPO", Storage="_freightPO0", FieldType="Text")]
		public string FreightPO0 {
			get {
				return this._freightPO0;
			}
			set {
				if ((value != this._freightPO0)) {
					this.OnPropertyChanging("FreightPO0", this._freightPO0);
					this._freightPO0 = value;
					this.OnPropertyChanged("FreightPO0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOLoadingDate", Storage="_loadingDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> LoadingDate {
			get {
				return this._loadingDate;
			}
			set {
				if ((value != this._loadingDate)) {
					this.OnPropertyChanging("LoadingDate", this._loadingDate);
					this._loadingDate = value;
					this.OnPropertyChanged("LoadingDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPODispatchDate", Storage="_dispatchDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DispatchDate {
			get {
				return this._dispatchDate;
			}
			set {
				if ((value != this._dispatchDate)) {
					this.OnPropertyChanging("DispatchDate", this._dispatchDate);
					this._dispatchDate = value;
					this.OnPropertyChanged("DispatchDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailAddress", Storage="_eMail", FieldType="Text")]
		public string EMail {
			get {
				return this._eMail;
			}
			set {
				if ((value != this._eMail)) {
					this.OnPropertyChanging("EMail", this._eMail);
					this._eMail = value;
					this.OnPropertyChanged("EMail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOWarehouseAddress", Storage="_warehouseAddress", FieldType="Text")]
		public string WarehouseAddress {
			get {
				return this._warehouseAddress;
			}
			set {
				if ((value != this._warehouseAddress)) {
					this.OnPropertyChanging("WarehouseAddress", this._warehouseAddress);
					this._warehouseAddress = value;
					this.OnPropertyChanged("WarehouseAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2FreightPOIndex", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerPayerName", Storage="_payerName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer PayerName {
			get {
				return this._payerName.GetEntity();
			}
			set {
				this._payerName.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerCompanyAddress", Storage="_companyAddress", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer CompanyAddress {
			get {
				return this._companyAddress.GetEntity();
			}
			set {
				this._companyAddress.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerWorkZip", Storage="_workZip", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer WorkZip {
			get {
				return this._workZip.GetEntity();
			}
			set {
				this._workZip.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerWorkCity", Storage="_workCity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer WorkCity {
			get {
				return this._workCity.GetEntity();
			}
			set {
				this._workCity.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerNIP", Storage="_nIP", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer NIP {
			get {
				return this._nIP.GetEntity();
			}
			set {
				this._nIP.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2TransportUnitTypeTitle", Storage="_transportUnitType", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Transport Unit Type")]
		public TransportUnitTypeTranspotUnit TransportUnitType {
			get {
				return this._transportUnitType.GetEntity();
			}
			set {
				this._transportUnitType.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2RouteTransportCosts", Storage="_transportCosts", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Route")]
		public Route TransportCosts {
			get {
				return this._transportCosts.GetEntity();
			}
			set {
				this._transportCosts.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2CurrencyTitle", Storage="_currency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency Currency {
			get {
				return this._currency.GetEntity();
			}
			set {
				this._currency.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2PartnerCarrier", Storage="_carrier", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner Carrier {
			get {
				return this._carrier.GetEntity();
			}
			set {
				this._carrier.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2CityTitle", Storage="_city", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="City")]
		public CityType City {
			get {
				return this._city.GetEntity();
			}
			set {
				this._city.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2CountryTitle", Storage="_country", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Country")]
		public CountryClass Country {
			get {
				return this._country.GetEntity();
			}
			set {
				this._country.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2CommodityTitle", Storage="_commodity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public CommodityCommodity Commodity {
			get {
				return this._commodity.GetEntity();
			}
			set {
				this._commodity.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2FreightPayerSendInvoiceTo", Storage="_sendInvoiceTo", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer SendInvoiceTo {
			get {
				return this._sendInvoiceTo.GetEntity();
			}
			set {
				this._sendInvoiceTo.SetEntity(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO = this;
			}
			else {
				e.Item.FreightPO = null;
			}
		}
		
		private void OnPayerNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PayerName", this._payerName.Clone());
		}
		
		private void OnPayerNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PayerName");
		}
		
		private void OnPayerNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO.Add(this);
			}
			else {
				e.Item.FreightPO.Remove(this);
			}
		}
		
		private void OnCompanyAddressChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CompanyAddress", this._companyAddress.Clone());
		}
		
		private void OnCompanyAddressChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CompanyAddress");
		}
		
		private void OnCompanyAddressSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO0.Add(this);
			}
			else {
				e.Item.FreightPO0.Remove(this);
			}
		}
		
		private void OnWorkZipChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("WorkZip", this._workZip.Clone());
		}
		
		private void OnWorkZipChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("WorkZip");
		}
		
		private void OnWorkZipSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO1.Add(this);
			}
			else {
				e.Item.FreightPO1.Remove(this);
			}
		}
		
		private void OnWorkCityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("WorkCity", this._workCity.Clone());
		}
		
		private void OnWorkCityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("WorkCity");
		}
		
		private void OnWorkCitySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO2.Add(this);
			}
			else {
				e.Item.FreightPO2.Remove(this);
			}
		}
		
		private void OnNIPChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("NIP", this._nIP.Clone());
		}
		
		private void OnNIPChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("NIP");
		}
		
		private void OnNIPSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO3.Add(this);
			}
			else {
				e.Item.FreightPO3.Remove(this);
			}
		}
		
		private void OnTransportUnitTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TransportUnitType", this._transportUnitType.Clone());
		}
		
		private void OnTransportUnitTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TransportUnitType");
		}
		
		private void OnTransportUnitTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TransportUnitTypeTranspotUnit> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO.Add(this);
			}
			else {
				e.Item.FreightPO.Remove(this);
			}
		}
		
		private void OnTransportCostsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TransportCosts", this._transportCosts.Clone());
		}
		
		private void OnTransportCostsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TransportCosts");
		}
		
		private void OnTransportCostsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO0.Add(this);
			}
			else {
				e.Item.FreightPO0.Remove(this);
			}
		}
		
		private void OnCurrencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Currency", this._currency.Clone());
		}
		
		private void OnCurrencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Currency");
		}
		
		private void OnCurrencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO.Add(this);
			}
			else {
				e.Item.FreightPO.Remove(this);
			}
		}
		
		private void OnCarrierChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Carrier", this._carrier.Clone());
		}
		
		private void OnCarrierChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Carrier");
		}
		
		private void OnCarrierSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO.Add(this);
			}
			else {
				e.Item.FreightPO.Remove(this);
			}
		}
		
		private void OnCityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("City", this._city.Clone());
		}
		
		private void OnCityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("City");
		}
		
		private void OnCitySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO.Add(this);
			}
			else {
				e.Item.FreightPO.Remove(this);
			}
		}
		
		private void OnCountryChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Country", this._country.Clone());
		}
		
		private void OnCountryChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Country");
		}
		
		private void OnCountrySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryClass> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO.Add(this);
			}
			else {
				e.Item.FreightPO.Remove(this);
			}
		}
		
		private void OnCommodityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Commodity", this._commodity.Clone());
		}
		
		private void OnCommodityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Commodity");
		}
		
		private void OnCommoditySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CommodityCommodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO.Add(this);
			}
			else {
				e.Item.FreightPO.Remove(this);
			}
		}
		
		private void OnSendInvoiceToChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SendInvoiceTo", this._sendInvoiceTo.Clone());
		}
		
		private void OnSendInvoiceToChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SendInvoiceTo");
		}
		
		private void OnSendInvoiceToSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.FreightPO4.Add(this);
			}
			else {
				e.Item.FreightPO4.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Commodity content type
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Commodity", Id="0x01003A76AB24637A7541B0D982B65D5916CE", List="Commodity")]
	public partial class CommodityCommodity : Commodity {
		
		private System.Nullable<double> _dummy;
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntitySet<Warehouse> _warehouse;
		
		private Microsoft.SharePoint.Linq.EntitySet<EscortPO> _escortPO;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CommodityCommodity() {
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._warehouse = new Microsoft.SharePoint.Linq.EntitySet<Warehouse>();
			this._warehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnWarehouseSync);
			this._warehouse.OnChanged += new System.EventHandler(this.OnWarehouseChanged);
			this._warehouse.OnChanging += new System.EventHandler(this.OnWarehouseChanging);
			this._escortPO = new Microsoft.SharePoint.Linq.EntitySet<EscortPO>();
			this._escortPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPOSync);
			this._escortPO.OnChanged += new System.EventHandler(this.OnEscortPOChanged);
			this._escortPO.OnChanging += new System.EventHandler(this.OnEscortPOChanging);
			this._freightPO = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPOSync);
			this._freightPO.OnChanged += new System.EventHandler(this.OnFreightPOChanged);
			this._freightPO.OnChanging += new System.EventHandler(this.OnFreightPOChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dummy", Storage="_dummy", FieldType="Number")]
		public System.Nullable<double> Dummy {
			get {
				return this._dummy;
			}
			set {
				if ((value != this._dummy)) {
					this.OnPropertyChanging("Dummy", this._dummy);
					this._dummy = value;
					this.OnPropertyChanged("Dummy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2Commodity", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CommodityTitle", Storage="_warehouse", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Warehouse")]
		public Microsoft.SharePoint.Linq.EntitySet<Warehouse> Warehouse {
			get {
				return this._warehouse;
			}
			set {
				this._warehouse.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2CommodityTitle", Storage="_escortPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<EscortPO> EscortPO {
			get {
				return this._escortPO;
			}
			set {
				this._escortPO.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2CommodityTitle", Storage="_freightPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO {
			get {
				return this._freightPO;
			}
			set {
				this._freightPO.Assign(value);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Commodity = this;
			}
			else {
				e.Item.Commodity = null;
			}
		}
		
		private void OnWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Warehouse", this._warehouse.Clone());
		}
		
		private void OnWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Warehouse");
		}
		
		private void OnWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Commodity = this;
			}
			else {
				e.Item.Commodity = null;
			}
		}
		
		private void OnEscortPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO", this._escortPO.Clone());
		}
		
		private void OnEscortPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO");
		}
		
		private void OnEscortPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Commodity = this;
			}
			else {
				e.Item.Commodity = null;
			}
		}
		
		private void OnFreightPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO", this._freightPO.Clone());
		}
		
		private void OnFreightPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO");
		}
		
		private void OnFreightPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Commodity = this;
			}
			else {
				e.Item.Commodity = null;
			}
		}
	}
	
	/// <summary>
	/// Country
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CountryType", Id="0x0100CE031DC456C86C409854D818EDA7E1F3", List="Country")]
	public partial class CountryClass : CountryType {
		
		private System.Nullable<double> _dummy;
		
		private Microsoft.SharePoint.Linq.EntitySet<CityType> _cityType;
		
		private Microsoft.SharePoint.Linq.EntitySet<EscortPO> _escortPO;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CountryClass() {
			this._cityType = new Microsoft.SharePoint.Linq.EntitySet<CityType>();
			this._cityType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnCityTypeSync);
			this._cityType.OnChanged += new System.EventHandler(this.OnCityTypeChanged);
			this._cityType.OnChanging += new System.EventHandler(this.OnCityTypeChanging);
			this._escortPO = new Microsoft.SharePoint.Linq.EntitySet<EscortPO>();
			this._escortPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnEscortPOSync);
			this._escortPO.OnChanged += new System.EventHandler(this.OnEscortPOChanged);
			this._escortPO.OnChanging += new System.EventHandler(this.OnEscortPOChanging);
			this._freightPO = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPOSync);
			this._freightPO.OnChanged += new System.EventHandler(this.OnFreightPOChanged);
			this._freightPO.OnChanging += new System.EventHandler(this.OnFreightPOChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dummy", Storage="_dummy", FieldType="Number")]
		public System.Nullable<double> Dummy {
			get {
				return this._dummy;
			}
			set {
				if ((value != this._dummy)) {
					this.OnPropertyChanging("Dummy", this._dummy);
					this._dummy = value;
					this.OnPropertyChanged("Dummy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CountryTitle", Storage="_cityType", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="City")]
		public Microsoft.SharePoint.Linq.EntitySet<CityType> CityType {
			get {
				return this._cityType;
			}
			set {
				this._cityType.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SPO2CountryTitle", Storage="_escortPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<EscortPO> EscortPO {
			get {
				return this._escortPO;
			}
			set {
				this._escortPO.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2CountryTitle", Storage="_freightPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO {
			get {
				return this._freightPO;
			}
			set {
				this._freightPO.Assign(value);
			}
		}
		
		private void OnCityTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CityType", this._cityType.Clone());
		}
		
		private void OnCityTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CityType");
		}
		
		private void OnCityTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CountryName = this;
			}
			else {
				e.Item.CountryName = null;
			}
		}
		
		private void OnEscortPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EscortPO", this._escortPO.Clone());
		}
		
		private void OnEscortPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EscortPO");
		}
		
		private void OnEscortPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Country = this;
			}
			else {
				e.Item.Country = null;
			}
		}
		
		private void OnFreightPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO", this._freightPO.Clone());
		}
		
		private void OnFreightPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO");
		}
		
		private void OnFreightPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Country = this;
			}
			else {
				e.Item.Country = null;
			}
		}
	}
	
	/// <summary>
	/// Transpot Unit
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TranspotUnit", Id="0x0100017ECA95BFABB941B9E7FE63643FCD7C", List="Transport Unit Type")]
	public partial class TransportUnitTypeTranspotUnit : TranspotUnit {
		
		private System.Nullable<double> _dummy;
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<FreightPO> _freightPO;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TransportUnitTypeTranspotUnit() {
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._freightPO = new Microsoft.SharePoint.Linq.EntitySet<FreightPO>();
			this._freightPO.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnFreightPOSync);
			this._freightPO.OnChanged += new System.EventHandler(this.OnFreightPOChanged);
			this._freightPO.OnChanging += new System.EventHandler(this.OnFreightPOChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Dummy", Storage="_dummy", FieldType="Number")]
		public System.Nullable<double> Dummy {
			get {
				return this._dummy;
			}
			set {
				if ((value != this._dummy)) {
					this.OnPropertyChanging("Dummy", this._dummy);
					this._dummy = value;
					this.OnPropertyChanged("Dummy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TransportUnitTypeTitle", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2TransportUnitType", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FPO2TransportUnitTypeTitle", Storage="_freightPO", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntitySet<FreightPO> FreightPO {
			get {
				return this._freightPO;
			}
			set {
				this._freightPO.Assign(value);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TransportUnitType = this;
			}
			else {
				e.Item.TransportUnitType = null;
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TransportUnit = this;
			}
			else {
				e.Item.TransportUnit = null;
			}
		}
		
		private void OnFreightPOChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPO", this._freightPO.Clone());
		}
		
		private void OnFreightPOChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPO");
		}
		
		private void OnFreightPOSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TransportUnitType = this;
			}
			else {
				e.Item.TransportUnitType = null;
			}
		}
	}
	
	public enum ServiceType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Vendor")]
		Vendor = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Forwarder")]
		Forwarder = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Vendor and Forwarder")]
		VendorAndForwarder = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Security Escort Provider")]
		SecurityEscortProvider = 16,
	}
	
	public enum State : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Canceled")]
		Canceled = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Completed")]
		Completed = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Confirmed")]
		Confirmed = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Creation")]
		Creation = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Delayed")]
		Delayed = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waiting4ExternalApproval")]
		Waiting4ExternalApproval = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waiting4InternalApproval")]
		Waiting4InternalApproval = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Underway")]
		Underway = 256,
	}
	
	public enum LoadingType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Manual")]
		Manual = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Pallet")]
		Pallet = 4,
	}
	
	public enum TrailerCondition : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="5- excellent")]
		_5Excellent = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4")]
		_4 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3")]
		_3 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2")]
		_2 = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="1 - unexceptable")]
		_1Unexceptable = 32,
	}
}
