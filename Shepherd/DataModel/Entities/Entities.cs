//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.SmartFactory.Shepherd.DataModel.Entities {
	using System;
	
	
	public partial class EntitiesDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public EntitiesDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_DataImportLibrary;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name=" Data Import Library")]
		public Microsoft.SharePoint.Linq.EntityList<Document> DataImportLibrary {
			get {
				return this.GetList<Document>(" Data Import Library");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_AlarmsAndEventsList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Alarms And Events")]
		public Microsoft.SharePoint.Linq.EntityList<AlarmsAndEvents> AlarmsAndEvents {
			get {
				return this.GetList<AlarmsAndEvents>("Alarms And Events");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_BusinessDescriptionList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Business Description")]
		public Microsoft.SharePoint.Linq.EntityList<BusienssDescription> BusinessDescription {
			get {
				return this.GetList<BusienssDescription>("Business Description");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_CarrierList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Carrier")]
		public Microsoft.SharePoint.Linq.EntityList<CarrierType> Carrier {
			get {
				return this.GetList<CarrierType>("Carrier");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_CarrierPerformanceReportList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Carrier Performance Report")]
		public Microsoft.SharePoint.Linq.EntityList<CarrierPerformanceReport> CarrierPerformanceReport {
			get {
				return this.GetList<CarrierPerformanceReport>("Carrier Performance Report");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_CityList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="City")]
		public Microsoft.SharePoint.Linq.EntityList<CityType> City {
			get {
				return this.GetList<CityType>("City");
			}
		}
		
		/// <summary>
		/// Comments List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Comments")]
		public Microsoft.SharePoint.Linq.EntityList<ShippingComments> Comments {
			get {
				return this.GetList<ShippingComments>("Comments");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_CommodityList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Commodity")]
		public Microsoft.SharePoint.Linq.EntityList<Commodity> Commodity {
			get {
				return this.GetList<Commodity>("Commodity");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_CountryList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Country")]
		public Microsoft.SharePoint.Linq.EntityList<CountryType> Country {
			get {
				return this.GetList<CountryType>("Country");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_CurrencyList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Currency")]
		public Microsoft.SharePoint.Linq.EntityList<Currency> Currency {
			get {
				return this.GetList<Currency>("Currency");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_DestinationMarketList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Destination Market")]
		public Microsoft.SharePoint.Linq.EntityList<DestinationMarket> DestinationMarket {
			get {
				return this.GetList<DestinationMarket>("Destination Market");
			}
		}
		
		/// <summary>
		/// Distribution List Instance
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Distribution List")]
		public Microsoft.SharePoint.Linq.EntityList<DistributionList> DistributionList {
			get {
				return this.GetList<DistributionList>("Distribution List");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_Drivers;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Driver")]
		public Microsoft.SharePoint.Linq.EntityList<Driver> Driver {
			get {
				return this.GetList<Driver>("Driver");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_DriversTeamList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Drivers Team")]
		public Microsoft.SharePoint.Linq.EntityList<ShippingDriversTeam> DriversTeam {
			get {
				return this.GetList<ShippingDriversTeam>("Drivers Team");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_SecurityEscortPOLibrary;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Escort PO Library")]
		public Microsoft.SharePoint.Linq.EntityList<EscortPO> EscortPOLibrary {
			get {
				return this.GetList<EscortPO>("Escort PO Library");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_EventLogList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Event Log List")]
		public Microsoft.SharePoint.Linq.EntityList<Anons> EventLogList {
			get {
				return this.GetList<Anons>("Event Log List");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_FreightPayerList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Freight Payer")]
		public Microsoft.SharePoint.Linq.EntityList<FreightPayer> FreightPayer {
			get {
				return this.GetList<FreightPayer>("Freight Payer");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_FreightPOLibrary;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Freight PO Library")]
		public Microsoft.SharePoint.Linq.EntityList<FreightPO> FreightPOLibrary {
			get {
				return this.GetList<FreightPO>("Freight PO Library");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_LoadDescriptionList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Load Description")]
		public Microsoft.SharePoint.Linq.EntityList<LoadDescription> LoadDescription {
			get {
				return this.GetList<LoadDescription>("Load Description");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_MarketList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Market")]
		public Microsoft.SharePoint.Linq.EntityList<Market> Market {
			get {
				return this.GetList<Market>("Market");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_Partner;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Partner")]
		public Microsoft.SharePoint.Linq.EntityList<Partner> Partner {
			get {
				return this.GetList<Partner>("Partner");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_RouteList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Route")]
		public Microsoft.SharePoint.Linq.EntityList<Route> Route {
			get {
				return this.GetList<Route>("Route");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_SAPDestPlantList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SAP Destination Plant")]
		public Microsoft.SharePoint.Linq.EntityList<SAPDestinationPlant> SAPDestinationPlant {
			get {
				return this.GetList<SAPDestinationPlant>("SAP Destination Plant");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_ScheduleTemplateList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Schedule Template")]
		public Microsoft.SharePoint.Linq.EntityList<ScheduleTemplate> ScheduleTemplate {
			get {
				return this.GetList<ScheduleTemplate>("Schedule Template");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_SecuritySealProtocolLibrary;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Seal Protocol Library")]
		public Microsoft.SharePoint.Linq.EntityList<SealProtocol> SealProtocolLibrary {
			get {
				return this.GetList<SealProtocol>("Seal Protocol Library");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_SecurityEscortRouteList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Security Escort Route")]
		public Microsoft.SharePoint.Linq.EntityList<SecurityEscortCatalog> SecurityEscortRoute {
			get {
				return this.GetList<SecurityEscortCatalog>("Security Escort Route");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_ShipmentTypeList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Shipment Type")]
		public Microsoft.SharePoint.Linq.EntityList<ShipmentType> ShipmentType {
			get {
				return this.GetList<ShipmentType>("Shipment Type");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_ShippingsList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Shipping")]
		public Microsoft.SharePoint.Linq.EntityList<Shipping> Shipping {
			get {
				return this.GetList<Shipping>("Shipping");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_ShippingPointList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Shipping Point")]
		public Microsoft.SharePoint.Linq.EntityList<ShippingPoint> ShippingPoint {
			get {
				return this.GetList<ShippingPoint>("Shipping Point");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_TimeSlotTemplateList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Time Slot")]
		public Microsoft.SharePoint.Linq.EntityList<TimeSlotTimeSlot> TimeSlot {
			get {
				return this.GetList<TimeSlotTimeSlot>("Time Slot");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_TimeSlotTemplateList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="TimeSlots Template")]
		public Microsoft.SharePoint.Linq.EntityList<TimeSlotsTemplate> TimeSlotsTemplate {
			get {
				return this.GetList<TimeSlotsTemplate>("TimeSlots Template");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_TrailersList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Trailer")]
		public Microsoft.SharePoint.Linq.EntityList<Trailer> Trailer {
			get {
				return this.GetList<Trailer>("Trailer");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_TransportUnitTypeList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Transport Unit Type")]
		public Microsoft.SharePoint.Linq.EntityList<TranspotUnit> TransportUnitType {
			get {
				return this.GetList<TranspotUnit>("Transport Unit Type");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_TrucksList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Truck")]
		public Microsoft.SharePoint.Linq.EntityList<Truck> Truck {
			get {
				return this.GetList<Truck>("Truck");
			}
		}
		
		/// <summary>
		/// $Resources:CASSmartFactoryShepherd,CAS_WarehouseList;
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Warehouse")]
		public Microsoft.SharePoint.Linq.EntityList<Warehouse> Warehouse {
			get {
				return this.GetList<Warehouse>("Warehouse");
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Document))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AlarmsAndEvents))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(BusienssDescription))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CarrierType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CarrierPerformanceReport))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CityType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ShippingComments))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Commodity))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CountryType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Currency))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DestinationMarket))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DistributionList))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Driver))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ShippingDriversTeam))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Anons))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(FreightPayer))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(LoadDescription))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Market))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Partner))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Route))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SAPDestinationPlant))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ScheduleTemplate))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SecurityEscortCatalog))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ShipmentType))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Shipping))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ShippingPoint))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Event))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TimeSlotsTemplate))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Trailer))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TranspotUnit))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Truck))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Warehouse))]
	public partial class Element : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _version;
		
		private string _path;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		private string _title;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Element() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Id {
			get {
				return this._id;
			}
			set {
				if ((value != this._id)) {
					this.OnPropertyChanging("Id", this._id);
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Version {
			get {
				return this._version;
			}
			set {
				if ((value != this._version)) {
					this.OnPropertyChanging("Version", this._version);
					this._version = value;
					this.OnPropertyChanged("Version");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Path {
			get {
				return this._path;
			}
			set {
				if ((value != this._path)) {
					this.OnPropertyChanging("Path", this._path);
					this._path = value;
					this.OnPropertyChanged("Path");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				if ((value != this._title)) {
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EscortPO))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(FreightPO))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SealProtocol))]
	public partial class Document : Element {
		
		private string _name;
		
		private string _documentModifiedBy;
		
		private string _documentCreatedBy;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Document() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_documentModifiedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentModifiedBy {
			get {
				return this._documentModifiedBy;
			}
			set {
				if ((value != this._documentModifiedBy)) {
					this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
					this._documentModifiedBy = value;
					this.OnPropertyChanged("DocumentModifiedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_documentCreatedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentCreatedBy {
			get {
				return this._documentCreatedBy;
			}
			set {
				if ((value != this._documentCreatedBy)) {
					this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
					this._documentCreatedBy = value;
					this.OnPropertyChanged("DocumentCreatedBy");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new news item, status or other short piece of information.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Announcement", Id="0x0104")]
	public partial class Anons : Element {
		
		private string _body;
		
		private System.Nullable<System.DateTime> _expires;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Anons() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_expires", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Expires {
			get {
				return this._expires;
			}
			set {
				if ((value != this._expires)) {
					this.OnPropertyChanging("Expires", this._expires);
					this._expires = value;
					this.OnPropertyChanged("Expires");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new meeting, deadline or other event.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Event", Id="0x0102")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TimeSlot))]
	public partial class Event : Element {
		
		private string _location;
		
		protected System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		private string _description;
		
		private System.Nullable<bool> _allDayEvent;
		
		private System.Nullable<bool> _recurrence;
		
		private System.Nullable<bool> _workspace;
		
		private System.Nullable<Category> _category;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Event() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Location", Storage="_location", FieldType="Text")]
		public virtual string Location {
			get {
				return this._location;
			}
			set {
				if ((value != this._location)) {
					this.OnPropertyChanging("Location", this._location);
					this._location = value;
					this.OnPropertyChanged("Location");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndDate", Storage="_endTime", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndTime {
			get {
				return this._endTime;
			}
			set {
				if ((value != this._endTime)) {
					this.OnPropertyChanging("EndTime", this._endTime);
					this._endTime = value;
					this.OnPropertyChanged("EndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_description", FieldType="Note")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fAllDayEvent", Storage="_allDayEvent", FieldType="AllDayEvent")]
		public virtual System.Nullable<bool> AllDayEvent {
			get {
				return this._allDayEvent;
			}
			set {
				if ((value != this._allDayEvent)) {
					this.OnPropertyChanging("AllDayEvent", this._allDayEvent);
					this._allDayEvent = value;
					this.OnPropertyChanged("AllDayEvent");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fRecurrence", Storage="_recurrence", FieldType="Recurrence")]
		public virtual System.Nullable<bool> Recurrence {
			get {
				return this._recurrence;
			}
			set {
				if ((value != this._recurrence)) {
					this.OnPropertyChanging("Recurrence", this._recurrence);
					this._recurrence = value;
					this.OnPropertyChanged("Recurrence");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkspaceLink", Storage="_workspace", FieldType="CrossProjectLink")]
		public virtual System.Nullable<bool> Workspace {
			get {
				return this._workspace;
			}
			set {
				if ((value != this._workspace)) {
					this.OnPropertyChanging("Workspace", this._workspace);
					this._workspace = value;
					this.OnPropertyChanged("Workspace");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", FieldType="Choice")]
		public virtual System.Nullable<Category> Category {
			get {
				return this._category;
			}
			set {
				if ((value != this._category)) {
					this.OnPropertyChanging("Category", this._category);
					this._category = value;
					this.OnPropertyChanged("Category");
				}
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_AlarmsAndEventsListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="AlarmsAndEvents", Id="0x010049AA7238FCE34BE18336F419AE924845")]
	public partial class AlarmsAndEvents : Element {
		
		private string _alarmAndEventDetails;
		
		private string _alarmAndEventOwner;
		
		private System.Nullable<AlarmPriority> _alarmPriority;
		
		private Microsoft.SharePoint.Linq.EntityRef<Shipping> _alarmsAndEventsList2Shipping;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _alarmsAndEventsList2PartnerTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AlarmsAndEvents() {
			this._alarmsAndEventsList2Shipping = new Microsoft.SharePoint.Linq.EntityRef<Shipping>();
			this._alarmsAndEventsList2Shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnAlarmsAndEventsList2ShippingSync);
			this._alarmsAndEventsList2Shipping.OnChanged += new System.EventHandler(this.OnAlarmsAndEventsList2ShippingChanged);
			this._alarmsAndEventsList2Shipping.OnChanging += new System.EventHandler(this.OnAlarmsAndEventsList2ShippingChanging);
			this._alarmsAndEventsList2PartnerTitle = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._alarmsAndEventsList2PartnerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnAlarmsAndEventsList2PartnerTitleSync);
			this._alarmsAndEventsList2PartnerTitle.OnChanged += new System.EventHandler(this.OnAlarmsAndEventsList2PartnerTitleChanged);
			this._alarmsAndEventsList2PartnerTitle.OnChanging += new System.EventHandler(this.OnAlarmsAndEventsList2PartnerTitleChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlarmAndEventDetails", Storage="_alarmAndEventDetails", FieldType="Text")]
		public string AlarmAndEventDetails {
			get {
				return this._alarmAndEventDetails;
			}
			set {
				if ((value != this._alarmAndEventDetails)) {
					this.OnPropertyChanging("AlarmAndEventDetails", this._alarmAndEventDetails);
					this._alarmAndEventDetails = value;
					this.OnPropertyChanged("AlarmAndEventDetails");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlarmAndEventOwner", Storage="_alarmAndEventOwner", FieldType="Text")]
		public string AlarmAndEventOwner {
			get {
				return this._alarmAndEventOwner;
			}
			set {
				if ((value != this._alarmAndEventOwner)) {
					this.OnPropertyChanging("AlarmAndEventOwner", this._alarmAndEventOwner);
					this._alarmAndEventOwner = value;
					this.OnPropertyChanged("AlarmAndEventOwner");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlarmPriority", Storage="_alarmPriority", FieldType="Choice")]
		public System.Nullable<AlarmPriority> AlarmPriority {
			get {
				return this._alarmPriority;
			}
			set {
				if ((value != this._alarmPriority)) {
					this.OnPropertyChanging("AlarmPriority", this._alarmPriority);
					this._alarmPriority = value;
					this.OnPropertyChanged("AlarmPriority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2Shipping", Storage="_alarmsAndEventsList2Shipping", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public Shipping AlarmsAndEventsList2Shipping {
			get {
				return this._alarmsAndEventsList2Shipping.GetEntity();
			}
			set {
				this._alarmsAndEventsList2Shipping.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2PartnerTitle", Storage="_alarmsAndEventsList2PartnerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner AlarmsAndEventsList2PartnerTitle {
			get {
				return this._alarmsAndEventsList2PartnerTitle.GetEntity();
			}
			set {
				this._alarmsAndEventsList2PartnerTitle.SetEntity(value);
			}
		}
		
		private void OnAlarmsAndEventsList2ShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AlarmsAndEventsList2Shipping", this._alarmsAndEventsList2Shipping.Clone());
		}
		
		private void OnAlarmsAndEventsList2ShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AlarmsAndEventsList2Shipping");
		}
		
		private void OnAlarmsAndEventsList2ShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AlarmsAndEvents.Add(this);
			}
			else {
				e.Item.AlarmsAndEvents.Remove(this);
			}
		}
		
		private void OnAlarmsAndEventsList2PartnerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AlarmsAndEventsList2PartnerTitle", this._alarmsAndEventsList2PartnerTitle.Clone());
		}
		
		private void OnAlarmsAndEventsList2PartnerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AlarmsAndEventsList2PartnerTitle");
		}
		
		private void OnAlarmsAndEventsList2PartnerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AlarmsAndEvents.Add(this);
			}
			else {
				e.Item.AlarmsAndEvents.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_BusinessDescriptionListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="BusienssDescription", Id="0x01004370601701A847C99F7609B048824AA9")]
	public partial class BusienssDescription : Element {
		
		private string _additionalComments;
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog> _securityEscortCatalog;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public BusienssDescription() {
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._securityEscortCatalog = new Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog>();
			this._securityEscortCatalog.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog>>(this.OnSecurityEscortCatalogSync);
			this._securityEscortCatalog.OnChanged += new System.EventHandler(this.OnSecurityEscortCatalogChanged);
			this._securityEscortCatalog.OnChanging += new System.EventHandler(this.OnSecurityEscortCatalogChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AdditionalComments", Storage="_additionalComments", FieldType="Text")]
		public string AdditionalComments {
			get {
				return this._additionalComments;
			}
			set {
				if ((value != this._additionalComments)) {
					this.OnPropertyChanging("AdditionalComments", this._additionalComments);
					this._additionalComments = value;
					this.OnPropertyChanged("AdditionalComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2BusinessDescriptionTitle", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityEscortCatalog2BusinessDescriptionTitle", Storage="_securityEscortCatalog", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Security Escort Route")]
		public Microsoft.SharePoint.Linq.EntitySet<SecurityEscortCatalog> SecurityEscortCatalog {
			get {
				return this._securityEscortCatalog;
			}
			set {
				this._securityEscortCatalog.Assign(value);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route2BusinessDescriptionTitle = this;
			}
			else {
				e.Item.Route2BusinessDescriptionTitle = null;
			}
		}
		
		private void OnSecurityEscortCatalogChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscortCatalog", this._securityEscortCatalog.Clone());
		}
		
		private void OnSecurityEscortCatalogChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscortCatalog");
		}
		
		private void OnSecurityEscortCatalogSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscortCatalog2BusinessDescriptionTitle = this;
			}
			else {
				e.Item.SecurityEscortCatalog2BusinessDescriptionTitle = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_CarriersListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CarrierType", Id="0x0100FB94BE01F9B0429F89E6A98EA44AA06E")]
	public partial class CarrierType : Element {
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CarrierType() {
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CarrierTitle", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CarrierTitle = this;
			}
			else {
				e.Item.CarrierTitle = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_CarrierPerformanceReportListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CarrierPerformanceReport", Id="0x0100BB5037BBD6ED46B98AC227A358889AFA")]
	public partial class CarrierPerformanceReport : Element {
		
		private string _reportPeriod;
		
		private System.Nullable<System.DateTime> _cPRDate;
		
		private System.Nullable<double> _cPRNumberOrdered;
		
		private System.Nullable<double> _cPRNumberOnTime;
		
		private System.Nullable<double> _cPRNumberDelayed;
		
		private System.Nullable<double> _cPRNumberDelayed1h;
		
		private System.Nullable<double> _cPRNumberNotShowingUp;
		
		private System.Nullable<double> _cPRNumberRejectedBadQuality;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _cPR2PartnerTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CarrierPerformanceReport() {
			this._cPR2PartnerTitle = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._cPR2PartnerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnCPR2PartnerTitleSync);
			this._cPR2PartnerTitle.OnChanged += new System.EventHandler(this.OnCPR2PartnerTitleChanged);
			this._cPR2PartnerTitle.OnChanging += new System.EventHandler(this.OnCPR2PartnerTitleChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportPeriod", Storage="_reportPeriod", FieldType="Text")]
		public string ReportPeriod {
			get {
				return this._reportPeriod;
			}
			set {
				if ((value != this._reportPeriod)) {
					this.OnPropertyChanging("ReportPeriod", this._reportPeriod);
					this._reportPeriod = value;
					this.OnPropertyChanged("ReportPeriod");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CPRDate", Storage="_cPRDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CPRDate {
			get {
				return this._cPRDate;
			}
			set {
				if ((value != this._cPRDate)) {
					this.OnPropertyChanging("CPRDate", this._cPRDate);
					this._cPRDate = value;
					this.OnPropertyChanged("CPRDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CPRNumberOrdered", Storage="_cPRNumberOrdered", FieldType="Number")]
		public System.Nullable<double> CPRNumberOrdered {
			get {
				return this._cPRNumberOrdered;
			}
			set {
				if ((value != this._cPRNumberOrdered)) {
					this.OnPropertyChanging("CPRNumberOrdered", this._cPRNumberOrdered);
					this._cPRNumberOrdered = value;
					this.OnPropertyChanged("CPRNumberOrdered");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CPRNumberOnTime", Storage="_cPRNumberOnTime", FieldType="Number")]
		public System.Nullable<double> CPRNumberOnTime {
			get {
				return this._cPRNumberOnTime;
			}
			set {
				if ((value != this._cPRNumberOnTime)) {
					this.OnPropertyChanging("CPRNumberOnTime", this._cPRNumberOnTime);
					this._cPRNumberOnTime = value;
					this.OnPropertyChanged("CPRNumberOnTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CPRNumberDelayed", Storage="_cPRNumberDelayed", FieldType="Number")]
		public System.Nullable<double> CPRNumberDelayed {
			get {
				return this._cPRNumberDelayed;
			}
			set {
				if ((value != this._cPRNumberDelayed)) {
					this.OnPropertyChanging("CPRNumberDelayed", this._cPRNumberDelayed);
					this._cPRNumberDelayed = value;
					this.OnPropertyChanged("CPRNumberDelayed");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CPRNumberDelayed1h", Storage="_cPRNumberDelayed1h", FieldType="Number")]
		public System.Nullable<double> CPRNumberDelayed1h {
			get {
				return this._cPRNumberDelayed1h;
			}
			set {
				if ((value != this._cPRNumberDelayed1h)) {
					this.OnPropertyChanging("CPRNumberDelayed1h", this._cPRNumberDelayed1h);
					this._cPRNumberDelayed1h = value;
					this.OnPropertyChanged("CPRNumberDelayed1h");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CPRNumberNotShowingUp", Storage="_cPRNumberNotShowingUp", FieldType="Number")]
		public System.Nullable<double> CPRNumberNotShowingUp {
			get {
				return this._cPRNumberNotShowingUp;
			}
			set {
				if ((value != this._cPRNumberNotShowingUp)) {
					this.OnPropertyChanging("CPRNumberNotShowingUp", this._cPRNumberNotShowingUp);
					this._cPRNumberNotShowingUp = value;
					this.OnPropertyChanged("CPRNumberNotShowingUp");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CPRNumberRejectedBadQuality", Storage="_cPRNumberRejectedBadQuality", FieldType="Number")]
		public System.Nullable<double> CPRNumberRejectedBadQuality {
			get {
				return this._cPRNumberRejectedBadQuality;
			}
			set {
				if ((value != this._cPRNumberRejectedBadQuality)) {
					this.OnPropertyChanging("CPRNumberRejectedBadQuality", this._cPRNumberRejectedBadQuality);
					this._cPRNumberRejectedBadQuality = value;
					this.OnPropertyChanged("CPRNumberRejectedBadQuality");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CPR2PartnerTitle", Storage="_cPR2PartnerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner CPR2PartnerTitle {
			get {
				return this._cPR2PartnerTitle.GetEntity();
			}
			set {
				this._cPR2PartnerTitle.SetEntity(value);
			}
		}
		
		private void OnCPR2PartnerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CPR2PartnerTitle", this._cPR2PartnerTitle.Clone());
		}
		
		private void OnCPR2PartnerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CPR2PartnerTitle");
		}
		
		private void OnCPR2PartnerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CarrierPerformanceReport.Add(this);
			}
			else {
				e.Item.CarrierPerformanceReport.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_CityListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CityType", Id="0x01003C7CE387CDAEA94B89FEB3FC6264FB71")]
	public partial class CityType : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<CountryType> _countryTitle;
		
		private Microsoft.SharePoint.Linq.EntitySet<DestinationMarket> _destinationMarket;
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CityType() {
			this._countryTitle = new Microsoft.SharePoint.Linq.EntityRef<CountryType>();
			this._countryTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryType>>(this.OnCountryTitleSync);
			this._countryTitle.OnChanged += new System.EventHandler(this.OnCountryTitleChanged);
			this._countryTitle.OnChanging += new System.EventHandler(this.OnCountryTitleChanging);
			this._destinationMarket = new Microsoft.SharePoint.Linq.EntitySet<DestinationMarket>();
			this._destinationMarket.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<DestinationMarket>>(this.OnDestinationMarketSync);
			this._destinationMarket.OnChanged += new System.EventHandler(this.OnDestinationMarketChanged);
			this._destinationMarket.OnChanging += new System.EventHandler(this.OnDestinationMarketChanging);
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CountryTitle", Storage="_countryTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Country")]
		public CountryType CountryTitle {
			get {
				return this._countryTitle.GetEntity();
			}
			set {
				this._countryTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DestinationMarket2CityTitle", Storage="_destinationMarket", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Destination Market")]
		public Microsoft.SharePoint.Linq.EntitySet<DestinationMarket> DestinationMarket {
			get {
				return this._destinationMarket;
			}
			set {
				this._destinationMarket.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2CityTitle", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2City", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnCountryTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CountryTitle", this._countryTitle.Clone());
		}
		
		private void OnCountryTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CountryTitle");
		}
		
		private void OnCountryTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountryType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CityType.Add(this);
			}
			else {
				e.Item.CityType.Remove(this);
			}
		}
		
		private void OnDestinationMarketChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("DestinationMarket", this._destinationMarket.Clone());
		}
		
		private void OnDestinationMarketChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("DestinationMarket");
		}
		
		private void OnDestinationMarketSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<DestinationMarket> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.DestinationMarket2CityTitle = this;
			}
			else {
				e.Item.DestinationMarket2CityTitle = null;
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route2CityTitle = this;
			}
			else {
				e.Item.Route2CityTitle = null;
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2City = this;
			}
			else {
				e.Item.Shipping2City = null;
			}
		}
	}
	
	/// <summary>
	/// Shipping Comments
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ShippingComments", Id="0x0100EA883657E6BE40E0991BD77667B1D2FD")]
	public partial class ShippingComments : Element {
		
		private string _body;
		
		private System.Nullable<bool> _externalComment;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _shippingComments2PartnerTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Shipping> _shippingComments2ShippingID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ShippingComments() {
			this._shippingComments2PartnerTitle = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._shippingComments2PartnerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnShippingComments2PartnerTitleSync);
			this._shippingComments2PartnerTitle.OnChanged += new System.EventHandler(this.OnShippingComments2PartnerTitleChanged);
			this._shippingComments2PartnerTitle.OnChanging += new System.EventHandler(this.OnShippingComments2PartnerTitleChanging);
			this._shippingComments2ShippingID = new Microsoft.SharePoint.Linq.EntityRef<Shipping>();
			this._shippingComments2ShippingID.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingComments2ShippingIDSync);
			this._shippingComments2ShippingID.OnChanged += new System.EventHandler(this.OnShippingComments2ShippingIDChanged);
			this._shippingComments2ShippingID.OnChanging += new System.EventHandler(this.OnShippingComments2ShippingIDChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExternalComment", Storage="_externalComment", FieldType="Boolean")]
		public System.Nullable<bool> ExternalComment {
			get {
				return this._externalComment;
			}
			set {
				if ((value != this._externalComment)) {
					this.OnPropertyChanging("ExternalComment", this._externalComment);
					this._externalComment = value;
					this.OnPropertyChanged("ExternalComment");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type ShippingComments.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type ShippingComments.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingComments2PartnerTitle", Storage="_shippingComments2PartnerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner ShippingComments2PartnerTitle {
			get {
				return this._shippingComments2PartnerTitle.GetEntity();
			}
			set {
				this._shippingComments2PartnerTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingComments2ShippingID", Storage="_shippingComments2ShippingID", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public Shipping ShippingComments2ShippingID {
			get {
				return this._shippingComments2ShippingID.GetEntity();
			}
			set {
				this._shippingComments2ShippingID.SetEntity(value);
			}
		}
		
		private void OnShippingComments2PartnerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingComments2PartnerTitle", this._shippingComments2PartnerTitle.Clone());
		}
		
		private void OnShippingComments2PartnerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingComments2PartnerTitle");
		}
		
		private void OnShippingComments2PartnerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingComments.Add(this);
			}
			else {
				e.Item.ShippingComments.Remove(this);
			}
		}
		
		private void OnShippingComments2ShippingIDChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingComments2ShippingID", this._shippingComments2ShippingID.Clone());
		}
		
		private void OnShippingComments2ShippingIDChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingComments2ShippingID");
		}
		
		private void OnShippingComments2ShippingIDSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingComments.Add(this);
			}
			else {
				e.Item.ShippingComments.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_CommodityListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Commodity", Id="0x01003A76AB24637A7541B0D982B65D5916CE")]
	public partial class Commodity : Element {
		
		private Microsoft.SharePoint.Linq.EntitySet<LoadDescription> _loadDescription;
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntitySet<Warehouse> _warehouse;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Commodity() {
			this._loadDescription = new Microsoft.SharePoint.Linq.EntitySet<LoadDescription>();
			this._loadDescription.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription>>(this.OnLoadDescriptionSync);
			this._loadDescription.OnChanged += new System.EventHandler(this.OnLoadDescriptionChanged);
			this._loadDescription.OnChanging += new System.EventHandler(this.OnLoadDescriptionChanging);
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._warehouse = new Microsoft.SharePoint.Linq.EntitySet<Warehouse>();
			this._warehouse.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnWarehouseSync);
			this._warehouse.OnChanged += new System.EventHandler(this.OnWarehouseChanged);
			this._warehouse.OnChanging += new System.EventHandler(this.OnWarehouseChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2Commodity", Storage="_loadDescription", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Load Description")]
		public Microsoft.SharePoint.Linq.EntitySet<LoadDescription> LoadDescription {
			get {
				return this._loadDescription;
			}
			set {
				this._loadDescription.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2Commodity", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CommodityTitle", Storage="_warehouse", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Warehouse")]
		public Microsoft.SharePoint.Linq.EntitySet<Warehouse> Warehouse {
			get {
				return this._warehouse;
			}
			set {
				this._warehouse.Assign(value);
			}
		}
		
		private void OnLoadDescriptionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("LoadDescription", this._loadDescription.Clone());
		}
		
		private void OnLoadDescriptionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("LoadDescription");
		}
		
		private void OnLoadDescriptionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.LoadDescription2Commodity = this;
			}
			else {
				e.Item.LoadDescription2Commodity = null;
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route2Commodity = this;
			}
			else {
				e.Item.Route2Commodity = null;
			}
		}
		
		private void OnWarehouseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Warehouse", this._warehouse.Clone());
		}
		
		private void OnWarehouseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Warehouse");
		}
		
		private void OnWarehouseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CommodityTitle = this;
			}
			else {
				e.Item.CommodityTitle = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_CountryListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="CountryType", Id="0x0100CE031DC456C86C409854D818EDA7E1F3")]
	public partial class CountryType : Element {
		
		private string _countryGroup;
		
		private Microsoft.SharePoint.Linq.EntitySet<CityType> _cityType;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CountryType() {
			this._cityType = new Microsoft.SharePoint.Linq.EntitySet<CityType>();
			this._cityType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnCityTypeSync);
			this._cityType.OnChanged += new System.EventHandler(this.OnCityTypeChanged);
			this._cityType.OnChanging += new System.EventHandler(this.OnCityTypeChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CountryGroup", Storage="_countryGroup", FieldType="Text")]
		public string CountryGroup {
			get {
				return this._countryGroup;
			}
			set {
				if ((value != this._countryGroup)) {
					this.OnPropertyChanging("CountryGroup", this._countryGroup);
					this._countryGroup = value;
					this.OnPropertyChanged("CountryGroup");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CountryTitle", Storage="_cityType", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="City")]
		public Microsoft.SharePoint.Linq.EntitySet<CityType> CityType {
			get {
				return this._cityType;
			}
			set {
				this._cityType.Assign(value);
			}
		}
		
		private void OnCityTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CityType", this._cityType.Clone());
		}
		
		private void OnCityTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CityType");
		}
		
		private void OnCityTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CountryTitle = this;
			}
			else {
				e.Item.CountryTitle = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_CurrencyListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Currency", Id="0x010024C2D44B310A47EDB90969B622490CF9")]
	public partial class Currency : Element {
		
		private System.Nullable<double> _exchangeRate;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping0;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping1;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping2;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Currency() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._shipping0 = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShipping0Sync);
			this._shipping0.OnChanged += new System.EventHandler(this.OnShipping0Changed);
			this._shipping0.OnChanging += new System.EventHandler(this.OnShipping0Changing);
			this._shipping1 = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping1.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShipping1Sync);
			this._shipping1.OnChanged += new System.EventHandler(this.OnShipping1Changed);
			this._shipping1.OnChanging += new System.EventHandler(this.OnShipping1Changing);
			this._shipping2 = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping2.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShipping2Sync);
			this._shipping2.OnChanged += new System.EventHandler(this.OnShipping2Changed);
			this._shipping2.OnChanging += new System.EventHandler(this.OnShipping2Changing);
			this.OnCreated();
		}
		
		/// <summary>
		/// Exchange Rate
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExchangeRate", Storage="_exchangeRate", FieldType="Number")]
		public System.Nullable<double> ExchangeRate {
			get {
				return this._exchangeRate;
			}
			set {
				if ((value != this._exchangeRate)) {
					this.OnPropertyChanging("ExchangeRate", this._exchangeRate);
					this._exchangeRate = value;
					this.OnPropertyChanged("ExchangeRate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2Currency4AddCosts", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForFreight", Storage="_shipping0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping0 {
			get {
				return this._shipping0;
			}
			set {
				this._shipping0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForEscort", Storage="_shipping1", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping1 {
			get {
				return this._shipping1;
			}
			set {
				this._shipping1.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2Currency4CostsPerKU", Storage="_shipping2", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping2 {
			get {
				return this._shipping2;
			}
			set {
				this._shipping2.Assign(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2Currency4AddCosts = this;
			}
			else {
				e.Item.Shipping2Currency4AddCosts = null;
			}
		}
		
		private void OnShipping0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping0", this._shipping0.Clone());
		}
		
		private void OnShipping0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping0");
		}
		
		private void OnShipping0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2CurrencyForFreight = this;
			}
			else {
				e.Item.Shipping2CurrencyForFreight = null;
			}
		}
		
		private void OnShipping1Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping1", this._shipping1.Clone());
		}
		
		private void OnShipping1Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping1");
		}
		
		private void OnShipping1Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2CurrencyForEscort = this;
			}
			else {
				e.Item.Shipping2CurrencyForEscort = null;
			}
		}
		
		private void OnShipping2Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2", this._shipping2.Clone());
		}
		
		private void OnShipping2Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2");
		}
		
		private void OnShipping2Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2Currency4CostsPerKU = this;
			}
			else {
				e.Item.Shipping2Currency4CostsPerKU = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_DestinationMarketListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="DestinationMarket", Id="0x01002CD380C2A0BC484CAF14A0A71DADEF4E")]
	public partial class DestinationMarket : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<CityType> _destinationMarket2CityTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Market> _marketTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DestinationMarket() {
			this._destinationMarket2CityTitle = new Microsoft.SharePoint.Linq.EntityRef<CityType>();
			this._destinationMarket2CityTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnDestinationMarket2CityTitleSync);
			this._destinationMarket2CityTitle.OnChanged += new System.EventHandler(this.OnDestinationMarket2CityTitleChanged);
			this._destinationMarket2CityTitle.OnChanging += new System.EventHandler(this.OnDestinationMarket2CityTitleChanging);
			this._marketTitle = new Microsoft.SharePoint.Linq.EntityRef<Market>();
			this._marketTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Market>>(this.OnMarketTitleSync);
			this._marketTitle.OnChanged += new System.EventHandler(this.OnMarketTitleChanged);
			this._marketTitle.OnChanging += new System.EventHandler(this.OnMarketTitleChanging);
			this.OnCreated();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type DestinationMarket.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type DestinationMarket.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DestinationMarket2CityTitle", Storage="_destinationMarket2CityTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="City")]
		public CityType DestinationMarket2CityTitle {
			get {
				return this._destinationMarket2CityTitle.GetEntity();
			}
			set {
				this._destinationMarket2CityTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MarketTitle", Storage="_marketTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Market")]
		public Market MarketTitle {
			get {
				return this._marketTitle.GetEntity();
			}
			set {
				this._marketTitle.SetEntity(value);
			}
		}
		
		private void OnDestinationMarket2CityTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("DestinationMarket2CityTitle", this._destinationMarket2CityTitle.Clone());
		}
		
		private void OnDestinationMarket2CityTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("DestinationMarket2CityTitle");
		}
		
		private void OnDestinationMarket2CityTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.DestinationMarket.Add(this);
			}
			else {
				e.Item.DestinationMarket.Remove(this);
			}
		}
		
		private void OnMarketTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("MarketTitle", this._marketTitle.Clone());
		}
		
		private void OnMarketTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("MarketTitle");
		}
		
		private void OnMarketTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Market> e) {
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_DistributionListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="DistributionList", Id="0x01009EC30F7F369D427D825C9478610D3E58")]
	public partial class DistributionList : Element {
		
		private string _emailAddress;
		
		private System.Nullable<ShepherdRole> _shepherdRole;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DistributionList() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailAddress", Storage="_emailAddress", FieldType="Text")]
		public string EmailAddress {
			get {
				return this._emailAddress;
			}
			set {
				if ((value != this._emailAddress)) {
					this.OnPropertyChanging("EmailAddress", this._emailAddress);
					this._emailAddress = value;
					this.OnPropertyChanged("EmailAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShepherdRole", Storage="_shepherdRole", FieldType="Choice")]
		public System.Nullable<ShepherdRole> ShepherdRole {
			get {
				return this._shepherdRole;
			}
			set {
				if ((value != this._shepherdRole)) {
					this.OnPropertyChanging("ShepherdRole", this._shepherdRole);
					this._shepherdRole = value;
					this.OnPropertyChanged("ShepherdRole");
				}
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_DriversListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Driver", Id="0x0100B0982F01816047B1ABFF933B9F49B5DB")]
	public partial class Driver : Element {
		
		private string _identityDocumentNumber;
		
		private string _cellPhone;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _driver2PartnerTitle;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> _shippingDriversTeam;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Driver() {
			this._driver2PartnerTitle = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._driver2PartnerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnDriver2PartnerTitleSync);
			this._driver2PartnerTitle.OnChanged += new System.EventHandler(this.OnDriver2PartnerTitleChanged);
			this._driver2PartnerTitle.OnChanging += new System.EventHandler(this.OnDriver2PartnerTitleChanging);
			this._shippingDriversTeam = new Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam>();
			this._shippingDriversTeam.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam>>(this.OnShippingDriversTeamSync);
			this._shippingDriversTeam.OnChanged += new System.EventHandler(this.OnShippingDriversTeamChanged);
			this._shippingDriversTeam.OnChanging += new System.EventHandler(this.OnShippingDriversTeamChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IdentityDocumentNumber", Storage="_identityDocumentNumber", FieldType="Text")]
		public string IdentityDocumentNumber {
			get {
				return this._identityDocumentNumber;
			}
			set {
				if ((value != this._identityDocumentNumber)) {
					this.OnPropertyChanging("IdentityDocumentNumber", this._identityDocumentNumber);
					this._identityDocumentNumber = value;
					this.OnPropertyChanged("IdentityDocumentNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CellPhone", Storage="_cellPhone", FieldType="Text")]
		public string CellPhone {
			get {
				return this._cellPhone;
			}
			set {
				if ((value != this._cellPhone)) {
					this.OnPropertyChanging("CellPhone", this._cellPhone);
					this._cellPhone = value;
					this.OnPropertyChanged("CellPhone");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Driver2PartnerTitle", Storage="_driver2PartnerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner Driver2PartnerTitle {
			get {
				return this._driver2PartnerTitle.GetEntity();
			}
			set {
				this._driver2PartnerTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DriverTitle", Storage="_shippingDriversTeam", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Drivers Team")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> ShippingDriversTeam {
			get {
				return this._shippingDriversTeam;
			}
			set {
				this._shippingDriversTeam.Assign(value);
			}
		}
		
		private void OnDriver2PartnerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Driver2PartnerTitle", this._driver2PartnerTitle.Clone());
		}
		
		private void OnDriver2PartnerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Driver2PartnerTitle");
		}
		
		private void OnDriver2PartnerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Driver.Add(this);
			}
			else {
				e.Item.Driver.Remove(this);
			}
		}
		
		private void OnShippingDriversTeamChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingDriversTeam", this._shippingDriversTeam.Clone());
		}
		
		private void OnShippingDriversTeamChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingDriversTeam");
		}
		
		private void OnShippingDriversTeamSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.DriverTitle = this;
			}
			else {
				e.Item.DriverTitle = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_DriversTeamListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ShippingDriversTeam", Id="0x01000A5D8B5F3F67453882811C27556D5D30")]
	public partial class ShippingDriversTeam : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<Driver> _driverTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Shipping> _shippingIndex;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ShippingDriversTeam() {
			this._driverTitle = new Microsoft.SharePoint.Linq.EntityRef<Driver>();
			this._driverTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Driver>>(this.OnDriverTitleSync);
			this._driverTitle.OnChanged += new System.EventHandler(this.OnDriverTitleChanged);
			this._driverTitle.OnChanging += new System.EventHandler(this.OnDriverTitleChanging);
			this._shippingIndex = new Microsoft.SharePoint.Linq.EntityRef<Shipping>();
			this._shippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingIndexSync);
			this._shippingIndex.OnChanged += new System.EventHandler(this.OnShippingIndexChanged);
			this._shippingIndex.OnChanging += new System.EventHandler(this.OnShippingIndexChanging);
			this.OnCreated();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type ShippingDriversTeam.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type ShippingDriversTeam.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="DriverTitle", Storage="_driverTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Driver")]
		public Driver DriverTitle {
			get {
				return this._driverTitle.GetEntity();
			}
			set {
				this._driverTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingIndex", Storage="_shippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public Shipping ShippingIndex {
			get {
				return this._shippingIndex.GetEntity();
			}
			set {
				this._shippingIndex.SetEntity(value);
			}
		}
		
		private void OnDriverTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("DriverTitle", this._driverTitle.Clone());
		}
		
		private void OnDriverTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("DriverTitle");
		}
		
		private void OnDriverTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Driver> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingDriversTeam.Add(this);
			}
			else {
				e.Item.ShippingDriversTeam.Remove(this);
			}
		}
		
		private void OnShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingIndex", this._shippingIndex.Clone());
		}
		
		private void OnShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingIndex");
		}
		
		private void OnShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingDriversTeam.Add(this);
			}
			else {
				e.Item.ShippingDriversTeam.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_FreightPayerCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="FreightPayer", Id="0x01002BD66F0631854603A0815888852526D0")]
	public partial class FreightPayer : Element {
		
		private string _payerName;
		
		private string _companyAddress;
		
		private string _workZip;
		
		private string _workCity;
		
		private string _workCountry;
		
		private string _nIP;
		
		private string _sendInvoiceToMultiline;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public FreightPayer() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PayerName", Storage="_payerName", FieldType="Text")]
		public string PayerName {
			get {
				return this._payerName;
			}
			set {
				if ((value != this._payerName)) {
					this.OnPropertyChanging("PayerName", this._payerName);
					this._payerName = value;
					this.OnPropertyChanged("PayerName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompanyAddress", Storage="_companyAddress", FieldType="Text")]
		public string CompanyAddress {
			get {
				return this._companyAddress;
			}
			set {
				if ((value != this._companyAddress)) {
					this.OnPropertyChanging("CompanyAddress", this._companyAddress);
					this._companyAddress = value;
					this.OnPropertyChanged("CompanyAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkZip", Storage="_workZip", FieldType="Text")]
		public string WorkZip {
			get {
				return this._workZip;
			}
			set {
				if ((value != this._workZip)) {
					this.OnPropertyChanging("WorkZip", this._workZip);
					this._workZip = value;
					this.OnPropertyChanged("WorkZip");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCity", Storage="_workCity", FieldType="Text")]
		public string WorkCity {
			get {
				return this._workCity;
			}
			set {
				if ((value != this._workCity)) {
					this.OnPropertyChanging("WorkCity", this._workCity);
					this._workCity = value;
					this.OnPropertyChanged("WorkCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkCountry", Storage="_workCountry", FieldType="Text")]
		public string WorkCountry {
			get {
				return this._workCountry;
			}
			set {
				if ((value != this._workCountry)) {
					this.OnPropertyChanging("WorkCountry", this._workCountry);
					this._workCountry = value;
					this.OnPropertyChanged("WorkCountry");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NIP", Storage="_nIP", FieldType="Text")]
		public string NIP {
			get {
				return this._nIP;
			}
			set {
				if ((value != this._nIP)) {
					this.OnPropertyChanging("NIP", this._nIP);
					this._nIP = value;
					this.OnPropertyChanged("NIP");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SendInvoiceToMultiline", Storage="_sendInvoiceToMultiline", FieldType="Note")]
		public string SendInvoiceToMultiline {
			get {
				return this._sendInvoiceToMultiline;
			}
			set {
				if ((value != this._sendInvoiceToMultiline)) {
					this.OnPropertyChanging("SendInvoiceToMultiline", this._sendInvoiceToMultiline);
					this._sendInvoiceToMultiline = value;
					this.OnPropertyChanged("SendInvoiceToMultiline");
				}
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_LoadDescriptionListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="LoadDescription", Id="0x0100F5C0C5AAA44E47B1A7CCFECEE1E8E94E")]
	public partial class LoadDescription : Element {
		
		private string _deliveryNumber;
		
		private System.Nullable<double> _goodsQuantity;
		
		private System.Nullable<double> _numberOfPallets;
		
		private string _cMRNumber;
		
		private string _invoiceNumber;
		
		private System.Nullable<PalletType> _palletType;
		
		private Microsoft.SharePoint.Linq.EntityRef<Shipping> _loadDescription2ShippingIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _loadDescription2PartnerTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Market> _marketTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Commodity> _loadDescription2Commodity;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public LoadDescription() {
			this._loadDescription2ShippingIndex = new Microsoft.SharePoint.Linq.EntityRef<Shipping>();
			this._loadDescription2ShippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnLoadDescription2ShippingIndexSync);
			this._loadDescription2ShippingIndex.OnChanged += new System.EventHandler(this.OnLoadDescription2ShippingIndexChanged);
			this._loadDescription2ShippingIndex.OnChanging += new System.EventHandler(this.OnLoadDescription2ShippingIndexChanging);
			this._loadDescription2PartnerTitle = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._loadDescription2PartnerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnLoadDescription2PartnerTitleSync);
			this._loadDescription2PartnerTitle.OnChanged += new System.EventHandler(this.OnLoadDescription2PartnerTitleChanged);
			this._loadDescription2PartnerTitle.OnChanging += new System.EventHandler(this.OnLoadDescription2PartnerTitleChanging);
			this._marketTitle = new Microsoft.SharePoint.Linq.EntityRef<Market>();
			this._marketTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Market>>(this.OnMarketTitleSync);
			this._marketTitle.OnChanged += new System.EventHandler(this.OnMarketTitleChanged);
			this._marketTitle.OnChanging += new System.EventHandler(this.OnMarketTitleChanging);
			this._loadDescription2Commodity = new Microsoft.SharePoint.Linq.EntityRef<Commodity>();
			this._loadDescription2Commodity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Commodity>>(this.OnLoadDescription2CommoditySync);
			this._loadDescription2Commodity.OnChanged += new System.EventHandler(this.OnLoadDescription2CommodityChanged);
			this._loadDescription2Commodity.OnChanging += new System.EventHandler(this.OnLoadDescription2CommodityChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DeliveryNumber", Storage="_deliveryNumber", FieldType="Text")]
		public string DeliveryNumber {
			get {
				return this._deliveryNumber;
			}
			set {
				if ((value != this._deliveryNumber)) {
					this.OnPropertyChanging("DeliveryNumber", this._deliveryNumber);
					this._deliveryNumber = value;
					this.OnPropertyChanged("DeliveryNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsQuantity", Storage="_goodsQuantity", FieldType="Number")]
		public System.Nullable<double> GoodsQuantity {
			get {
				return this._goodsQuantity;
			}
			set {
				if ((value != this._goodsQuantity)) {
					this.OnPropertyChanging("GoodsQuantity", this._goodsQuantity);
					this._goodsQuantity = value;
					this.OnPropertyChanged("GoodsQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="NumberOfPallets", Storage="_numberOfPallets", FieldType="Number")]
		public System.Nullable<double> NumberOfPallets {
			get {
				return this._numberOfPallets;
			}
			set {
				if ((value != this._numberOfPallets)) {
					this.OnPropertyChanging("NumberOfPallets", this._numberOfPallets);
					this._numberOfPallets = value;
					this.OnPropertyChanged("NumberOfPallets");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CMRNumber", Storage="_cMRNumber", FieldType="Text")]
		public string CMRNumber {
			get {
				return this._cMRNumber;
			}
			set {
				if ((value != this._cMRNumber)) {
					this.OnPropertyChanging("CMRNumber", this._cMRNumber);
					this._cMRNumber = value;
					this.OnPropertyChanged("CMRNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InvoiceNumber", Storage="_invoiceNumber", FieldType="Text")]
		public string InvoiceNumber {
			get {
				return this._invoiceNumber;
			}
			set {
				if ((value != this._invoiceNumber)) {
					this.OnPropertyChanging("InvoiceNumber", this._invoiceNumber);
					this._invoiceNumber = value;
					this.OnPropertyChanged("InvoiceNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PalletType", Storage="_palletType", FieldType="Choice")]
		public System.Nullable<PalletType> PalletType {
			get {
				return this._palletType;
			}
			set {
				if ((value != this._palletType)) {
					this.OnPropertyChanging("PalletType", this._palletType);
					this._palletType = value;
					this.OnPropertyChanged("PalletType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2ShippingIndex", Storage="_loadDescription2ShippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public Shipping LoadDescription2ShippingIndex {
			get {
				return this._loadDescription2ShippingIndex.GetEntity();
			}
			set {
				this._loadDescription2ShippingIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2PartnerTitle", Storage="_loadDescription2PartnerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner LoadDescription2PartnerTitle {
			get {
				return this._loadDescription2PartnerTitle.GetEntity();
			}
			set {
				this._loadDescription2PartnerTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="MarketTitle", Storage="_marketTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Market")]
		public Market MarketTitle {
			get {
				return this._marketTitle.GetEntity();
			}
			set {
				this._marketTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2Commodity", Storage="_loadDescription2Commodity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public Commodity LoadDescription2Commodity {
			get {
				return this._loadDescription2Commodity.GetEntity();
			}
			set {
				this._loadDescription2Commodity.SetEntity(value);
			}
		}
		
		private void OnLoadDescription2ShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("LoadDescription2ShippingIndex", this._loadDescription2ShippingIndex.Clone());
		}
		
		private void OnLoadDescription2ShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("LoadDescription2ShippingIndex");
		}
		
		private void OnLoadDescription2ShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.LoadDescription.Add(this);
			}
			else {
				e.Item.LoadDescription.Remove(this);
			}
		}
		
		private void OnLoadDescription2PartnerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("LoadDescription2PartnerTitle", this._loadDescription2PartnerTitle.Clone());
		}
		
		private void OnLoadDescription2PartnerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("LoadDescription2PartnerTitle");
		}
		
		private void OnLoadDescription2PartnerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.LoadDescription.Add(this);
			}
			else {
				e.Item.LoadDescription.Remove(this);
			}
		}
		
		private void OnMarketTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("MarketTitle", this._marketTitle.Clone());
		}
		
		private void OnMarketTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("MarketTitle");
		}
		
		private void OnMarketTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Market> e) {
		}
		
		private void OnLoadDescription2CommodityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("LoadDescription2Commodity", this._loadDescription2Commodity.Clone());
		}
		
		private void OnLoadDescription2CommodityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("LoadDescription2Commodity");
		}
		
		private void OnLoadDescription2CommoditySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Commodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.LoadDescription.Add(this);
			}
			else {
				e.Item.LoadDescription.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Market
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Market", Id="0x010002DF2DC592811A4DA07999F3867CDC82")]
	public partial class Market : Element {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Market() {
			this.OnCreated();
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_PartnersListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Partner", Id="0x010017A675502BE747DB9FB9DCB304429EEF")]
	public partial class Partner : Element {
		
		private string _vendorNumber;
		
		private string _emailAddress;
		
		private string _workPhone;
		
		private string _cellPhone;
		
		private System.Nullable<ServiceType> _serviceType;
		
		private Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> _alarmsAndEvents;
		
		private Microsoft.SharePoint.Linq.EntitySet<CarrierPerformanceReport> _carrierPerformanceReport;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingComments> _shippingComments;
		
		private Microsoft.SharePoint.Linq.EntitySet<Driver> _driver;
		
		private Microsoft.SharePoint.Linq.EntitySet<LoadDescription> _loadDescription;
		
		private System.Nullable<int> _shepherdUserId;
		
		private string _shepherdUserTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Warehouse> _partner2WarehouseTitle;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<Trailer> _trailer;
		
		private Microsoft.SharePoint.Linq.EntitySet<Truck> _truck;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Partner() {
			this._alarmsAndEvents = new Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents>();
			this._alarmsAndEvents.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents>>(this.OnAlarmsAndEventsSync);
			this._alarmsAndEvents.OnChanged += new System.EventHandler(this.OnAlarmsAndEventsChanged);
			this._alarmsAndEvents.OnChanging += new System.EventHandler(this.OnAlarmsAndEventsChanging);
			this._carrierPerformanceReport = new Microsoft.SharePoint.Linq.EntitySet<CarrierPerformanceReport>();
			this._carrierPerformanceReport.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CarrierPerformanceReport>>(this.OnCarrierPerformanceReportSync);
			this._carrierPerformanceReport.OnChanged += new System.EventHandler(this.OnCarrierPerformanceReportChanged);
			this._carrierPerformanceReport.OnChanging += new System.EventHandler(this.OnCarrierPerformanceReportChanging);
			this._shippingComments = new Microsoft.SharePoint.Linq.EntitySet<ShippingComments>();
			this._shippingComments.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingComments>>(this.OnShippingCommentsSync);
			this._shippingComments.OnChanged += new System.EventHandler(this.OnShippingCommentsChanged);
			this._shippingComments.OnChanging += new System.EventHandler(this.OnShippingCommentsChanging);
			this._driver = new Microsoft.SharePoint.Linq.EntitySet<Driver>();
			this._driver.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Driver>>(this.OnDriverSync);
			this._driver.OnChanged += new System.EventHandler(this.OnDriverChanged);
			this._driver.OnChanging += new System.EventHandler(this.OnDriverChanging);
			this._loadDescription = new Microsoft.SharePoint.Linq.EntitySet<LoadDescription>();
			this._loadDescription.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription>>(this.OnLoadDescriptionSync);
			this._loadDescription.OnChanged += new System.EventHandler(this.OnLoadDescriptionChanged);
			this._loadDescription.OnChanging += new System.EventHandler(this.OnLoadDescriptionChanging);
			this._partner2WarehouseTitle = new Microsoft.SharePoint.Linq.EntityRef<Warehouse>();
			this._partner2WarehouseTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnPartner2WarehouseTitleSync);
			this._partner2WarehouseTitle.OnChanged += new System.EventHandler(this.OnPartner2WarehouseTitleChanged);
			this._partner2WarehouseTitle.OnChanging += new System.EventHandler(this.OnPartner2WarehouseTitleChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._trailer = new Microsoft.SharePoint.Linq.EntitySet<Trailer>();
			this._trailer.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer>>(this.OnTrailerSync);
			this._trailer.OnChanged += new System.EventHandler(this.OnTrailerChanged);
			this._trailer.OnChanging += new System.EventHandler(this.OnTrailerChanging);
			this._truck = new Microsoft.SharePoint.Linq.EntitySet<Truck>();
			this._truck.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck>>(this.OnTruckSync);
			this._truck.OnChanged += new System.EventHandler(this.OnTruckChanged);
			this._truck.OnChanging += new System.EventHandler(this.OnTruckChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VendorNumber", Storage="_vendorNumber", FieldType="Text")]
		public string VendorNumber {
			get {
				return this._vendorNumber;
			}
			set {
				if ((value != this._vendorNumber)) {
					this.OnPropertyChanging("VendorNumber", this._vendorNumber);
					this._vendorNumber = value;
					this.OnPropertyChanged("VendorNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailAddress", Storage="_emailAddress", FieldType="Text")]
		public string EmailAddress {
			get {
				return this._emailAddress;
			}
			set {
				if ((value != this._emailAddress)) {
					this.OnPropertyChanging("EmailAddress", this._emailAddress);
					this._emailAddress = value;
					this.OnPropertyChanged("EmailAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkPhone", Storage="_workPhone", FieldType="Text")]
		public string WorkPhone {
			get {
				return this._workPhone;
			}
			set {
				if ((value != this._workPhone)) {
					this.OnPropertyChanging("WorkPhone", this._workPhone);
					this._workPhone = value;
					this.OnPropertyChanged("WorkPhone");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CellPhone", Storage="_cellPhone", FieldType="Text")]
		public string CellPhone {
			get {
				return this._cellPhone;
			}
			set {
				if ((value != this._cellPhone)) {
					this.OnPropertyChanging("CellPhone", this._cellPhone);
					this._cellPhone = value;
					this.OnPropertyChanged("CellPhone");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ServiceType", Storage="_serviceType", FieldType="Choice")]
		public System.Nullable<ServiceType> ServiceType {
			get {
				return this._serviceType;
			}
			set {
				if ((value != this._serviceType)) {
					this.OnPropertyChanging("ServiceType", this._serviceType);
					this._serviceType = value;
					this.OnPropertyChanged("ServiceType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2PartnerTitle", Storage="_alarmsAndEvents", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Alarms And Events")]
		public Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> AlarmsAndEvents {
			get {
				return this._alarmsAndEvents;
			}
			set {
				this._alarmsAndEvents.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CPR2PartnerTitle", Storage="_carrierPerformanceReport", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Carrier Performance Report")]
		public Microsoft.SharePoint.Linq.EntitySet<CarrierPerformanceReport> CarrierPerformanceReport {
			get {
				return this._carrierPerformanceReport;
			}
			set {
				this._carrierPerformanceReport.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingComments2PartnerTitle", Storage="_shippingComments", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Comments")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingComments> ShippingComments {
			get {
				return this._shippingComments;
			}
			set {
				this._shippingComments.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Driver2PartnerTitle", Storage="_driver", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Driver")]
		public Microsoft.SharePoint.Linq.EntitySet<Driver> Driver {
			get {
				return this._driver;
			}
			set {
				this._driver.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2PartnerTitle", Storage="_loadDescription", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Load Description")]
		public Microsoft.SharePoint.Linq.EntitySet<LoadDescription> LoadDescription {
			get {
				return this._loadDescription;
			}
			set {
				this._loadDescription.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShepherdUser", Storage="_shepherdUserId", Required=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ShepherdUserId {
			get {
				return this._shepherdUserId;
			}
			set {
				if ((value != this._shepherdUserId)) {
					this.OnPropertyChanging("ShepherdUserId", this._shepherdUserId);
					this._shepherdUserId = value;
					this.OnPropertyChanged("ShepherdUserId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShepherdUser", Storage="_shepherdUserTitle", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ShepherdUserTitle {
			get {
				return this._shepherdUserTitle;
			}
			set {
				if ((value != this._shepherdUserTitle)) {
					this.OnPropertyChanging("ShepherdUserTitle", this._shepherdUserTitle);
					this._shepherdUserTitle = value;
					this.OnPropertyChanged("ShepherdUserTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Partner2WarehouseTitle", Storage="_partner2WarehouseTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Warehouse")]
		public Warehouse Partner2WarehouseTitle {
			get {
				return this._partner2WarehouseTitle.GetEntity();
			}
			set {
				this._partner2WarehouseTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2PartnerTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Trailer2PartnerTitle", Storage="_trailer", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Trailer")]
		public Microsoft.SharePoint.Linq.EntitySet<Trailer> Trailer {
			get {
				return this._trailer;
			}
			set {
				this._trailer.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Truck2PartnerTitle", Storage="_truck", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Truck")]
		public Microsoft.SharePoint.Linq.EntitySet<Truck> Truck {
			get {
				return this._truck;
			}
			set {
				this._truck.Assign(value);
			}
		}
		
		private void OnAlarmsAndEventsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AlarmsAndEvents", this._alarmsAndEvents.Clone());
		}
		
		private void OnAlarmsAndEventsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AlarmsAndEvents");
		}
		
		private void OnAlarmsAndEventsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AlarmsAndEventsList2PartnerTitle = this;
			}
			else {
				e.Item.AlarmsAndEventsList2PartnerTitle = null;
			}
		}
		
		private void OnCarrierPerformanceReportChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CarrierPerformanceReport", this._carrierPerformanceReport.Clone());
		}
		
		private void OnCarrierPerformanceReportChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CarrierPerformanceReport");
		}
		
		private void OnCarrierPerformanceReportSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CarrierPerformanceReport> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CPR2PartnerTitle = this;
			}
			else {
				e.Item.CPR2PartnerTitle = null;
			}
		}
		
		private void OnShippingCommentsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingComments", this._shippingComments.Clone());
		}
		
		private void OnShippingCommentsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingComments");
		}
		
		private void OnShippingCommentsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingComments> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingComments2PartnerTitle = this;
			}
			else {
				e.Item.ShippingComments2PartnerTitle = null;
			}
		}
		
		private void OnDriverChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Driver", this._driver.Clone());
		}
		
		private void OnDriverChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Driver");
		}
		
		private void OnDriverSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Driver> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Driver2PartnerTitle = this;
			}
			else {
				e.Item.Driver2PartnerTitle = null;
			}
		}
		
		private void OnLoadDescriptionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("LoadDescription", this._loadDescription.Clone());
		}
		
		private void OnLoadDescriptionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("LoadDescription");
		}
		
		private void OnLoadDescriptionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.LoadDescription2PartnerTitle = this;
			}
			else {
				e.Item.LoadDescription2PartnerTitle = null;
			}
		}
		
		private void OnPartner2WarehouseTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Partner2WarehouseTitle", this._partner2WarehouseTitle.Clone());
		}
		
		private void OnPartner2WarehouseTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Partner2WarehouseTitle");
		}
		
		private void OnPartner2WarehouseTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Partner.Add(this);
			}
			else {
				e.Item.Partner.Remove(this);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2PartnerTitle = this;
			}
			else {
				e.Item.Shipping2PartnerTitle = null;
			}
		}
		
		private void OnTrailerChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Trailer", this._trailer.Clone());
		}
		
		private void OnTrailerChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Trailer");
		}
		
		private void OnTrailerSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Trailer2PartnerTitle = this;
			}
			else {
				e.Item.Trailer2PartnerTitle = null;
			}
		}
		
		private void OnTruckChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Truck", this._truck.Clone());
		}
		
		private void OnTruckChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Truck");
		}
		
		private void OnTruckSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Truck2PartnerTitle = this;
			}
			else {
				e.Item.Truck2PartnerTitle = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_RoutesListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Route", Id="0x0100121B8B770545430A8B59B62D84C02C38")]
	public partial class Route : Element {
		
		private string _materialMaster;
		
		private string _remarkMM;
		
		private string _incoterm;
		
		private string _departurePort;
		
		private string _departureCity;
		
		private System.Nullable<double> _transportCosts;
		
		private string _goodsHandlingPO;
		
		private Microsoft.SharePoint.Linq.EntityRef<CityType> _route2CityTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<BusienssDescription> _route2BusinessDescriptionTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShipmentType> _shipmentTypeTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _freightPayerTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Commodity> _route2Commodity;
		
		private Microsoft.SharePoint.Linq.EntityRef<SAPDestinationPlant> _sAPDestinationPlantTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _partnerTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<CarrierType> _carrierTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<TranspotUnit> _transportUnitTypeTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _currencyTitle;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Route() {
			this._route2CityTitle = new Microsoft.SharePoint.Linq.EntityRef<CityType>();
			this._route2CityTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnRoute2CityTitleSync);
			this._route2CityTitle.OnChanged += new System.EventHandler(this.OnRoute2CityTitleChanged);
			this._route2CityTitle.OnChanging += new System.EventHandler(this.OnRoute2CityTitleChanging);
			this._route2BusinessDescriptionTitle = new Microsoft.SharePoint.Linq.EntityRef<BusienssDescription>();
			this._route2BusinessDescriptionTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BusienssDescription>>(this.OnRoute2BusinessDescriptionTitleSync);
			this._route2BusinessDescriptionTitle.OnChanged += new System.EventHandler(this.OnRoute2BusinessDescriptionTitleChanged);
			this._route2BusinessDescriptionTitle.OnChanging += new System.EventHandler(this.OnRoute2BusinessDescriptionTitleChanging);
			this._shipmentTypeTitle = new Microsoft.SharePoint.Linq.EntityRef<ShipmentType>();
			this._shipmentTypeTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShipmentType>>(this.OnShipmentTypeTitleSync);
			this._shipmentTypeTitle.OnChanged += new System.EventHandler(this.OnShipmentTypeTitleChanged);
			this._shipmentTypeTitle.OnChanging += new System.EventHandler(this.OnShipmentTypeTitleChanging);
			this._freightPayerTitle = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._freightPayerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnFreightPayerTitleSync);
			this._freightPayerTitle.OnChanged += new System.EventHandler(this.OnFreightPayerTitleChanged);
			this._freightPayerTitle.OnChanging += new System.EventHandler(this.OnFreightPayerTitleChanging);
			this._route2Commodity = new Microsoft.SharePoint.Linq.EntityRef<Commodity>();
			this._route2Commodity.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Commodity>>(this.OnRoute2CommoditySync);
			this._route2Commodity.OnChanged += new System.EventHandler(this.OnRoute2CommodityChanged);
			this._route2Commodity.OnChanging += new System.EventHandler(this.OnRoute2CommodityChanging);
			this._sAPDestinationPlantTitle = new Microsoft.SharePoint.Linq.EntityRef<SAPDestinationPlant>();
			this._sAPDestinationPlantTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SAPDestinationPlant>>(this.OnSAPDestinationPlantTitleSync);
			this._sAPDestinationPlantTitle.OnChanged += new System.EventHandler(this.OnSAPDestinationPlantTitleChanged);
			this._sAPDestinationPlantTitle.OnChanging += new System.EventHandler(this.OnSAPDestinationPlantTitleChanging);
			this._partnerTitle = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._partnerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnPartnerTitleSync);
			this._partnerTitle.OnChanged += new System.EventHandler(this.OnPartnerTitleChanged);
			this._partnerTitle.OnChanging += new System.EventHandler(this.OnPartnerTitleChanging);
			this._carrierTitle = new Microsoft.SharePoint.Linq.EntityRef<CarrierType>();
			this._carrierTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CarrierType>>(this.OnCarrierTitleSync);
			this._carrierTitle.OnChanged += new System.EventHandler(this.OnCarrierTitleChanged);
			this._carrierTitle.OnChanging += new System.EventHandler(this.OnCarrierTitleChanging);
			this._transportUnitTypeTitle = new Microsoft.SharePoint.Linq.EntityRef<TranspotUnit>();
			this._transportUnitTypeTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TranspotUnit>>(this.OnTransportUnitTypeTitleSync);
			this._transportUnitTypeTitle.OnChanged += new System.EventHandler(this.OnTransportUnitTypeTitleChanged);
			this._transportUnitTypeTitle.OnChanging += new System.EventHandler(this.OnTransportUnitTypeTitleChanging);
			this._currencyTitle = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._currencyTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnCurrencyTitleSync);
			this._currencyTitle.OnChanged += new System.EventHandler(this.OnCurrencyTitleChanged);
			this._currencyTitle.OnChanging += new System.EventHandler(this.OnCurrencyTitleChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MaterialMaster", Storage="_materialMaster", FieldType="Text")]
		public string MaterialMaster {
			get {
				return this._materialMaster;
			}
			set {
				if ((value != this._materialMaster)) {
					this.OnPropertyChanging("MaterialMaster", this._materialMaster);
					this._materialMaster = value;
					this.OnPropertyChanged("MaterialMaster");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RemarkMM", Storage="_remarkMM", FieldType="Text")]
		public string RemarkMM {
			get {
				return this._remarkMM;
			}
			set {
				if ((value != this._remarkMM)) {
					this.OnPropertyChanging("RemarkMM", this._remarkMM);
					this._remarkMM = value;
					this.OnPropertyChanged("RemarkMM");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Incoterm", Storage="_incoterm", FieldType="Text")]
		public string Incoterm {
			get {
				return this._incoterm;
			}
			set {
				if ((value != this._incoterm)) {
					this.OnPropertyChanging("Incoterm", this._incoterm);
					this._incoterm = value;
					this.OnPropertyChanged("Incoterm");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DeparturePort", Storage="_departurePort", FieldType="Text")]
		public string DeparturePort {
			get {
				return this._departurePort;
			}
			set {
				if ((value != this._departurePort)) {
					this.OnPropertyChanging("DeparturePort", this._departurePort);
					this._departurePort = value;
					this.OnPropertyChanged("DeparturePort");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DepartureCity", Storage="_departureCity", FieldType="Text")]
		public string DepartureCity {
			get {
				return this._departureCity;
			}
			set {
				if ((value != this._departureCity)) {
					this.OnPropertyChanging("DepartureCity", this._departureCity);
					this._departureCity = value;
					this.OnPropertyChanged("DepartureCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TransportCosts", Storage="_transportCosts", FieldType="Number")]
		public System.Nullable<double> TransportCosts {
			get {
				return this._transportCosts;
			}
			set {
				if ((value != this._transportCosts)) {
					this.OnPropertyChanging("TransportCosts", this._transportCosts);
					this._transportCosts = value;
					this.OnPropertyChanged("TransportCosts");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="GoodsHandlingPO", Storage="_goodsHandlingPO", FieldType="Text")]
		public string GoodsHandlingPO {
			get {
				return this._goodsHandlingPO;
			}
			set {
				if ((value != this._goodsHandlingPO)) {
					this.OnPropertyChanging("GoodsHandlingPO", this._goodsHandlingPO);
					this._goodsHandlingPO = value;
					this.OnPropertyChanged("GoodsHandlingPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2CityTitle", Storage="_route2CityTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="City")]
		public CityType Route2CityTitle {
			get {
				return this._route2CityTitle.GetEntity();
			}
			set {
				this._route2CityTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2BusinessDescriptionTitle", Storage="_route2BusinessDescriptionTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Business Description")]
		public BusienssDescription Route2BusinessDescriptionTitle {
			get {
				return this._route2BusinessDescriptionTitle.GetEntity();
			}
			set {
				this._route2BusinessDescriptionTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShipmentTypeTitle", Storage="_shipmentTypeTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipment Type")]
		public ShipmentType ShipmentTypeTitle {
			get {
				return this._shipmentTypeTitle.GetEntity();
			}
			set {
				this._shipmentTypeTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FreightPayerTitle", Storage="_freightPayerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer FreightPayerTitle {
			get {
				return this._freightPayerTitle.GetEntity();
			}
			set {
				this._freightPayerTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Route2Commodity", Storage="_route2Commodity", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public Commodity Route2Commodity {
			get {
				return this._route2Commodity.GetEntity();
			}
			set {
				this._route2Commodity.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SAPDestinationPlantTitle", Storage="_sAPDestinationPlantTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="SAP Destination Plant")]
		public SAPDestinationPlant SAPDestinationPlantTitle {
			get {
				return this._sAPDestinationPlantTitle.GetEntity();
			}
			set {
				this._sAPDestinationPlantTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_partnerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner PartnerTitle {
			get {
				return this._partnerTitle.GetEntity();
			}
			set {
				this._partnerTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CarrierTitle", Storage="_carrierTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Carrier")]
		public CarrierType CarrierTitle {
			get {
				return this._carrierTitle.GetEntity();
			}
			set {
				this._carrierTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TransportUnitTypeTitle", Storage="_transportUnitTypeTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Transport Unit Type")]
		public TranspotUnit TransportUnitTypeTitle {
			get {
				return this._transportUnitTypeTitle.GetEntity();
			}
			set {
				this._transportUnitTypeTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CurrencyTitle", Storage="_currencyTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency CurrencyTitle {
			get {
				return this._currencyTitle.GetEntity();
			}
			set {
				this._currencyTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2RouteTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnRoute2CityTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route2CityTitle", this._route2CityTitle.Clone());
		}
		
		private void OnRoute2CityTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route2CityTitle");
		}
		
		private void OnRoute2CityTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnRoute2BusinessDescriptionTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route2BusinessDescriptionTitle", this._route2BusinessDescriptionTitle.Clone());
		}
		
		private void OnRoute2BusinessDescriptionTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route2BusinessDescriptionTitle");
		}
		
		private void OnRoute2BusinessDescriptionTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BusienssDescription> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnShipmentTypeTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShipmentTypeTitle", this._shipmentTypeTitle.Clone());
		}
		
		private void OnShipmentTypeTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShipmentTypeTitle");
		}
		
		private void OnShipmentTypeTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShipmentType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnFreightPayerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPayerTitle", this._freightPayerTitle.Clone());
		}
		
		private void OnFreightPayerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPayerTitle");
		}
		
		private void OnFreightPayerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
		}
		
		private void OnRoute2CommodityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route2Commodity", this._route2Commodity.Clone());
		}
		
		private void OnRoute2CommodityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route2Commodity");
		}
		
		private void OnRoute2CommoditySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Commodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnSAPDestinationPlantTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SAPDestinationPlantTitle", this._sAPDestinationPlantTitle.Clone());
		}
		
		private void OnSAPDestinationPlantTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SAPDestinationPlantTitle");
		}
		
		private void OnSAPDestinationPlantTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SAPDestinationPlant> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnPartnerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PartnerTitle", this._partnerTitle.Clone());
		}
		
		private void OnPartnerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PartnerTitle");
		}
		
		private void OnPartnerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnCarrierTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CarrierTitle", this._carrierTitle.Clone());
		}
		
		private void OnCarrierTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CarrierTitle");
		}
		
		private void OnCarrierTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CarrierType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnTransportUnitTypeTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TransportUnitTypeTitle", this._transportUnitTypeTitle.Clone());
		}
		
		private void OnTransportUnitTypeTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TransportUnitTypeTitle");
		}
		
		private void OnTransportUnitTypeTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TranspotUnit> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Route.Add(this);
			}
			else {
				e.Item.Route.Remove(this);
			}
		}
		
		private void OnCurrencyTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CurrencyTitle", this._currencyTitle.Clone());
		}
		
		private void OnCurrencyTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CurrencyTitle");
		}
		
		private void OnCurrencyTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2RouteTitle = this;
			}
			else {
				e.Item.Shipping2RouteTitle = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_SAPDestinationPlantsListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SAPDestinationPlant", Id="0x010091A84CFF2DF74C3B847A78E9F9D503D4")]
	public partial class SAPDestinationPlant : Element {
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SAPDestinationPlant() {
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SAPDestinationPlantTitle", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SAPDestinationPlantTitle = this;
			}
			else {
				e.Item.SAPDestinationPlantTitle = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_ScheduleTemplateListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ScheduleTemplate", Id="0x010091765907174D4799B44C4DF249630D28")]
	public partial class ScheduleTemplate : Element {
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingPoint> _shippingPointLookupTitle;
		
		private Microsoft.SharePoint.Linq.EntitySet<TimeSlotsTemplate> _timeSlotsTemplate;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ScheduleTemplate() {
			this._shippingPointLookupTitle = new Microsoft.SharePoint.Linq.EntityRef<ShippingPoint>();
			this._shippingPointLookupTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint>>(this.OnShippingPointLookupTitleSync);
			this._shippingPointLookupTitle.OnChanged += new System.EventHandler(this.OnShippingPointLookupTitleChanged);
			this._shippingPointLookupTitle.OnChanging += new System.EventHandler(this.OnShippingPointLookupTitleChanging);
			this._timeSlotsTemplate = new Microsoft.SharePoint.Linq.EntitySet<TimeSlotsTemplate>();
			this._timeSlotsTemplate.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlotsTemplate>>(this.OnTimeSlotsTemplateSync);
			this._timeSlotsTemplate.OnChanged += new System.EventHandler(this.OnTimeSlotsTemplateChanged);
			this._timeSlotsTemplate.OnChanging += new System.EventHandler(this.OnTimeSlotsTemplateChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingPointLookupTitle", Storage="_shippingPointLookupTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping Point")]
		public ShippingPoint ShippingPointLookupTitle {
			get {
				return this._shippingPointLookupTitle.GetEntity();
			}
			set {
				this._shippingPointLookupTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ScheduleTemplateTitle", Storage="_timeSlotsTemplate", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="TimeSlots Template")]
		public Microsoft.SharePoint.Linq.EntitySet<TimeSlotsTemplate> TimeSlotsTemplate {
			get {
				return this._timeSlotsTemplate;
			}
			set {
				this._timeSlotsTemplate.Assign(value);
			}
		}
		
		private void OnShippingPointLookupTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingPointLookupTitle", this._shippingPointLookupTitle.Clone());
		}
		
		private void OnShippingPointLookupTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingPointLookupTitle");
		}
		
		private void OnShippingPointLookupTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ScheduleTemplate.Add(this);
			}
			else {
				e.Item.ScheduleTemplate.Remove(this);
			}
		}
		
		private void OnTimeSlotsTemplateChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TimeSlotsTemplate", this._timeSlotsTemplate.Clone());
		}
		
		private void OnTimeSlotsTemplateChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TimeSlotsTemplate");
		}
		
		private void OnTimeSlotsTemplateSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlotsTemplate> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ScheduleTemplateTitle = this;
			}
			else {
				e.Item.ScheduleTemplateTitle = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_SecurityEscortCatalogListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SecurityEscortCatalog", Id="0x01004D883AD19A284D1F826EA7B4E70F0ACA")]
	public partial class SecurityEscortCatalog : Element {
		
		private string _escortDestination;
		
		private string _remarkMM;
		
		private string _materialMaster;
		
		private System.Nullable<double> _securityCost;
		
		private string _securityEscrotPO;
		
		private Microsoft.SharePoint.Linq.EntityRef<BusienssDescription> _securityEscortCatalog2BusinessDescriptionTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPayer> _freightPayerTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _partnerTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _currencyTitle;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SecurityEscortCatalog() {
			this._securityEscortCatalog2BusinessDescriptionTitle = new Microsoft.SharePoint.Linq.EntityRef<BusienssDescription>();
			this._securityEscortCatalog2BusinessDescriptionTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BusienssDescription>>(this.OnSecurityEscortCatalog2BusinessDescriptionTitleSync);
			this._securityEscortCatalog2BusinessDescriptionTitle.OnChanged += new System.EventHandler(this.OnSecurityEscortCatalog2BusinessDescriptionTitleChanged);
			this._securityEscortCatalog2BusinessDescriptionTitle.OnChanging += new System.EventHandler(this.OnSecurityEscortCatalog2BusinessDescriptionTitleChanging);
			this._freightPayerTitle = new Microsoft.SharePoint.Linq.EntityRef<FreightPayer>();
			this._freightPayerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer>>(this.OnFreightPayerTitleSync);
			this._freightPayerTitle.OnChanged += new System.EventHandler(this.OnFreightPayerTitleChanged);
			this._freightPayerTitle.OnChanging += new System.EventHandler(this.OnFreightPayerTitleChanging);
			this._partnerTitle = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._partnerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnPartnerTitleSync);
			this._partnerTitle.OnChanged += new System.EventHandler(this.OnPartnerTitleChanged);
			this._partnerTitle.OnChanging += new System.EventHandler(this.OnPartnerTitleChanging);
			this._currencyTitle = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._currencyTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnCurrencyTitleSync);
			this._currencyTitle.OnChanged += new System.EventHandler(this.OnCurrencyTitleChanged);
			this._currencyTitle.OnChanging += new System.EventHandler(this.OnCurrencyTitleChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EscortDestination", Storage="_escortDestination", FieldType="Text")]
		public string EscortDestination {
			get {
				return this._escortDestination;
			}
			set {
				if ((value != this._escortDestination)) {
					this.OnPropertyChanging("EscortDestination", this._escortDestination);
					this._escortDestination = value;
					this.OnPropertyChanged("EscortDestination");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RemarkMM", Storage="_remarkMM", FieldType="Text")]
		public string RemarkMM {
			get {
				return this._remarkMM;
			}
			set {
				if ((value != this._remarkMM)) {
					this.OnPropertyChanging("RemarkMM", this._remarkMM);
					this._remarkMM = value;
					this.OnPropertyChanged("RemarkMM");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MaterialMaster", Storage="_materialMaster", FieldType="Text")]
		public string MaterialMaster {
			get {
				return this._materialMaster;
			}
			set {
				if ((value != this._materialMaster)) {
					this.OnPropertyChanging("MaterialMaster", this._materialMaster);
					this._materialMaster = value;
					this.OnPropertyChanged("MaterialMaster");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityCost", Storage="_securityCost", FieldType="Number")]
		public System.Nullable<double> SecurityCost {
			get {
				return this._securityCost;
			}
			set {
				if ((value != this._securityCost)) {
					this.OnPropertyChanging("SecurityCost", this._securityCost);
					this._securityCost = value;
					this.OnPropertyChanged("SecurityCost");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityEscrotPO", Storage="_securityEscrotPO", FieldType="Text")]
		public string SecurityEscrotPO {
			get {
				return this._securityEscrotPO;
			}
			set {
				if ((value != this._securityEscrotPO)) {
					this.OnPropertyChanging("SecurityEscrotPO", this._securityEscrotPO);
					this._securityEscrotPO = value;
					this.OnPropertyChanged("SecurityEscrotPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityEscortCatalog2BusinessDescriptionTitle", Storage="_securityEscortCatalog2BusinessDescriptionTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Business Description")]
		public BusienssDescription SecurityEscortCatalog2BusinessDescriptionTitle {
			get {
				return this._securityEscortCatalog2BusinessDescriptionTitle.GetEntity();
			}
			set {
				this._securityEscortCatalog2BusinessDescriptionTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="FreightPayerTitle", Storage="_freightPayerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight Payer")]
		public FreightPayer FreightPayerTitle {
			get {
				return this._freightPayerTitle.GetEntity();
			}
			set {
				this._freightPayerTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_partnerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner PartnerTitle {
			get {
				return this._partnerTitle.GetEntity();
			}
			set {
				this._partnerTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CurrencyTitle", Storage="_currencyTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency CurrencyTitle {
			get {
				return this._currencyTitle.GetEntity();
			}
			set {
				this._currencyTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityEscortCatalogTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnSecurityEscortCatalog2BusinessDescriptionTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscortCatalog2BusinessDescriptionTitle", this._securityEscortCatalog2BusinessDescriptionTitle.Clone());
		}
		
		private void OnSecurityEscortCatalog2BusinessDescriptionTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscortCatalog2BusinessDescriptionTitle");
		}
		
		private void OnSecurityEscortCatalog2BusinessDescriptionTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<BusienssDescription> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscortCatalog.Add(this);
			}
			else {
				e.Item.SecurityEscortCatalog.Remove(this);
			}
		}
		
		private void OnFreightPayerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("FreightPayerTitle", this._freightPayerTitle.Clone());
		}
		
		private void OnFreightPayerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("FreightPayerTitle");
		}
		
		private void OnFreightPayerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPayer> e) {
		}
		
		private void OnPartnerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PartnerTitle", this._partnerTitle.Clone());
		}
		
		private void OnPartnerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PartnerTitle");
		}
		
		private void OnPartnerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnCurrencyTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CurrencyTitle", this._currencyTitle.Clone());
		}
		
		private void OnCurrencyTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CurrencyTitle");
		}
		
		private void OnCurrencyTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecurityEscortCatalogTitle = this;
			}
			else {
				e.Item.SecurityEscortCatalogTitle = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_ShipmentTypeListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ShipmentType", Id="0x01009FC484DC88AC45AEBDFEEFEB856EFEE0")]
	public partial class ShipmentType : Element {
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ShipmentType() {
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShipmentTypeTitle", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShipmentTypeTitle = this;
			}
			else {
				e.Item.ShipmentTypeTitle = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_ShippingsListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Shipping", Id="0x0100BBD0D4AB58624F5B900FECE61EEC2988")]
	public partial class Shipping : Element {
		
		private string _reportPeriod;
		
		private string _dockNumber;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		private System.Nullable<double> _shippingDuration;
		
		private string _cancelationReason;
		
		private string _businessDescription;
		
		private System.Nullable<System.DateTime> _estimateDeliveryTime;
		
		private System.Nullable<bool> _isOutbound;
		
		private System.Nullable<bool> _truckAwaiting;
		
		private string _trailerConditionComments;
		
		private string _containerNo;
		
		private string _shippingCountryTitle;
		
		private string _shippingFreightPayerTitle;
		
		private System.Nullable<double> _euroPalletsQuantity;
		
		private System.Nullable<double> _induPalletsQuantity;
		
		private string _shippingRouteDepartureCity;
		
		private string _shippingCarrierTitle;
		
		private string _shippingCommodityTitle;
		
		private System.Nullable<double> _totalQuantityKU;
		
		private System.Nullable<double> _additionalCosts;
		
		private System.Nullable<double> _shippingFreightCost;
		
		private System.Nullable<double> _shippingSecurityCost;
		
		private System.Nullable<double> _totalCostsPerKU;
		
		private System.Nullable<System.DateTime> _modified;
		
		private System.Nullable<System.DateTime> _tSStartTime;
		
		private System.Nullable<System.DateTime> _tSEndTime;
		
		private System.Nullable<System.DateTime> _warehouseStartTime;
		
		private System.Nullable<System.DateTime> _warehouseEndTime;
		
		private System.Nullable<System.DateTime> _arrivalTime;
		
		private System.Nullable<System.DateTime> _poLastModification;
		
		private string _poNumberMultiline;
		
		private System.Nullable<ShippingState> _shippingState;
		
		private System.Nullable<LoadingType> _loadingType;
		
		private System.Nullable<TrailerCondition> _trailerCondition;
		
		private System.Nullable<ShippingState2> _shippingState2;
		
		private Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> _alarmsAndEvents;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingComments> _shippingComments;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> _shippingDriversTeam;
		
		private Microsoft.SharePoint.Linq.EntitySet<LoadDescription> _loadDescription;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _partnerTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Warehouse> _shipping2WarehouseTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Truck> _truckTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Trailer> _trailerTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Route> _shipping2RouteTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _shipping2PartnerTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<SecurityEscortCatalog> _securityEscortCatalogTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<Truck> _shipping2TruckTitle;
		
		private Microsoft.SharePoint.Linq.EntityRef<CityType> _shipping2City;
		
		private Microsoft.SharePoint.Linq.EntityRef<TranspotUnit> _shipping2TransportUnitType;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _shipping2Currency4AddCosts;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _shipping2CurrencyForFreight;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _shipping2CurrencyForEscort;
		
		private Microsoft.SharePoint.Linq.EntityRef<Currency> _shipping2Currency4CostsPerKU;
		
		private Microsoft.SharePoint.Linq.EntityRef<FreightPO> _shipping2FreightPOIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<EscortPO> _shipping2EscortPOIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<SealProtocol> _securitySealProtocolIndex;
		
		private System.Nullable<int> _editorId;
		
		private string _editor;
		
		private Microsoft.SharePoint.Linq.EntitySet<TimeSlot> _timeSlot;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Shipping() {
			this._alarmsAndEvents = new Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents>();
			this._alarmsAndEvents.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents>>(this.OnAlarmsAndEventsSync);
			this._alarmsAndEvents.OnChanged += new System.EventHandler(this.OnAlarmsAndEventsChanged);
			this._alarmsAndEvents.OnChanging += new System.EventHandler(this.OnAlarmsAndEventsChanging);
			this._shippingComments = new Microsoft.SharePoint.Linq.EntitySet<ShippingComments>();
			this._shippingComments.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingComments>>(this.OnShippingCommentsSync);
			this._shippingComments.OnChanged += new System.EventHandler(this.OnShippingCommentsChanged);
			this._shippingComments.OnChanging += new System.EventHandler(this.OnShippingCommentsChanging);
			this._shippingDriversTeam = new Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam>();
			this._shippingDriversTeam.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam>>(this.OnShippingDriversTeamSync);
			this._shippingDriversTeam.OnChanged += new System.EventHandler(this.OnShippingDriversTeamChanged);
			this._shippingDriversTeam.OnChanging += new System.EventHandler(this.OnShippingDriversTeamChanging);
			this._loadDescription = new Microsoft.SharePoint.Linq.EntitySet<LoadDescription>();
			this._loadDescription.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription>>(this.OnLoadDescriptionSync);
			this._loadDescription.OnChanged += new System.EventHandler(this.OnLoadDescriptionChanged);
			this._loadDescription.OnChanging += new System.EventHandler(this.OnLoadDescriptionChanging);
			this._partnerTitle = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._partnerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnPartnerTitleSync);
			this._partnerTitle.OnChanged += new System.EventHandler(this.OnPartnerTitleChanged);
			this._partnerTitle.OnChanging += new System.EventHandler(this.OnPartnerTitleChanging);
			this._shipping2WarehouseTitle = new Microsoft.SharePoint.Linq.EntityRef<Warehouse>();
			this._shipping2WarehouseTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnShipping2WarehouseTitleSync);
			this._shipping2WarehouseTitle.OnChanged += new System.EventHandler(this.OnShipping2WarehouseTitleChanged);
			this._shipping2WarehouseTitle.OnChanging += new System.EventHandler(this.OnShipping2WarehouseTitleChanging);
			this._truckTitle = new Microsoft.SharePoint.Linq.EntityRef<Truck>();
			this._truckTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck>>(this.OnTruckTitleSync);
			this._truckTitle.OnChanged += new System.EventHandler(this.OnTruckTitleChanged);
			this._truckTitle.OnChanging += new System.EventHandler(this.OnTruckTitleChanging);
			this._trailerTitle = new Microsoft.SharePoint.Linq.EntityRef<Trailer>();
			this._trailerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer>>(this.OnTrailerTitleSync);
			this._trailerTitle.OnChanged += new System.EventHandler(this.OnTrailerTitleChanged);
			this._trailerTitle.OnChanging += new System.EventHandler(this.OnTrailerTitleChanging);
			this._shipping2RouteTitle = new Microsoft.SharePoint.Linq.EntityRef<Route>();
			this._shipping2RouteTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnShipping2RouteTitleSync);
			this._shipping2RouteTitle.OnChanged += new System.EventHandler(this.OnShipping2RouteTitleChanged);
			this._shipping2RouteTitle.OnChanging += new System.EventHandler(this.OnShipping2RouteTitleChanging);
			this._shipping2PartnerTitle = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._shipping2PartnerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnShipping2PartnerTitleSync);
			this._shipping2PartnerTitle.OnChanged += new System.EventHandler(this.OnShipping2PartnerTitleChanged);
			this._shipping2PartnerTitle.OnChanging += new System.EventHandler(this.OnShipping2PartnerTitleChanging);
			this._securityEscortCatalogTitle = new Microsoft.SharePoint.Linq.EntityRef<SecurityEscortCatalog>();
			this._securityEscortCatalogTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog>>(this.OnSecurityEscortCatalogTitleSync);
			this._securityEscortCatalogTitle.OnChanged += new System.EventHandler(this.OnSecurityEscortCatalogTitleChanged);
			this._securityEscortCatalogTitle.OnChanging += new System.EventHandler(this.OnSecurityEscortCatalogTitleChanging);
			this._shipping2TruckTitle = new Microsoft.SharePoint.Linq.EntityRef<Truck>();
			this._shipping2TruckTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck>>(this.OnShipping2TruckTitleSync);
			this._shipping2TruckTitle.OnChanged += new System.EventHandler(this.OnShipping2TruckTitleChanged);
			this._shipping2TruckTitle.OnChanging += new System.EventHandler(this.OnShipping2TruckTitleChanging);
			this._shipping2City = new Microsoft.SharePoint.Linq.EntityRef<CityType>();
			this._shipping2City.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType>>(this.OnShipping2CitySync);
			this._shipping2City.OnChanged += new System.EventHandler(this.OnShipping2CityChanged);
			this._shipping2City.OnChanging += new System.EventHandler(this.OnShipping2CityChanging);
			this._shipping2TransportUnitType = new Microsoft.SharePoint.Linq.EntityRef<TranspotUnit>();
			this._shipping2TransportUnitType.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TranspotUnit>>(this.OnShipping2TransportUnitTypeSync);
			this._shipping2TransportUnitType.OnChanged += new System.EventHandler(this.OnShipping2TransportUnitTypeChanged);
			this._shipping2TransportUnitType.OnChanging += new System.EventHandler(this.OnShipping2TransportUnitTypeChanging);
			this._shipping2Currency4AddCosts = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._shipping2Currency4AddCosts.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnShipping2Currency4AddCostsSync);
			this._shipping2Currency4AddCosts.OnChanged += new System.EventHandler(this.OnShipping2Currency4AddCostsChanged);
			this._shipping2Currency4AddCosts.OnChanging += new System.EventHandler(this.OnShipping2Currency4AddCostsChanging);
			this._shipping2CurrencyForFreight = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._shipping2CurrencyForFreight.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnShipping2CurrencyForFreightSync);
			this._shipping2CurrencyForFreight.OnChanged += new System.EventHandler(this.OnShipping2CurrencyForFreightChanged);
			this._shipping2CurrencyForFreight.OnChanging += new System.EventHandler(this.OnShipping2CurrencyForFreightChanging);
			this._shipping2CurrencyForEscort = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._shipping2CurrencyForEscort.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnShipping2CurrencyForEscortSync);
			this._shipping2CurrencyForEscort.OnChanged += new System.EventHandler(this.OnShipping2CurrencyForEscortChanged);
			this._shipping2CurrencyForEscort.OnChanging += new System.EventHandler(this.OnShipping2CurrencyForEscortChanging);
			this._shipping2Currency4CostsPerKU = new Microsoft.SharePoint.Linq.EntityRef<Currency>();
			this._shipping2Currency4CostsPerKU.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency>>(this.OnShipping2Currency4CostsPerKUSync);
			this._shipping2Currency4CostsPerKU.OnChanged += new System.EventHandler(this.OnShipping2Currency4CostsPerKUChanged);
			this._shipping2Currency4CostsPerKU.OnChanging += new System.EventHandler(this.OnShipping2Currency4CostsPerKUChanging);
			this._shipping2FreightPOIndex = new Microsoft.SharePoint.Linq.EntityRef<FreightPO>();
			this._shipping2FreightPOIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO>>(this.OnShipping2FreightPOIndexSync);
			this._shipping2FreightPOIndex.OnChanged += new System.EventHandler(this.OnShipping2FreightPOIndexChanged);
			this._shipping2FreightPOIndex.OnChanging += new System.EventHandler(this.OnShipping2FreightPOIndexChanging);
			this._shipping2EscortPOIndex = new Microsoft.SharePoint.Linq.EntityRef<EscortPO>();
			this._shipping2EscortPOIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO>>(this.OnShipping2EscortPOIndexSync);
			this._shipping2EscortPOIndex.OnChanged += new System.EventHandler(this.OnShipping2EscortPOIndexChanged);
			this._shipping2EscortPOIndex.OnChanging += new System.EventHandler(this.OnShipping2EscortPOIndexChanging);
			this._securitySealProtocolIndex = new Microsoft.SharePoint.Linq.EntityRef<SealProtocol>();
			this._securitySealProtocolIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SealProtocol>>(this.OnSecuritySealProtocolIndexSync);
			this._securitySealProtocolIndex.OnChanged += new System.EventHandler(this.OnSecuritySealProtocolIndexChanged);
			this._securitySealProtocolIndex.OnChanging += new System.EventHandler(this.OnSecuritySealProtocolIndexChanging);
			this._timeSlot = new Microsoft.SharePoint.Linq.EntitySet<TimeSlot>();
			this._timeSlot.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlot>>(this.OnTimeSlotSync);
			this._timeSlot.OnChanged += new System.EventHandler(this.OnTimeSlotChanged);
			this._timeSlot.OnChanging += new System.EventHandler(this.OnTimeSlotChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportPeriod", Storage="_reportPeriod", FieldType="Text")]
		public string ReportPeriod {
			get {
				return this._reportPeriod;
			}
			set {
				if ((value != this._reportPeriod)) {
					this.OnPropertyChanging("ReportPeriod", this._reportPeriod);
					this._reportPeriod = value;
					this.OnPropertyChanged("ReportPeriod");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DockNumber", Storage="_dockNumber", FieldType="Text")]
		public string DockNumber {
			get {
				return this._dockNumber;
			}
			set {
				if ((value != this._dockNumber)) {
					this.OnPropertyChanging("DockNumber", this._dockNumber);
					this._dockNumber = value;
					this.OnPropertyChanged("DockNumber");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartTime", Storage="_startTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndTime", Storage="_endTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndTime {
			get {
				return this._endTime;
			}
			set {
				if ((value != this._endTime)) {
					this.OnPropertyChanging("EndTime", this._endTime);
					this._endTime = value;
					this.OnPropertyChanged("EndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingDuration", Storage="_shippingDuration", FieldType="Number")]
		public System.Nullable<double> ShippingDuration {
			get {
				return this._shippingDuration;
			}
			set {
				if ((value != this._shippingDuration)) {
					this.OnPropertyChanging("ShippingDuration", this._shippingDuration);
					this._shippingDuration = value;
					this.OnPropertyChanged("ShippingDuration");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CancelationReason", Storage="_cancelationReason", FieldType="Text")]
		public string CancelationReason {
			get {
				return this._cancelationReason;
			}
			set {
				if ((value != this._cancelationReason)) {
					this.OnPropertyChanging("CancelationReason", this._cancelationReason);
					this._cancelationReason = value;
					this.OnPropertyChanged("CancelationReason");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BusinessDescription", Storage="_businessDescription", FieldType="Text")]
		public string BusinessDescription {
			get {
				return this._businessDescription;
			}
			set {
				if ((value != this._businessDescription)) {
					this.OnPropertyChanging("BusinessDescription", this._businessDescription);
					this._businessDescription = value;
					this.OnPropertyChanged("BusinessDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EstimateDeliveryTime", Storage="_estimateDeliveryTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> EstimateDeliveryTime {
			get {
				return this._estimateDeliveryTime;
			}
			set {
				if ((value != this._estimateDeliveryTime)) {
					this.OnPropertyChanging("EstimateDeliveryTime", this._estimateDeliveryTime);
					this._estimateDeliveryTime = value;
					this.OnPropertyChanged("EstimateDeliveryTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsOutbound", Storage="_isOutbound", FieldType="Boolean")]
		public System.Nullable<bool> IsOutbound {
			get {
				return this._isOutbound;
			}
			set {
				if ((value != this._isOutbound)) {
					this.OnPropertyChanging("IsOutbound", this._isOutbound);
					this._isOutbound = value;
					this.OnPropertyChanged("IsOutbound");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TruckAwaiting", Storage="_truckAwaiting", FieldType="Boolean")]
		public System.Nullable<bool> TruckAwaiting {
			get {
				return this._truckAwaiting;
			}
			set {
				if ((value != this._truckAwaiting)) {
					this.OnPropertyChanging("TruckAwaiting", this._truckAwaiting);
					this._truckAwaiting = value;
					this.OnPropertyChanged("TruckAwaiting");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TrailerConditionComments", Storage="_trailerConditionComments", FieldType="Note")]
		public string TrailerConditionComments {
			get {
				return this._trailerConditionComments;
			}
			set {
				if ((value != this._trailerConditionComments)) {
					this.OnPropertyChanging("TrailerConditionComments", this._trailerConditionComments);
					this._trailerConditionComments = value;
					this.OnPropertyChanged("TrailerConditionComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContainerNo", Storage="_containerNo", FieldType="Text")]
		public string ContainerNo {
			get {
				return this._containerNo;
			}
			set {
				if ((value != this._containerNo)) {
					this.OnPropertyChanging("ContainerNo", this._containerNo);
					this._containerNo = value;
					this.OnPropertyChanged("ContainerNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingCountryTitle", Storage="_shippingCountryTitle", FieldType="Text")]
		public string ShippingCountryTitle {
			get {
				return this._shippingCountryTitle;
			}
			set {
				if ((value != this._shippingCountryTitle)) {
					this.OnPropertyChanging("ShippingCountryTitle", this._shippingCountryTitle);
					this._shippingCountryTitle = value;
					this.OnPropertyChanged("ShippingCountryTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingFreightPayerTitle", Storage="_shippingFreightPayerTitle", FieldType="Text")]
		public string ShippingFreightPayerTitle {
			get {
				return this._shippingFreightPayerTitle;
			}
			set {
				if ((value != this._shippingFreightPayerTitle)) {
					this.OnPropertyChanging("ShippingFreightPayerTitle", this._shippingFreightPayerTitle);
					this._shippingFreightPayerTitle = value;
					this.OnPropertyChanged("ShippingFreightPayerTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EuroPalletsQuantity", Storage="_euroPalletsQuantity", FieldType="Number")]
		public System.Nullable<double> EuroPalletsQuantity {
			get {
				return this._euroPalletsQuantity;
			}
			set {
				if ((value != this._euroPalletsQuantity)) {
					this.OnPropertyChanging("EuroPalletsQuantity", this._euroPalletsQuantity);
					this._euroPalletsQuantity = value;
					this.OnPropertyChanged("EuroPalletsQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="InduPalletsQuantity", Storage="_induPalletsQuantity", FieldType="Number")]
		public System.Nullable<double> InduPalletsQuantity {
			get {
				return this._induPalletsQuantity;
			}
			set {
				if ((value != this._induPalletsQuantity)) {
					this.OnPropertyChanging("InduPalletsQuantity", this._induPalletsQuantity);
					this._induPalletsQuantity = value;
					this.OnPropertyChanged("InduPalletsQuantity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingRouteDepartureCity", Storage="_shippingRouteDepartureCity", FieldType="Text")]
		public string ShippingRouteDepartureCity {
			get {
				return this._shippingRouteDepartureCity;
			}
			set {
				if ((value != this._shippingRouteDepartureCity)) {
					this.OnPropertyChanging("ShippingRouteDepartureCity", this._shippingRouteDepartureCity);
					this._shippingRouteDepartureCity = value;
					this.OnPropertyChanged("ShippingRouteDepartureCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingCarrierTitle", Storage="_shippingCarrierTitle", FieldType="Text")]
		public string ShippingCarrierTitle {
			get {
				return this._shippingCarrierTitle;
			}
			set {
				if ((value != this._shippingCarrierTitle)) {
					this.OnPropertyChanging("ShippingCarrierTitle", this._shippingCarrierTitle);
					this._shippingCarrierTitle = value;
					this.OnPropertyChanged("ShippingCarrierTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingCommodityTitle", Storage="_shippingCommodityTitle", FieldType="Text")]
		public string ShippingCommodityTitle {
			get {
				return this._shippingCommodityTitle;
			}
			set {
				if ((value != this._shippingCommodityTitle)) {
					this.OnPropertyChanging("ShippingCommodityTitle", this._shippingCommodityTitle);
					this._shippingCommodityTitle = value;
					this.OnPropertyChanged("ShippingCommodityTitle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TotalQuantityKU", Storage="_totalQuantityKU", FieldType="Number")]
		public System.Nullable<double> TotalQuantityKU {
			get {
				return this._totalQuantityKU;
			}
			set {
				if ((value != this._totalQuantityKU)) {
					this.OnPropertyChanging("TotalQuantityKU", this._totalQuantityKU);
					this._totalQuantityKU = value;
					this.OnPropertyChanged("TotalQuantityKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AdditionalCosts", Storage="_additionalCosts", FieldType="Number")]
		public System.Nullable<double> AdditionalCosts {
			get {
				return this._additionalCosts;
			}
			set {
				if ((value != this._additionalCosts)) {
					this.OnPropertyChanging("AdditionalCosts", this._additionalCosts);
					this._additionalCosts = value;
					this.OnPropertyChanged("AdditionalCosts");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingFreightCost", Storage="_shippingFreightCost", FieldType="Number")]
		public System.Nullable<double> ShippingFreightCost {
			get {
				return this._shippingFreightCost;
			}
			set {
				if ((value != this._shippingFreightCost)) {
					this.OnPropertyChanging("ShippingFreightCost", this._shippingFreightCost);
					this._shippingFreightCost = value;
					this.OnPropertyChanged("ShippingFreightCost");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingSecurityCost", Storage="_shippingSecurityCost", FieldType="Number")]
		public System.Nullable<double> ShippingSecurityCost {
			get {
				return this._shippingSecurityCost;
			}
			set {
				if ((value != this._shippingSecurityCost)) {
					this.OnPropertyChanging("ShippingSecurityCost", this._shippingSecurityCost);
					this._shippingSecurityCost = value;
					this.OnPropertyChanged("ShippingSecurityCost");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TotalCostsPerKU", Storage="_totalCostsPerKU", FieldType="Number")]
		public System.Nullable<double> TotalCostsPerKU {
			get {
				return this._totalCostsPerKU;
			}
			set {
				if ((value != this._totalCostsPerKU)) {
					this.OnPropertyChanging("TotalCostsPerKU", this._totalCostsPerKU);
					this._totalCostsPerKU = value;
					this.OnPropertyChanged("TotalCostsPerKU");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified", Storage="_modified", ReadOnly=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> Modified {
			get {
				return this._modified;
			}
			set {
				if ((value != this._modified)) {
					this.OnPropertyChanging("Modified", this._modified);
					this._modified = value;
					this.OnPropertyChanged("Modified");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TSStartTime", Storage="_tSStartTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> TSStartTime {
			get {
				return this._tSStartTime;
			}
			set {
				if ((value != this._tSStartTime)) {
					this.OnPropertyChanging("TSStartTime", this._tSStartTime);
					this._tSStartTime = value;
					this.OnPropertyChanged("TSStartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TSEndTime", Storage="_tSEndTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> TSEndTime {
			get {
				return this._tSEndTime;
			}
			set {
				if ((value != this._tSEndTime)) {
					this.OnPropertyChanging("TSEndTime", this._tSEndTime);
					this._tSEndTime = value;
					this.OnPropertyChanged("TSEndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WarehouseStartTime", Storage="_warehouseStartTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> WarehouseStartTime {
			get {
				return this._warehouseStartTime;
			}
			set {
				if ((value != this._warehouseStartTime)) {
					this.OnPropertyChanging("WarehouseStartTime", this._warehouseStartTime);
					this._warehouseStartTime = value;
					this.OnPropertyChanged("WarehouseStartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WarehouseEndTime", Storage="_warehouseEndTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> WarehouseEndTime {
			get {
				return this._warehouseEndTime;
			}
			set {
				if ((value != this._warehouseEndTime)) {
					this.OnPropertyChanging("WarehouseEndTime", this._warehouseEndTime);
					this._warehouseEndTime = value;
					this.OnPropertyChanged("WarehouseEndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ArrivalTime", Storage="_arrivalTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalTime {
			get {
				return this._arrivalTime;
			}
			set {
				if ((value != this._arrivalTime)) {
					this.OnPropertyChanging("ArrivalTime", this._arrivalTime);
					this._arrivalTime = value;
					this.OnPropertyChanged("ArrivalTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PoLastModification", Storage="_poLastModification", FieldType="DateTime")]
		public System.Nullable<System.DateTime> PoLastModification {
			get {
				return this._poLastModification;
			}
			set {
				if ((value != this._poLastModification)) {
					this.OnPropertyChanging("PoLastModification", this._poLastModification);
					this._poLastModification = value;
					this.OnPropertyChanged("PoLastModification");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PoNumberMultiline", Storage="_poNumberMultiline", FieldType="Note")]
		public string PoNumberMultiline {
			get {
				return this._poNumberMultiline;
			}
			set {
				if ((value != this._poNumberMultiline)) {
					this.OnPropertyChanging("PoNumberMultiline", this._poNumberMultiline);
					this._poNumberMultiline = value;
					this.OnPropertyChanged("PoNumberMultiline");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingState", Storage="_shippingState", FieldType="Choice")]
		public System.Nullable<ShippingState> ShippingState {
			get {
				return this._shippingState;
			}
			set {
				if ((value != this._shippingState)) {
					this.OnPropertyChanging("ShippingState", this._shippingState);
					this._shippingState = value;
					this.OnPropertyChanged("ShippingState");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LoadingType", Storage="_loadingType", FieldType="Choice")]
		public System.Nullable<LoadingType> LoadingType {
			get {
				return this._loadingType;
			}
			set {
				if ((value != this._loadingType)) {
					this.OnPropertyChanging("LoadingType", this._loadingType);
					this._loadingType = value;
					this.OnPropertyChanged("LoadingType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TrailerCondition", Storage="_trailerCondition", FieldType="Choice")]
		public System.Nullable<TrailerCondition> TrailerCondition {
			get {
				return this._trailerCondition;
			}
			set {
				if ((value != this._trailerCondition)) {
					this.OnPropertyChanging("TrailerCondition", this._trailerCondition);
					this._trailerCondition = value;
					this.OnPropertyChanged("TrailerCondition");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingState2", Storage="_shippingState2", FieldType="Choice")]
		public System.Nullable<ShippingState2> ShippingState2 {
			get {
				return this._shippingState2;
			}
			set {
				if ((value != this._shippingState2)) {
					this.OnPropertyChanging("ShippingState2", this._shippingState2);
					this._shippingState2 = value;
					this.OnPropertyChanged("ShippingState2");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AlarmsAndEventsList2Shipping", Storage="_alarmsAndEvents", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Alarms And Events")]
		public Microsoft.SharePoint.Linq.EntitySet<AlarmsAndEvents> AlarmsAndEvents {
			get {
				return this._alarmsAndEvents;
			}
			set {
				this._alarmsAndEvents.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingComments2ShippingID", Storage="_shippingComments", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Comments")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingComments> ShippingComments {
			get {
				return this._shippingComments;
			}
			set {
				this._shippingComments.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingIndex", Storage="_shippingDriversTeam", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Drivers Team")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingDriversTeam> ShippingDriversTeam {
			get {
				return this._shippingDriversTeam;
			}
			set {
				this._shippingDriversTeam.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="LoadDescription2ShippingIndex", Storage="_loadDescription", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Load Description")]
		public Microsoft.SharePoint.Linq.EntitySet<LoadDescription> LoadDescription {
			get {
				return this._loadDescription;
			}
			set {
				this._loadDescription.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PartnerTitle", Storage="_partnerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner PartnerTitle {
			get {
				return this._partnerTitle.GetEntity();
			}
			set {
				this._partnerTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2WarehouseTitle", Storage="_shipping2WarehouseTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Warehouse")]
		public Warehouse Shipping2WarehouseTitle {
			get {
				return this._shipping2WarehouseTitle.GetEntity();
			}
			set {
				this._shipping2WarehouseTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TruckTitle", Storage="_truckTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Truck")]
		public Truck TruckTitle {
			get {
				return this._truckTitle.GetEntity();
			}
			set {
				this._truckTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TrailerTitle", Storage="_trailerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Trailer")]
		public Trailer TrailerTitle {
			get {
				return this._trailerTitle.GetEntity();
			}
			set {
				this._trailerTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2RouteTitle", Storage="_shipping2RouteTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Route")]
		public Route Shipping2RouteTitle {
			get {
				return this._shipping2RouteTitle.GetEntity();
			}
			set {
				this._shipping2RouteTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2PartnerTitle", Storage="_shipping2PartnerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner Shipping2PartnerTitle {
			get {
				return this._shipping2PartnerTitle.GetEntity();
			}
			set {
				this._shipping2PartnerTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecurityEscortCatalogTitle", Storage="_securityEscortCatalogTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Security Escort Route")]
		public SecurityEscortCatalog SecurityEscortCatalogTitle {
			get {
				return this._securityEscortCatalogTitle.GetEntity();
			}
			set {
				this._securityEscortCatalogTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2TruckTitle", Storage="_shipping2TruckTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Truck")]
		public Truck Shipping2TruckTitle {
			get {
				return this._shipping2TruckTitle.GetEntity();
			}
			set {
				this._shipping2TruckTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2City", Storage="_shipping2City", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="City")]
		public CityType Shipping2City {
			get {
				return this._shipping2City.GetEntity();
			}
			set {
				this._shipping2City.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2TransportUnitType", Storage="_shipping2TransportUnitType", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Transport Unit Type")]
		public TranspotUnit Shipping2TransportUnitType {
			get {
				return this._shipping2TransportUnitType.GetEntity();
			}
			set {
				this._shipping2TransportUnitType.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2Currency4AddCosts", Storage="_shipping2Currency4AddCosts", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency Shipping2Currency4AddCosts {
			get {
				return this._shipping2Currency4AddCosts.GetEntity();
			}
			set {
				this._shipping2Currency4AddCosts.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForFreight", Storage="_shipping2CurrencyForFreight", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency Shipping2CurrencyForFreight {
			get {
				return this._shipping2CurrencyForFreight.GetEntity();
			}
			set {
				this._shipping2CurrencyForFreight.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2CurrencyForEscort", Storage="_shipping2CurrencyForEscort", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency Shipping2CurrencyForEscort {
			get {
				return this._shipping2CurrencyForEscort.GetEntity();
			}
			set {
				this._shipping2CurrencyForEscort.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2Currency4CostsPerKU", Storage="_shipping2Currency4CostsPerKU", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Currency")]
		public Currency Shipping2Currency4CostsPerKU {
			get {
				return this._shipping2Currency4CostsPerKU.GetEntity();
			}
			set {
				this._shipping2Currency4CostsPerKU.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2FreightPOIndex", Storage="_shipping2FreightPOIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Freight PO Library")]
		public FreightPO Shipping2FreightPOIndex {
			get {
				return this._shipping2FreightPOIndex.GetEntity();
			}
			set {
				this._shipping2FreightPOIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2EscortPOIndex", Storage="_shipping2EscortPOIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Escort PO Library")]
		public EscortPO Shipping2EscortPOIndex {
			get {
				return this._shipping2EscortPOIndex.GetEntity();
			}
			set {
				this._shipping2EscortPOIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecuritySealProtocolIndex", Storage="_securitySealProtocolIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Seal Protocol Library")]
		public SealProtocol SecuritySealProtocolIndex {
			get {
				return this._securitySealProtocolIndex.GetEntity();
			}
			set {
				this._securitySealProtocolIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Editor", Storage="_editorId", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> EditorId {
			get {
				return this._editorId;
			}
			set {
				if ((value != this._editorId)) {
					this.OnPropertyChanging("EditorId", this._editorId);
					this._editorId = value;
					this.OnPropertyChanged("EditorId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Editor", Storage="_editor", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string Editor {
			get {
				return this._editor;
			}
			set {
				if ((value != this._editor)) {
					this.OnPropertyChanging("Editor", this._editor);
					this._editor = value;
					this.OnPropertyChanged("Editor");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TimeSlot2ShippingIndex", Storage="_timeSlot", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Time Slot")]
		public Microsoft.SharePoint.Linq.EntitySet<TimeSlot> TimeSlot {
			get {
				return this._timeSlot;
			}
			set {
				this._timeSlot.Assign(value);
			}
		}
		
		private void OnAlarmsAndEventsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AlarmsAndEvents", this._alarmsAndEvents.Clone());
		}
		
		private void OnAlarmsAndEventsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AlarmsAndEvents");
		}
		
		private void OnAlarmsAndEventsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AlarmsAndEvents> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AlarmsAndEventsList2Shipping = this;
			}
			else {
				e.Item.AlarmsAndEventsList2Shipping = null;
			}
		}
		
		private void OnShippingCommentsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingComments", this._shippingComments.Clone());
		}
		
		private void OnShippingCommentsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingComments");
		}
		
		private void OnShippingCommentsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingComments> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingComments2ShippingID = this;
			}
			else {
				e.Item.ShippingComments2ShippingID = null;
			}
		}
		
		private void OnShippingDriversTeamChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingDriversTeam", this._shippingDriversTeam.Clone());
		}
		
		private void OnShippingDriversTeamChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingDriversTeam");
		}
		
		private void OnShippingDriversTeamSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingDriversTeam> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingIndex = this;
			}
			else {
				e.Item.ShippingIndex = null;
			}
		}
		
		private void OnLoadDescriptionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("LoadDescription", this._loadDescription.Clone());
		}
		
		private void OnLoadDescriptionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("LoadDescription");
		}
		
		private void OnLoadDescriptionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<LoadDescription> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.LoadDescription2ShippingIndex = this;
			}
			else {
				e.Item.LoadDescription2ShippingIndex = null;
			}
		}
		
		private void OnPartnerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PartnerTitle", this._partnerTitle.Clone());
		}
		
		private void OnPartnerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PartnerTitle");
		}
		
		private void OnPartnerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
		}
		
		private void OnShipping2WarehouseTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2WarehouseTitle", this._shipping2WarehouseTitle.Clone());
		}
		
		private void OnShipping2WarehouseTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2WarehouseTitle");
		}
		
		private void OnShipping2WarehouseTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnTruckTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TruckTitle", this._truckTitle.Clone());
		}
		
		private void OnTruckTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TruckTitle");
		}
		
		private void OnTruckTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnTrailerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TrailerTitle", this._trailerTitle.Clone());
		}
		
		private void OnTrailerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TrailerTitle");
		}
		
		private void OnTrailerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Trailer> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnShipping2RouteTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2RouteTitle", this._shipping2RouteTitle.Clone());
		}
		
		private void OnShipping2RouteTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2RouteTitle");
		}
		
		private void OnShipping2RouteTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnShipping2PartnerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2PartnerTitle", this._shipping2PartnerTitle.Clone());
		}
		
		private void OnShipping2PartnerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2PartnerTitle");
		}
		
		private void OnShipping2PartnerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnSecurityEscortCatalogTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecurityEscortCatalogTitle", this._securityEscortCatalogTitle.Clone());
		}
		
		private void OnSecurityEscortCatalogTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecurityEscortCatalogTitle");
		}
		
		private void OnSecurityEscortCatalogTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SecurityEscortCatalog> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnShipping2TruckTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2TruckTitle", this._shipping2TruckTitle.Clone());
		}
		
		private void OnShipping2TruckTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2TruckTitle");
		}
		
		private void OnShipping2TruckTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Truck> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping0.Add(this);
			}
			else {
				e.Item.Shipping0.Remove(this);
			}
		}
		
		private void OnShipping2CityChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2City", this._shipping2City.Clone());
		}
		
		private void OnShipping2CityChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2City");
		}
		
		private void OnShipping2CitySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CityType> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnShipping2TransportUnitTypeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2TransportUnitType", this._shipping2TransportUnitType.Clone());
		}
		
		private void OnShipping2TransportUnitTypeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2TransportUnitType");
		}
		
		private void OnShipping2TransportUnitTypeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TranspotUnit> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnShipping2Currency4AddCostsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2Currency4AddCosts", this._shipping2Currency4AddCosts.Clone());
		}
		
		private void OnShipping2Currency4AddCostsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2Currency4AddCosts");
		}
		
		private void OnShipping2Currency4AddCostsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnShipping2CurrencyForFreightChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2CurrencyForFreight", this._shipping2CurrencyForFreight.Clone());
		}
		
		private void OnShipping2CurrencyForFreightChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2CurrencyForFreight");
		}
		
		private void OnShipping2CurrencyForFreightSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping0.Add(this);
			}
			else {
				e.Item.Shipping0.Remove(this);
			}
		}
		
		private void OnShipping2CurrencyForEscortChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2CurrencyForEscort", this._shipping2CurrencyForEscort.Clone());
		}
		
		private void OnShipping2CurrencyForEscortChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2CurrencyForEscort");
		}
		
		private void OnShipping2CurrencyForEscortSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping1.Add(this);
			}
			else {
				e.Item.Shipping1.Remove(this);
			}
		}
		
		private void OnShipping2Currency4CostsPerKUChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2Currency4CostsPerKU", this._shipping2Currency4CostsPerKU.Clone());
		}
		
		private void OnShipping2Currency4CostsPerKUChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2Currency4CostsPerKU");
		}
		
		private void OnShipping2Currency4CostsPerKUSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Currency> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2.Add(this);
			}
			else {
				e.Item.Shipping2.Remove(this);
			}
		}
		
		private void OnShipping2FreightPOIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2FreightPOIndex", this._shipping2FreightPOIndex.Clone());
		}
		
		private void OnShipping2FreightPOIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2FreightPOIndex");
		}
		
		private void OnShipping2FreightPOIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<FreightPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnShipping2EscortPOIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping2EscortPOIndex", this._shipping2EscortPOIndex.Clone());
		}
		
		private void OnShipping2EscortPOIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping2EscortPOIndex");
		}
		
		private void OnShipping2EscortPOIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EscortPO> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnSecuritySealProtocolIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SecuritySealProtocolIndex", this._securitySealProtocolIndex.Clone());
		}
		
		private void OnSecuritySealProtocolIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SecuritySealProtocolIndex");
		}
		
		private void OnSecuritySealProtocolIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SealProtocol> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping.Add(this);
			}
			else {
				e.Item.Shipping.Remove(this);
			}
		}
		
		private void OnTimeSlotChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TimeSlot", this._timeSlot.Clone());
		}
		
		private void OnTimeSlotChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TimeSlot");
		}
		
		private void OnTimeSlotSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlot> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TimeSlot2ShippingIndex = this;
			}
			else {
				e.Item.TimeSlot2ShippingIndex = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_ShippingPointListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="ShippingPoint", Id="0x0100CB62286DE09CE54780611F275F43DB47")]
	public partial class ShippingPoint : Element {
		
		private string _shippingPointDescription;
		
		private System.Nullable<Direction> _direction;
		
		private Microsoft.SharePoint.Linq.EntitySet<ScheduleTemplate> _scheduleTemplate;
		
		private Microsoft.SharePoint.Linq.EntityRef<Warehouse> _warehouseTitle;
		
		private Microsoft.SharePoint.Linq.EntitySet<TimeSlot> _timeSlot;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ShippingPoint() {
			this._scheduleTemplate = new Microsoft.SharePoint.Linq.EntitySet<ScheduleTemplate>();
			this._scheduleTemplate.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ScheduleTemplate>>(this.OnScheduleTemplateSync);
			this._scheduleTemplate.OnChanged += new System.EventHandler(this.OnScheduleTemplateChanged);
			this._scheduleTemplate.OnChanging += new System.EventHandler(this.OnScheduleTemplateChanging);
			this._warehouseTitle = new Microsoft.SharePoint.Linq.EntityRef<Warehouse>();
			this._warehouseTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse>>(this.OnWarehouseTitleSync);
			this._warehouseTitle.OnChanged += new System.EventHandler(this.OnWarehouseTitleChanged);
			this._warehouseTitle.OnChanging += new System.EventHandler(this.OnWarehouseTitleChanging);
			this._timeSlot = new Microsoft.SharePoint.Linq.EntitySet<TimeSlot>();
			this._timeSlot.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlot>>(this.OnTimeSlotSync);
			this._timeSlot.OnChanged += new System.EventHandler(this.OnTimeSlotChanged);
			this._timeSlot.OnChanging += new System.EventHandler(this.OnTimeSlotChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShippingPointDescription", Storage="_shippingPointDescription", FieldType="Text")]
		public string ShippingPointDescription {
			get {
				return this._shippingPointDescription;
			}
			set {
				if ((value != this._shippingPointDescription)) {
					this.OnPropertyChanging("ShippingPointDescription", this._shippingPointDescription);
					this._shippingPointDescription = value;
					this.OnPropertyChanged("ShippingPointDescription");
				}
			}
		}
		
		/// <summary>
		/// Direction
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Direction", Storage="_direction", FieldType="Choice")]
		public System.Nullable<Direction> Direction {
			get {
				return this._direction;
			}
			set {
				if ((value != this._direction)) {
					this.OnPropertyChanging("Direction", this._direction);
					this._direction = value;
					this.OnPropertyChanged("Direction");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ShippingPointLookupTitle", Storage="_scheduleTemplate", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Schedule Template")]
		public Microsoft.SharePoint.Linq.EntitySet<ScheduleTemplate> ScheduleTemplate {
			get {
				return this._scheduleTemplate;
			}
			set {
				this._scheduleTemplate.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="WarehouseTitle", Storage="_warehouseTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Warehouse")]
		public Warehouse WarehouseTitle {
			get {
				return this._warehouseTitle.GetEntity();
			}
			set {
				this._warehouseTitle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TimeSlot2ShippingPointLookup", Storage="_timeSlot", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Time Slot")]
		public Microsoft.SharePoint.Linq.EntitySet<TimeSlot> TimeSlot {
			get {
				return this._timeSlot;
			}
			set {
				this._timeSlot.Assign(value);
			}
		}
		
		private void OnScheduleTemplateChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ScheduleTemplate", this._scheduleTemplate.Clone());
		}
		
		private void OnScheduleTemplateChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ScheduleTemplate");
		}
		
		private void OnScheduleTemplateSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ScheduleTemplate> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingPointLookupTitle = this;
			}
			else {
				e.Item.ShippingPointLookupTitle = null;
			}
		}
		
		private void OnWarehouseTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("WarehouseTitle", this._warehouseTitle.Clone());
		}
		
		private void OnWarehouseTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("WarehouseTitle");
		}
		
		private void OnWarehouseTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Warehouse> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ShippingPoint.Add(this);
			}
			else {
				e.Item.ShippingPoint.Remove(this);
			}
		}
		
		private void OnTimeSlotChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TimeSlot", this._timeSlot.Clone());
		}
		
		private void OnTimeSlotChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TimeSlot");
		}
		
		private void OnTimeSlotSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<TimeSlot> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TimeSlot2ShippingPointLookup = this;
			}
			else {
				e.Item.TimeSlot2ShippingPointLookup = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_TimeSlotTemplateListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TimeSlotsTemplate", Id="0x0100E4381E17DE2049B895B5140F70D7C21C")]
	public partial class TimeSlotsTemplate : Element {
		
		private System.Nullable<TimeSlotsTemplateDay> _timeSlotsTemplateDay;
		
		private System.Nullable<TimeSlotsTemplateStartHour> _timeSlotsTemplateStartHour;
		
		private System.Nullable<TimeSlotsTemplateStartMinute> _timeSlotsTemplateStartMinute;
		
		private System.Nullable<TimeSlotsTemplateEndHour> _timeSlotsTemplateEndHour;
		
		private System.Nullable<TimeSlotsTemplateEndMinute> _timeSlotsTemplateEndMinute;
		
		private Microsoft.SharePoint.Linq.EntityRef<ScheduleTemplate> _scheduleTemplateTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TimeSlotsTemplate() {
			this._scheduleTemplateTitle = new Microsoft.SharePoint.Linq.EntityRef<ScheduleTemplate>();
			this._scheduleTemplateTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ScheduleTemplate>>(this.OnScheduleTemplateTitleSync);
			this._scheduleTemplateTitle.OnChanged += new System.EventHandler(this.OnScheduleTemplateTitleChanged);
			this._scheduleTemplateTitle.OnChanging += new System.EventHandler(this.OnScheduleTemplateTitleChanging);
			this.OnCreated();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type TimeSlotsTemplate.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type TimeSlotsTemplate.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TimeSlotsTemplateDay", Storage="_timeSlotsTemplateDay", FieldType="Choice")]
		public System.Nullable<TimeSlotsTemplateDay> TimeSlotsTemplateDay {
			get {
				return this._timeSlotsTemplateDay;
			}
			set {
				if ((value != this._timeSlotsTemplateDay)) {
					this.OnPropertyChanging("TimeSlotsTemplateDay", this._timeSlotsTemplateDay);
					this._timeSlotsTemplateDay = value;
					this.OnPropertyChanged("TimeSlotsTemplateDay");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TimeSlotsTemplateStartHour", Storage="_timeSlotsTemplateStartHour", FieldType="Choice")]
		public System.Nullable<TimeSlotsTemplateStartHour> TimeSlotsTemplateStartHour {
			get {
				return this._timeSlotsTemplateStartHour;
			}
			set {
				if ((value != this._timeSlotsTemplateStartHour)) {
					this.OnPropertyChanging("TimeSlotsTemplateStartHour", this._timeSlotsTemplateStartHour);
					this._timeSlotsTemplateStartHour = value;
					this.OnPropertyChanged("TimeSlotsTemplateStartHour");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TimeSlotsTemplateStartMinute", Storage="_timeSlotsTemplateStartMinute", FieldType="Choice")]
		public System.Nullable<TimeSlotsTemplateStartMinute> TimeSlotsTemplateStartMinute {
			get {
				return this._timeSlotsTemplateStartMinute;
			}
			set {
				if ((value != this._timeSlotsTemplateStartMinute)) {
					this.OnPropertyChanging("TimeSlotsTemplateStartMinute", this._timeSlotsTemplateStartMinute);
					this._timeSlotsTemplateStartMinute = value;
					this.OnPropertyChanged("TimeSlotsTemplateStartMinute");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TimeSlotsTemplateEndHour", Storage="_timeSlotsTemplateEndHour", FieldType="Choice")]
		public System.Nullable<TimeSlotsTemplateEndHour> TimeSlotsTemplateEndHour {
			get {
				return this._timeSlotsTemplateEndHour;
			}
			set {
				if ((value != this._timeSlotsTemplateEndHour)) {
					this.OnPropertyChanging("TimeSlotsTemplateEndHour", this._timeSlotsTemplateEndHour);
					this._timeSlotsTemplateEndHour = value;
					this.OnPropertyChanged("TimeSlotsTemplateEndHour");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TimeSlotsTemplateEndMinute", Storage="_timeSlotsTemplateEndMinute", FieldType="Choice")]
		public System.Nullable<TimeSlotsTemplateEndMinute> TimeSlotsTemplateEndMinute {
			get {
				return this._timeSlotsTemplateEndMinute;
			}
			set {
				if ((value != this._timeSlotsTemplateEndMinute)) {
					this.OnPropertyChanging("TimeSlotsTemplateEndMinute", this._timeSlotsTemplateEndMinute);
					this._timeSlotsTemplateEndMinute = value;
					this.OnPropertyChanged("TimeSlotsTemplateEndMinute");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="ScheduleTemplateTitle", Storage="_scheduleTemplateTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Schedule Template")]
		public ScheduleTemplate ScheduleTemplateTitle {
			get {
				return this._scheduleTemplateTitle.GetEntity();
			}
			set {
				this._scheduleTemplateTitle.SetEntity(value);
			}
		}
		
		private void OnScheduleTemplateTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ScheduleTemplateTitle", this._scheduleTemplateTitle.Clone());
		}
		
		private void OnScheduleTemplateTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ScheduleTemplateTitle");
		}
		
		private void OnScheduleTemplateTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ScheduleTemplate> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TimeSlotsTemplate.Add(this);
			}
			else {
				e.Item.TimeSlotsTemplate.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_TrailersListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Trailer", Id="0x01009EF7D9CEE9664A48928AD8C8857ADA95")]
	public partial class Trailer : Element {
		
		private string _additionalComments;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _trailer2PartnerTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Trailer() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._trailer2PartnerTitle = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._trailer2PartnerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnTrailer2PartnerTitleSync);
			this._trailer2PartnerTitle.OnChanged += new System.EventHandler(this.OnTrailer2PartnerTitleChanged);
			this._trailer2PartnerTitle.OnChanging += new System.EventHandler(this.OnTrailer2PartnerTitleChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AdditionalComments", Storage="_additionalComments", FieldType="Text")]
		public string AdditionalComments {
			get {
				return this._additionalComments;
			}
			set {
				if ((value != this._additionalComments)) {
					this.OnPropertyChanging("AdditionalComments", this._additionalComments);
					this._additionalComments = value;
					this.OnPropertyChanged("AdditionalComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TrailerTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Trailer2PartnerTitle", Storage="_trailer2PartnerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner Trailer2PartnerTitle {
			get {
				return this._trailer2PartnerTitle.GetEntity();
			}
			set {
				this._trailer2PartnerTitle.SetEntity(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TrailerTitle = this;
			}
			else {
				e.Item.TrailerTitle = null;
			}
		}
		
		private void OnTrailer2PartnerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Trailer2PartnerTitle", this._trailer2PartnerTitle.Clone());
		}
		
		private void OnTrailer2PartnerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Trailer2PartnerTitle");
		}
		
		private void OnTrailer2PartnerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Trailer.Add(this);
			}
			else {
				e.Item.Trailer.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_TranspotUnitTypeListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TranspotUnit", Id="0x0100017ECA95BFABB941B9E7FE63643FCD7C")]
	public partial class TranspotUnit : Element {
		
		private Microsoft.SharePoint.Linq.EntitySet<Route> _route;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TranspotUnit() {
			this._route = new Microsoft.SharePoint.Linq.EntitySet<Route>();
			this._route.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route>>(this.OnRouteSync);
			this._route.OnChanged += new System.EventHandler(this.OnRouteChanged);
			this._route.OnChanging += new System.EventHandler(this.OnRouteChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TransportUnitTypeTitle", Storage="_route", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Route")]
		public Microsoft.SharePoint.Linq.EntitySet<Route> Route {
			get {
				return this._route;
			}
			set {
				this._route.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2TransportUnitType", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnRouteChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Route", this._route.Clone());
		}
		
		private void OnRouteChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Route");
		}
		
		private void OnRouteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Route> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TransportUnitTypeTitle = this;
			}
			else {
				e.Item.TransportUnitTypeTitle = null;
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2TransportUnitType = this;
			}
			else {
				e.Item.Shipping2TransportUnitType = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_TrucksListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Truck", Id="0x01003E7761AEF97A4C619F44D01B53A56568")]
	public partial class Truck : Element {
		
		private string _additionalComments;
		
		private System.Nullable<VehicleType> _vehicleType;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping0;
		
		private Microsoft.SharePoint.Linq.EntityRef<Partner> _truck2PartnerTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Truck() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._shipping0 = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShipping0Sync);
			this._shipping0.OnChanged += new System.EventHandler(this.OnShipping0Changed);
			this._shipping0.OnChanging += new System.EventHandler(this.OnShipping0Changing);
			this._truck2PartnerTitle = new Microsoft.SharePoint.Linq.EntityRef<Partner>();
			this._truck2PartnerTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnTruck2PartnerTitleSync);
			this._truck2PartnerTitle.OnChanged += new System.EventHandler(this.OnTruck2PartnerTitleChanged);
			this._truck2PartnerTitle.OnChanging += new System.EventHandler(this.OnTruck2PartnerTitleChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AdditionalComments", Storage="_additionalComments", FieldType="Text")]
		public string AdditionalComments {
			get {
				return this._additionalComments;
			}
			set {
				if ((value != this._additionalComments)) {
					this.OnPropertyChanging("AdditionalComments", this._additionalComments);
					this._additionalComments = value;
					this.OnPropertyChanged("AdditionalComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VehicleType", Storage="_vehicleType", FieldType="Choice")]
		public System.Nullable<VehicleType> VehicleType {
			get {
				return this._vehicleType;
			}
			set {
				if ((value != this._vehicleType)) {
					this.OnPropertyChanging("VehicleType", this._vehicleType);
					this._vehicleType = value;
					this.OnPropertyChanged("VehicleType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TruckTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2TruckTitle", Storage="_shipping0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping0 {
			get {
				return this._shipping0;
			}
			set {
				this._shipping0.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Truck2PartnerTitle", Storage="_truck2PartnerTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Partner")]
		public Partner Truck2PartnerTitle {
			get {
				return this._truck2PartnerTitle.GetEntity();
			}
			set {
				this._truck2PartnerTitle.SetEntity(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TruckTitle = this;
			}
			else {
				e.Item.TruckTitle = null;
			}
		}
		
		private void OnShipping0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping0", this._shipping0.Clone());
		}
		
		private void OnShipping0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping0");
		}
		
		private void OnShipping0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2TruckTitle = this;
			}
			else {
				e.Item.Shipping2TruckTitle = null;
			}
		}
		
		private void OnTruck2PartnerTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Truck2PartnerTitle", this._truck2PartnerTitle.Clone());
		}
		
		private void OnTruck2PartnerTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Truck2PartnerTitle");
		}
		
		private void OnTruck2PartnerTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Truck.Add(this);
			}
			else {
				e.Item.Truck.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_WarehousesListCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Warehouse", Id="0x01001E57547208B49B46B4AA7CB4536B1A55")]
	public partial class Warehouse : Element {
		
		private string _warehouseAddress;
		
		private Microsoft.SharePoint.Linq.EntitySet<Partner> _partner;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		private Microsoft.SharePoint.Linq.EntitySet<ShippingPoint> _shippingPoint;
		
		private Microsoft.SharePoint.Linq.EntityRef<Commodity> _commodityTitle;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Warehouse() {
			this._partner = new Microsoft.SharePoint.Linq.EntitySet<Partner>();
			this._partner.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner>>(this.OnPartnerSync);
			this._partner.OnChanged += new System.EventHandler(this.OnPartnerChanged);
			this._partner.OnChanging += new System.EventHandler(this.OnPartnerChanging);
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this._shippingPoint = new Microsoft.SharePoint.Linq.EntitySet<ShippingPoint>();
			this._shippingPoint.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint>>(this.OnShippingPointSync);
			this._shippingPoint.OnChanged += new System.EventHandler(this.OnShippingPointChanged);
			this._shippingPoint.OnChanging += new System.EventHandler(this.OnShippingPointChanging);
			this._commodityTitle = new Microsoft.SharePoint.Linq.EntityRef<Commodity>();
			this._commodityTitle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Commodity>>(this.OnCommodityTitleSync);
			this._commodityTitle.OnChanged += new System.EventHandler(this.OnCommodityTitleChanged);
			this._commodityTitle.OnChanging += new System.EventHandler(this.OnCommodityTitleChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WarehouseAddress", Storage="_warehouseAddress", FieldType="Note")]
		public string WarehouseAddress {
			get {
				return this._warehouseAddress;
			}
			set {
				if ((value != this._warehouseAddress)) {
					this.OnPropertyChanging("WarehouseAddress", this._warehouseAddress);
					this._warehouseAddress = value;
					this.OnPropertyChanged("WarehouseAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Partner2WarehouseTitle", Storage="_partner", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Partner")]
		public Microsoft.SharePoint.Linq.EntitySet<Partner> Partner {
			get {
				return this._partner;
			}
			set {
				this._partner.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2WarehouseTitle", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="WarehouseTitle", Storage="_shippingPoint", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping Point")]
		public Microsoft.SharePoint.Linq.EntitySet<ShippingPoint> ShippingPoint {
			get {
				return this._shippingPoint;
			}
			set {
				this._shippingPoint.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CommodityTitle", Storage="_commodityTitle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Commodity")]
		public Commodity CommodityTitle {
			get {
				return this._commodityTitle.GetEntity();
			}
			set {
				this._commodityTitle.SetEntity(value);
			}
		}
		
		private void OnPartnerChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Partner", this._partner.Clone());
		}
		
		private void OnPartnerChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Partner");
		}
		
		private void OnPartnerSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Partner> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Partner2WarehouseTitle = this;
			}
			else {
				e.Item.Partner2WarehouseTitle = null;
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2WarehouseTitle = this;
			}
			else {
				e.Item.Shipping2WarehouseTitle = null;
			}
		}
		
		private void OnShippingPointChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ShippingPoint", this._shippingPoint.Clone());
		}
		
		private void OnShippingPointChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ShippingPoint");
		}
		
		private void OnShippingPointSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.WarehouseTitle = this;
			}
			else {
				e.Item.WarehouseTitle = null;
			}
		}
		
		private void OnCommodityTitleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CommodityTitle", this._commodityTitle.Clone());
		}
		
		private void OnCommodityTitleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CommodityTitle");
		}
		
		private void OnCommodityTitleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Commodity> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Warehouse.Add(this);
			}
			else {
				e.Item.Warehouse.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_EscortPOLibraryCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="EscortPO", Id="0x0101000276600256FA44439B3AA6A5221F14C4")]
	public partial class EscortPO : Document {
		
		private string _sPOFreightPO;
		
		private string _securityPOEscortPayerName;
		
		private string _securityPOEscortPayerAddress;
		
		private string _securityPOEscortPayerZip;
		
		private string _securityPOEscortPayerCity;
		
		private string _securityPOEscortPayerNIP;
		
		private System.Nullable<System.DateTime> _sPODispatchDate;
		
		private System.Nullable<double> _securityPOEscortCosts;
		
		private string _securityPOEscortCurrency;
		
		private string _securityPOEscortProvider;
		
		private string _securityPOCity;
		
		private string _securityPOCountry;
		
		private string _securityPOCommodity;
		
		private string _securityPOSentInvoiceToMultiline;
		
		private string _emailAddress;
		
		private string _fPOWarehouseAddress;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public EscortPO() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SPOFreightPO", Storage="_sPOFreightPO", FieldType="Text")]
		public string SPOFreightPO {
			get {
				return this._sPOFreightPO;
			}
			set {
				if ((value != this._sPOFreightPO)) {
					this.OnPropertyChanging("SPOFreightPO", this._sPOFreightPO);
					this._sPOFreightPO = value;
					this.OnPropertyChanged("SPOFreightPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortPayerName", Storage="_securityPOEscortPayerName", FieldType="Text")]
		public string SecurityPOEscortPayerName {
			get {
				return this._securityPOEscortPayerName;
			}
			set {
				if ((value != this._securityPOEscortPayerName)) {
					this.OnPropertyChanging("SecurityPOEscortPayerName", this._securityPOEscortPayerName);
					this._securityPOEscortPayerName = value;
					this.OnPropertyChanged("SecurityPOEscortPayerName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortPayerAddress", Storage="_securityPOEscortPayerAddress", FieldType="Text")]
		public string SecurityPOEscortPayerAddress {
			get {
				return this._securityPOEscortPayerAddress;
			}
			set {
				if ((value != this._securityPOEscortPayerAddress)) {
					this.OnPropertyChanging("SecurityPOEscortPayerAddress", this._securityPOEscortPayerAddress);
					this._securityPOEscortPayerAddress = value;
					this.OnPropertyChanged("SecurityPOEscortPayerAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortPayerZip", Storage="_securityPOEscortPayerZip", FieldType="Text")]
		public string SecurityPOEscortPayerZip {
			get {
				return this._securityPOEscortPayerZip;
			}
			set {
				if ((value != this._securityPOEscortPayerZip)) {
					this.OnPropertyChanging("SecurityPOEscortPayerZip", this._securityPOEscortPayerZip);
					this._securityPOEscortPayerZip = value;
					this.OnPropertyChanged("SecurityPOEscortPayerZip");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortPayerCity", Storage="_securityPOEscortPayerCity", FieldType="Text")]
		public string SecurityPOEscortPayerCity {
			get {
				return this._securityPOEscortPayerCity;
			}
			set {
				if ((value != this._securityPOEscortPayerCity)) {
					this.OnPropertyChanging("SecurityPOEscortPayerCity", this._securityPOEscortPayerCity);
					this._securityPOEscortPayerCity = value;
					this.OnPropertyChanged("SecurityPOEscortPayerCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortPayerNIP", Storage="_securityPOEscortPayerNIP", FieldType="Text")]
		public string SecurityPOEscortPayerNIP {
			get {
				return this._securityPOEscortPayerNIP;
			}
			set {
				if ((value != this._securityPOEscortPayerNIP)) {
					this.OnPropertyChanging("SecurityPOEscortPayerNIP", this._securityPOEscortPayerNIP);
					this._securityPOEscortPayerNIP = value;
					this.OnPropertyChanged("SecurityPOEscortPayerNIP");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SPODispatchDate", Storage="_sPODispatchDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> SPODispatchDate {
			get {
				return this._sPODispatchDate;
			}
			set {
				if ((value != this._sPODispatchDate)) {
					this.OnPropertyChanging("SPODispatchDate", this._sPODispatchDate);
					this._sPODispatchDate = value;
					this.OnPropertyChanged("SPODispatchDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortCosts", Storage="_securityPOEscortCosts", FieldType="Number")]
		public System.Nullable<double> SecurityPOEscortCosts {
			get {
				return this._securityPOEscortCosts;
			}
			set {
				if ((value != this._securityPOEscortCosts)) {
					this.OnPropertyChanging("SecurityPOEscortCosts", this._securityPOEscortCosts);
					this._securityPOEscortCosts = value;
					this.OnPropertyChanged("SecurityPOEscortCosts");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortCurrency", Storage="_securityPOEscortCurrency", FieldType="Text")]
		public string SecurityPOEscortCurrency {
			get {
				return this._securityPOEscortCurrency;
			}
			set {
				if ((value != this._securityPOEscortCurrency)) {
					this.OnPropertyChanging("SecurityPOEscortCurrency", this._securityPOEscortCurrency);
					this._securityPOEscortCurrency = value;
					this.OnPropertyChanged("SecurityPOEscortCurrency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOEscortProvider", Storage="_securityPOEscortProvider", FieldType="Text")]
		public string SecurityPOEscortProvider {
			get {
				return this._securityPOEscortProvider;
			}
			set {
				if ((value != this._securityPOEscortProvider)) {
					this.OnPropertyChanging("SecurityPOEscortProvider", this._securityPOEscortProvider);
					this._securityPOEscortProvider = value;
					this.OnPropertyChanged("SecurityPOEscortProvider");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOCity", Storage="_securityPOCity", FieldType="Text")]
		public string SecurityPOCity {
			get {
				return this._securityPOCity;
			}
			set {
				if ((value != this._securityPOCity)) {
					this.OnPropertyChanging("SecurityPOCity", this._securityPOCity);
					this._securityPOCity = value;
					this.OnPropertyChanged("SecurityPOCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOCountry", Storage="_securityPOCountry", FieldType="Text")]
		public string SecurityPOCountry {
			get {
				return this._securityPOCountry;
			}
			set {
				if ((value != this._securityPOCountry)) {
					this.OnPropertyChanging("SecurityPOCountry", this._securityPOCountry);
					this._securityPOCountry = value;
					this.OnPropertyChanged("SecurityPOCountry");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOCommodity", Storage="_securityPOCommodity", FieldType="Text")]
		public string SecurityPOCommodity {
			get {
				return this._securityPOCommodity;
			}
			set {
				if ((value != this._securityPOCommodity)) {
					this.OnPropertyChanging("SecurityPOCommodity", this._securityPOCommodity);
					this._securityPOCommodity = value;
					this.OnPropertyChanged("SecurityPOCommodity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SecurityPOSentInvoiceToMultiline", Storage="_securityPOSentInvoiceToMultiline", FieldType="Note")]
		public string SecurityPOSentInvoiceToMultiline {
			get {
				return this._securityPOSentInvoiceToMultiline;
			}
			set {
				if ((value != this._securityPOSentInvoiceToMultiline)) {
					this.OnPropertyChanging("SecurityPOSentInvoiceToMultiline", this._securityPOSentInvoiceToMultiline);
					this._securityPOSentInvoiceToMultiline = value;
					this.OnPropertyChanged("SecurityPOSentInvoiceToMultiline");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailAddress", Storage="_emailAddress", FieldType="Text")]
		public string EmailAddress {
			get {
				return this._emailAddress;
			}
			set {
				if ((value != this._emailAddress)) {
					this.OnPropertyChanging("EmailAddress", this._emailAddress);
					this._emailAddress = value;
					this.OnPropertyChanged("EmailAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOWarehouseAddress", Storage="_fPOWarehouseAddress", FieldType="Note")]
		public string FPOWarehouseAddress {
			get {
				return this._fPOWarehouseAddress;
			}
			set {
				if ((value != this._fPOWarehouseAddress)) {
					this.OnPropertyChanging("FPOWarehouseAddress", this._fPOWarehouseAddress);
					this._fPOWarehouseAddress = value;
					this.OnPropertyChanged("FPOWarehouseAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2EscortPOIndex", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2EscortPOIndex = this;
			}
			else {
				e.Item.Shipping2EscortPOIndex = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_FreightPOLibraryCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="FreightPO", Id="0x0101003147BA6CBB014B599BBDD72087081913")]
	public partial class FreightPO : Document {
		
		private string _fPOFreightPO;
		
		private string _freightPOPayerName;
		
		private string _freightPOPayerAddress;
		
		private string _freightPOPayerZip;
		
		private string _freightPOPayerCity;
		
		private string _freightPOPayerNIP;
		
		private System.Nullable<System.DateTime> _fPOLoadingDate;
		
		private System.Nullable<System.DateTime> _fPODispatchDate;
		
		private string _freightPOTransportUnitType;
		
		private System.Nullable<double> _freightPOTransportCosts;
		
		private string _freightPOCurrency;
		
		private string _freightPOForwarder;
		
		private string _freightPOCity;
		
		private string _freightPOCountry;
		
		private string _freightPOCommodity;
		
		private string _freightPOSendInvoiceToMultiline;
		
		private string _emailAddress;
		
		private string _fPOWarehouseAddress;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public FreightPO() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOFreightPO", Storage="_fPOFreightPO", FieldType="Text")]
		public string FPOFreightPO {
			get {
				return this._fPOFreightPO;
			}
			set {
				if ((value != this._fPOFreightPO)) {
					this.OnPropertyChanging("FPOFreightPO", this._fPOFreightPO);
					this._fPOFreightPO = value;
					this.OnPropertyChanged("FPOFreightPO");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOPayerName", Storage="_freightPOPayerName", FieldType="Text")]
		public string FreightPOPayerName {
			get {
				return this._freightPOPayerName;
			}
			set {
				if ((value != this._freightPOPayerName)) {
					this.OnPropertyChanging("FreightPOPayerName", this._freightPOPayerName);
					this._freightPOPayerName = value;
					this.OnPropertyChanged("FreightPOPayerName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOPayerAddress", Storage="_freightPOPayerAddress", FieldType="Text")]
		public string FreightPOPayerAddress {
			get {
				return this._freightPOPayerAddress;
			}
			set {
				if ((value != this._freightPOPayerAddress)) {
					this.OnPropertyChanging("FreightPOPayerAddress", this._freightPOPayerAddress);
					this._freightPOPayerAddress = value;
					this.OnPropertyChanged("FreightPOPayerAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOPayerZip", Storage="_freightPOPayerZip", FieldType="Text")]
		public string FreightPOPayerZip {
			get {
				return this._freightPOPayerZip;
			}
			set {
				if ((value != this._freightPOPayerZip)) {
					this.OnPropertyChanging("FreightPOPayerZip", this._freightPOPayerZip);
					this._freightPOPayerZip = value;
					this.OnPropertyChanged("FreightPOPayerZip");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOPayerCity", Storage="_freightPOPayerCity", FieldType="Text")]
		public string FreightPOPayerCity {
			get {
				return this._freightPOPayerCity;
			}
			set {
				if ((value != this._freightPOPayerCity)) {
					this.OnPropertyChanging("FreightPOPayerCity", this._freightPOPayerCity);
					this._freightPOPayerCity = value;
					this.OnPropertyChanged("FreightPOPayerCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOPayerNIP", Storage="_freightPOPayerNIP", FieldType="Text")]
		public string FreightPOPayerNIP {
			get {
				return this._freightPOPayerNIP;
			}
			set {
				if ((value != this._freightPOPayerNIP)) {
					this.OnPropertyChanging("FreightPOPayerNIP", this._freightPOPayerNIP);
					this._freightPOPayerNIP = value;
					this.OnPropertyChanged("FreightPOPayerNIP");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOLoadingDate", Storage="_fPOLoadingDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> FPOLoadingDate {
			get {
				return this._fPOLoadingDate;
			}
			set {
				if ((value != this._fPOLoadingDate)) {
					this.OnPropertyChanging("FPOLoadingDate", this._fPOLoadingDate);
					this._fPOLoadingDate = value;
					this.OnPropertyChanged("FPOLoadingDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPODispatchDate", Storage="_fPODispatchDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> FPODispatchDate {
			get {
				return this._fPODispatchDate;
			}
			set {
				if ((value != this._fPODispatchDate)) {
					this.OnPropertyChanging("FPODispatchDate", this._fPODispatchDate);
					this._fPODispatchDate = value;
					this.OnPropertyChanged("FPODispatchDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOTransportUnitType", Storage="_freightPOTransportUnitType", FieldType="Text")]
		public string FreightPOTransportUnitType {
			get {
				return this._freightPOTransportUnitType;
			}
			set {
				if ((value != this._freightPOTransportUnitType)) {
					this.OnPropertyChanging("FreightPOTransportUnitType", this._freightPOTransportUnitType);
					this._freightPOTransportUnitType = value;
					this.OnPropertyChanged("FreightPOTransportUnitType");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOTransportCosts", Storage="_freightPOTransportCosts", FieldType="Number")]
		public System.Nullable<double> FreightPOTransportCosts {
			get {
				return this._freightPOTransportCosts;
			}
			set {
				if ((value != this._freightPOTransportCosts)) {
					this.OnPropertyChanging("FreightPOTransportCosts", this._freightPOTransportCosts);
					this._freightPOTransportCosts = value;
					this.OnPropertyChanged("FreightPOTransportCosts");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOCurrency", Storage="_freightPOCurrency", FieldType="Text")]
		public string FreightPOCurrency {
			get {
				return this._freightPOCurrency;
			}
			set {
				if ((value != this._freightPOCurrency)) {
					this.OnPropertyChanging("FreightPOCurrency", this._freightPOCurrency);
					this._freightPOCurrency = value;
					this.OnPropertyChanged("FreightPOCurrency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOForwarder", Storage="_freightPOForwarder", FieldType="Text")]
		public string FreightPOForwarder {
			get {
				return this._freightPOForwarder;
			}
			set {
				if ((value != this._freightPOForwarder)) {
					this.OnPropertyChanging("FreightPOForwarder", this._freightPOForwarder);
					this._freightPOForwarder = value;
					this.OnPropertyChanged("FreightPOForwarder");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOCity", Storage="_freightPOCity", FieldType="Text")]
		public string FreightPOCity {
			get {
				return this._freightPOCity;
			}
			set {
				if ((value != this._freightPOCity)) {
					this.OnPropertyChanging("FreightPOCity", this._freightPOCity);
					this._freightPOCity = value;
					this.OnPropertyChanged("FreightPOCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOCountry", Storage="_freightPOCountry", FieldType="Text")]
		public string FreightPOCountry {
			get {
				return this._freightPOCountry;
			}
			set {
				if ((value != this._freightPOCountry)) {
					this.OnPropertyChanging("FreightPOCountry", this._freightPOCountry);
					this._freightPOCountry = value;
					this.OnPropertyChanged("FreightPOCountry");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOCommodity", Storage="_freightPOCommodity", FieldType="Text")]
		public string FreightPOCommodity {
			get {
				return this._freightPOCommodity;
			}
			set {
				if ((value != this._freightPOCommodity)) {
					this.OnPropertyChanging("FreightPOCommodity", this._freightPOCommodity);
					this._freightPOCommodity = value;
					this.OnPropertyChanged("FreightPOCommodity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FreightPOSendInvoiceToMultiline", Storage="_freightPOSendInvoiceToMultiline", FieldType="Note")]
		public string FreightPOSendInvoiceToMultiline {
			get {
				return this._freightPOSendInvoiceToMultiline;
			}
			set {
				if ((value != this._freightPOSendInvoiceToMultiline)) {
					this.OnPropertyChanging("FreightPOSendInvoiceToMultiline", this._freightPOSendInvoiceToMultiline);
					this._freightPOSendInvoiceToMultiline = value;
					this.OnPropertyChanged("FreightPOSendInvoiceToMultiline");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailAddress", Storage="_emailAddress", FieldType="Text")]
		public string EmailAddress {
			get {
				return this._emailAddress;
			}
			set {
				if ((value != this._emailAddress)) {
					this.OnPropertyChanging("EmailAddress", this._emailAddress);
					this._emailAddress = value;
					this.OnPropertyChanged("EmailAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FPOWarehouseAddress", Storage="_fPOWarehouseAddress", FieldType="Note")]
		public string FPOWarehouseAddress {
			get {
				return this._fPOWarehouseAddress;
			}
			set {
				if ((value != this._fPOWarehouseAddress)) {
					this.OnPropertyChanging("FPOWarehouseAddress", this._fPOWarehouseAddress);
					this._fPOWarehouseAddress = value;
					this.OnPropertyChanged("FPOWarehouseAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Shipping2FreightPOIndex", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Shipping2FreightPOIndex = this;
			}
			else {
				e.Item.Shipping2FreightPOIndex = null;
			}
		}
	}
	
	/// <summary>
	/// $Resources:CASSmartFactoryShepherd,CAS_SecuritySealProtocolLibraryCT;
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="SealProtocol", Id="0x010100CCFCCB37046E4ED39C17D28FAE78ED47")]
	public partial class SealProtocol : Document {
		
		private System.Nullable<System.DateTime> _sealProtocolDispatchDate;
		
		private string _sealProtocolCity;
		
		private string _sealProtocolCountry;
		
		private string _sealProtocolForwarder;
		
		private string _sealProtocol1stDriver;
		
		private string _sealProtocol2ndDriver;
		
		private string _sealProtocolDriverPhone;
		
		private string _sealProtocolSecurityEscortProvider;
		
		private string _sealProtocol1stEscort;
		
		private string _sealProtocol2ndEscort;
		
		private string _sealProtocolEscortPhone;
		
		private string _sealProtocolEscortCarNo;
		
		private string _sealProtocolContainersNo;
		
		private System.Nullable<System.DateTime> _sealProtocolDispatchDateActual;
		
		private string _sealProtocolWarehouse;
		
		private string _sealProtocolTruckNo;
		
		private string _sealProtocolTrailerNo;
		
		private Microsoft.SharePoint.Linq.EntitySet<Shipping> _shipping;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SealProtocol() {
			this._shipping = new Microsoft.SharePoint.Linq.EntitySet<Shipping>();
			this._shipping.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnShippingSync);
			this._shipping.OnChanged += new System.EventHandler(this.OnShippingChanged);
			this._shipping.OnChanging += new System.EventHandler(this.OnShippingChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolDispatchDate", Storage="_sealProtocolDispatchDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> SealProtocolDispatchDate {
			get {
				return this._sealProtocolDispatchDate;
			}
			set {
				if ((value != this._sealProtocolDispatchDate)) {
					this.OnPropertyChanging("SealProtocolDispatchDate", this._sealProtocolDispatchDate);
					this._sealProtocolDispatchDate = value;
					this.OnPropertyChanged("SealProtocolDispatchDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolCity", Storage="_sealProtocolCity", FieldType="Text")]
		public string SealProtocolCity {
			get {
				return this._sealProtocolCity;
			}
			set {
				if ((value != this._sealProtocolCity)) {
					this.OnPropertyChanging("SealProtocolCity", this._sealProtocolCity);
					this._sealProtocolCity = value;
					this.OnPropertyChanged("SealProtocolCity");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolCountry", Storage="_sealProtocolCountry", FieldType="Text")]
		public string SealProtocolCountry {
			get {
				return this._sealProtocolCountry;
			}
			set {
				if ((value != this._sealProtocolCountry)) {
					this.OnPropertyChanging("SealProtocolCountry", this._sealProtocolCountry);
					this._sealProtocolCountry = value;
					this.OnPropertyChanged("SealProtocolCountry");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolForwarder", Storage="_sealProtocolForwarder", FieldType="Text")]
		public string SealProtocolForwarder {
			get {
				return this._sealProtocolForwarder;
			}
			set {
				if ((value != this._sealProtocolForwarder)) {
					this.OnPropertyChanging("SealProtocolForwarder", this._sealProtocolForwarder);
					this._sealProtocolForwarder = value;
					this.OnPropertyChanged("SealProtocolForwarder");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocol1stDriver", Storage="_sealProtocol1stDriver", FieldType="Text")]
		public string SealProtocol1stDriver {
			get {
				return this._sealProtocol1stDriver;
			}
			set {
				if ((value != this._sealProtocol1stDriver)) {
					this.OnPropertyChanging("SealProtocol1stDriver", this._sealProtocol1stDriver);
					this._sealProtocol1stDriver = value;
					this.OnPropertyChanged("SealProtocol1stDriver");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocol2ndDriver", Storage="_sealProtocol2ndDriver", FieldType="Text")]
		public string SealProtocol2ndDriver {
			get {
				return this._sealProtocol2ndDriver;
			}
			set {
				if ((value != this._sealProtocol2ndDriver)) {
					this.OnPropertyChanging("SealProtocol2ndDriver", this._sealProtocol2ndDriver);
					this._sealProtocol2ndDriver = value;
					this.OnPropertyChanged("SealProtocol2ndDriver");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolDriverPhone", Storage="_sealProtocolDriverPhone", FieldType="Text")]
		public string SealProtocolDriverPhone {
			get {
				return this._sealProtocolDriverPhone;
			}
			set {
				if ((value != this._sealProtocolDriverPhone)) {
					this.OnPropertyChanging("SealProtocolDriverPhone", this._sealProtocolDriverPhone);
					this._sealProtocolDriverPhone = value;
					this.OnPropertyChanged("SealProtocolDriverPhone");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolSecurityEscortProvider", Storage="_sealProtocolSecurityEscortProvider", FieldType="Text")]
		public string SealProtocolSecurityEscortProvider {
			get {
				return this._sealProtocolSecurityEscortProvider;
			}
			set {
				if ((value != this._sealProtocolSecurityEscortProvider)) {
					this.OnPropertyChanging("SealProtocolSecurityEscortProvider", this._sealProtocolSecurityEscortProvider);
					this._sealProtocolSecurityEscortProvider = value;
					this.OnPropertyChanged("SealProtocolSecurityEscortProvider");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocol1stEscort", Storage="_sealProtocol1stEscort", FieldType="Text")]
		public string SealProtocol1stEscort {
			get {
				return this._sealProtocol1stEscort;
			}
			set {
				if ((value != this._sealProtocol1stEscort)) {
					this.OnPropertyChanging("SealProtocol1stEscort", this._sealProtocol1stEscort);
					this._sealProtocol1stEscort = value;
					this.OnPropertyChanged("SealProtocol1stEscort");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocol2ndEscort", Storage="_sealProtocol2ndEscort", FieldType="Text")]
		public string SealProtocol2ndEscort {
			get {
				return this._sealProtocol2ndEscort;
			}
			set {
				if ((value != this._sealProtocol2ndEscort)) {
					this.OnPropertyChanging("SealProtocol2ndEscort", this._sealProtocol2ndEscort);
					this._sealProtocol2ndEscort = value;
					this.OnPropertyChanged("SealProtocol2ndEscort");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolEscortPhone", Storage="_sealProtocolEscortPhone", FieldType="Text")]
		public string SealProtocolEscortPhone {
			get {
				return this._sealProtocolEscortPhone;
			}
			set {
				if ((value != this._sealProtocolEscortPhone)) {
					this.OnPropertyChanging("SealProtocolEscortPhone", this._sealProtocolEscortPhone);
					this._sealProtocolEscortPhone = value;
					this.OnPropertyChanged("SealProtocolEscortPhone");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolEscortCarNo", Storage="_sealProtocolEscortCarNo", FieldType="Text")]
		public string SealProtocolEscortCarNo {
			get {
				return this._sealProtocolEscortCarNo;
			}
			set {
				if ((value != this._sealProtocolEscortCarNo)) {
					this.OnPropertyChanging("SealProtocolEscortCarNo", this._sealProtocolEscortCarNo);
					this._sealProtocolEscortCarNo = value;
					this.OnPropertyChanged("SealProtocolEscortCarNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolContainersNo", Storage="_sealProtocolContainersNo", FieldType="Text")]
		public string SealProtocolContainersNo {
			get {
				return this._sealProtocolContainersNo;
			}
			set {
				if ((value != this._sealProtocolContainersNo)) {
					this.OnPropertyChanging("SealProtocolContainersNo", this._sealProtocolContainersNo);
					this._sealProtocolContainersNo = value;
					this.OnPropertyChanged("SealProtocolContainersNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolDispatchDateActual", Storage="_sealProtocolDispatchDateActual", FieldType="DateTime")]
		public System.Nullable<System.DateTime> SealProtocolDispatchDateActual {
			get {
				return this._sealProtocolDispatchDateActual;
			}
			set {
				if ((value != this._sealProtocolDispatchDateActual)) {
					this.OnPropertyChanging("SealProtocolDispatchDateActual", this._sealProtocolDispatchDateActual);
					this._sealProtocolDispatchDateActual = value;
					this.OnPropertyChanged("SealProtocolDispatchDateActual");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolWarehouse", Storage="_sealProtocolWarehouse", FieldType="Text")]
		public string SealProtocolWarehouse {
			get {
				return this._sealProtocolWarehouse;
			}
			set {
				if ((value != this._sealProtocolWarehouse)) {
					this.OnPropertyChanging("SealProtocolWarehouse", this._sealProtocolWarehouse);
					this._sealProtocolWarehouse = value;
					this.OnPropertyChanged("SealProtocolWarehouse");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolTruckNo", Storage="_sealProtocolTruckNo", FieldType="Text")]
		public string SealProtocolTruckNo {
			get {
				return this._sealProtocolTruckNo;
			}
			set {
				if ((value != this._sealProtocolTruckNo)) {
					this.OnPropertyChanging("SealProtocolTruckNo", this._sealProtocolTruckNo);
					this._sealProtocolTruckNo = value;
					this.OnPropertyChanged("SealProtocolTruckNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SealProtocolTrailerNo", Storage="_sealProtocolTrailerNo", FieldType="Text")]
		public string SealProtocolTrailerNo {
			get {
				return this._sealProtocolTrailerNo;
			}
			set {
				if ((value != this._sealProtocolTrailerNo)) {
					this.OnPropertyChanging("SealProtocolTrailerNo", this._sealProtocolTrailerNo);
					this._sealProtocolTrailerNo = value;
					this.OnPropertyChanged("SealProtocolTrailerNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SecuritySealProtocolIndex", Storage="_shipping", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Shipping")]
		public Microsoft.SharePoint.Linq.EntitySet<Shipping> Shipping {
			get {
				return this._shipping;
			}
			set {
				this._shipping.Assign(value);
			}
		}
		
		private void OnShippingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Shipping", this._shipping.Clone());
		}
		
		private void OnShippingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Shipping");
		}
		
		private void OnShippingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SecuritySealProtocolIndex = this;
			}
			else {
				e.Item.SecuritySealProtocolIndex = null;
			}
		}
	}
	
	/// <summary>
	/// Time Slot List CT
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TimeSlot", Id="0x0102008B8977AFA9104B18B4B25D7C06A4A3AA")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TimeSlotTimeSlot))]
	public partial class TimeSlot : Event {
		
		private System.Nullable<System.DateTime> _entryTime;
		
		private System.Nullable<double> _timeSpan;
		
		private System.Nullable<System.DateTime> _exitTime;
		
		private System.Nullable<bool> _isDouble;
		
		private System.Nullable<Occupied> _occupied;
		
		private Microsoft.SharePoint.Linq.EntityRef<Shipping> _timeSlot2ShippingIndex;
		
		private Microsoft.SharePoint.Linq.EntityRef<ShippingPoint> _timeSlot2ShippingPointLookup;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TimeSlot() {
			this._timeSlot2ShippingIndex = new Microsoft.SharePoint.Linq.EntityRef<Shipping>();
			this._timeSlot2ShippingIndex.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping>>(this.OnTimeSlot2ShippingIndexSync);
			this._timeSlot2ShippingIndex.OnChanged += new System.EventHandler(this.OnTimeSlot2ShippingIndexChanged);
			this._timeSlot2ShippingIndex.OnChanging += new System.EventHandler(this.OnTimeSlot2ShippingIndexChanging);
			this._timeSlot2ShippingPointLookup = new Microsoft.SharePoint.Linq.EntityRef<ShippingPoint>();
			this._timeSlot2ShippingPointLookup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint>>(this.OnTimeSlot2ShippingPointLookupSync);
			this._timeSlot2ShippingPointLookup.OnChanged += new System.EventHandler(this.OnTimeSlot2ShippingPointLookupChanged);
			this._timeSlot2ShippingPointLookup.OnChanging += new System.EventHandler(this.OnTimeSlot2ShippingPointLookupChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EntryTime", Storage="_entryTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> EntryTime {
			get {
				return this._entryTime;
			}
			set {
				if ((value != this._entryTime)) {
					this.OnPropertyChanging("EntryTime", this._entryTime);
					this._entryTime = value;
					this.OnPropertyChanged("EntryTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TimeSpan", Storage="_timeSpan", FieldType="Number")]
		public System.Nullable<double> TimeSpan {
			get {
				return this._timeSpan;
			}
			set {
				if ((value != this._timeSpan)) {
					this.OnPropertyChanging("TimeSpan", this._timeSpan);
					this._timeSpan = value;
					this.OnPropertyChanged("TimeSpan");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ExitTime", Storage="_exitTime", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ExitTime {
			get {
				return this._exitTime;
			}
			set {
				if ((value != this._exitTime)) {
					this.OnPropertyChanging("ExitTime", this._exitTime);
					this._exitTime = value;
					this.OnPropertyChanged("ExitTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="IsDouble", Storage="_isDouble", FieldType="Boolean")]
		public System.Nullable<bool> IsDouble {
			get {
				return this._isDouble;
			}
			set {
				if ((value != this._isDouble)) {
					this.OnPropertyChanging("IsDouble", this._isDouble);
					this._isDouble = value;
					this.OnPropertyChanged("IsDouble");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Location {
			get {
				throw new System.InvalidOperationException("Field Location was removed from content type TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Field Location was removed from content type TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Description {
			get {
				throw new System.InvalidOperationException("Field Comments was removed from content type TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Field Comments was removed from content type TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> AllDayEvent {
			get {
				throw new System.InvalidOperationException("Field fAllDayEvent was removed from content type TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Field fAllDayEvent was removed from content type TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Recurrence {
			get {
				throw new System.InvalidOperationException("Field fRecurrence was removed from content type TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Field fRecurrence was removed from content type TimeSlot.");
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<bool> Workspace {
			get {
				throw new System.InvalidOperationException("Field WorkspaceLink was removed from content type TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Field WorkspaceLink was removed from content type TimeSlot.");
			}
		}
		
		/// <summary>
		/// Occupied
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Occupied", Storage="_occupied", FieldType="Choice")]
		public System.Nullable<Occupied> Occupied {
			get {
				return this._occupied;
			}
			set {
				if ((value != this._occupied)) {
					this.OnPropertyChanging("Occupied", this._occupied);
					this._occupied = value;
					this.OnPropertyChanged("Occupied");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override System.Nullable<Category> Category {
			get {
				throw new System.InvalidOperationException("Field Category was removed from content type TimeSlot.");
			}
			set {
				throw new System.InvalidOperationException("Field Category was removed from content type TimeSlot.");
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TimeSlot2ShippingIndex", Storage="_timeSlot2ShippingIndex", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping")]
		public Shipping TimeSlot2ShippingIndex {
			get {
				return this._timeSlot2ShippingIndex.GetEntity();
			}
			set {
				this._timeSlot2ShippingIndex.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="TimeSlot2ShippingPointLookup", Storage="_timeSlot2ShippingPointLookup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Shipping Point")]
		public ShippingPoint TimeSlot2ShippingPointLookup {
			get {
				return this._timeSlot2ShippingPointLookup.GetEntity();
			}
			set {
				this._timeSlot2ShippingPointLookup.SetEntity(value);
			}
		}
		
		private void OnTimeSlot2ShippingIndexChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TimeSlot2ShippingIndex", this._timeSlot2ShippingIndex.Clone());
		}
		
		private void OnTimeSlot2ShippingIndexChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TimeSlot2ShippingIndex");
		}
		
		private void OnTimeSlot2ShippingIndexSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Shipping> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TimeSlot.Add(this);
			}
			else {
				e.Item.TimeSlot.Remove(this);
			}
		}
		
		private void OnTimeSlot2ShippingPointLookupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("TimeSlot2ShippingPointLookup", this._timeSlot2ShippingPointLookup.Clone());
		}
		
		private void OnTimeSlot2ShippingPointLookupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("TimeSlot2ShippingPointLookup");
		}
		
		private void OnTimeSlot2ShippingPointLookupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ShippingPoint> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.TimeSlot.Add(this);
			}
			else {
				e.Item.TimeSlot.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Time Slot List CT
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="TimeSlot", Id="0x0102008B8977AFA9104B18B4B25D7C06A4A3AA", List="Time Slot")]
	public partial class TimeSlotTimeSlot : TimeSlot {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TimeSlotTimeSlot() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EventDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public override System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
	}
	
	public enum Category : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Category1")]
		_1Category1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Category2")]
		_2Category2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Category3")]
		_3Category3 = 8,
	}
	
	public enum AlarmPriority : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Normal")]
		Normal = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="High")]
		High = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Warning")]
		Warning = 8,
	}
	
	public enum ShepherdRole : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Administrator")]
		Administrator = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="InboundOwner")]
		InboundOwner = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="OutboundOwner")]
		OutboundOwner = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Operator")]
		Operator = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Supervisor")]
		Supervisor = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Guard")]
		Guard = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Coordinator")]
		Coordinator = 128,
	}
	
	public enum PalletType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Euro")]
		Euro = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Industrial")]
		Industrial = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Other")]
		Other = 8,
	}
	
	public enum ServiceType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Vendor")]
		Vendor = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Forwarder")]
		Forwarder = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Vendor and Forwarder")]
		VendorAndForwarder = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Security Escort Provider")]
		SecurityEscortProvider = 16,
	}
	
	public enum ShippingState : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Cancelation")]
		Cancelation = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Canceled")]
		Canceled = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Completed")]
		Completed = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Confirmed")]
		Confirmed = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Creation")]
		Creation = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Delayed")]
		Delayed = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="WaitingForCarrierData")]
		WaitingForCarrierData = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="WaitingForConfirmation")]
		WaitingForConfirmation = 256,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Underway")]
		Underway = 512,
	}
	
	public enum LoadingType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Manual")]
		Manual = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Pallet")]
		Pallet = 4,
	}
	
	public enum TrailerCondition : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="5- excellent")]
		_5Excellent = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4")]
		_4 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3")]
		_3 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2")]
		_2 = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="1 - unexceptable")]
		_1Unexceptable = 32,
	}
	
	public enum ShippingState2 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Cancelation")]
		Cancelation = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Canceled")]
		Canceled = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Completed")]
		Completed = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Confirmed")]
		Confirmed = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Creation")]
		Creation = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Delayed")]
		Delayed = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Lack of data")]
		LackOfData = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Left")]
		Left = 256,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Started")]
		Started = 512,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waiting")]
		Waiting = 1024,
	}
	
	public enum Direction : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Inbound")]
		Inbound = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Outbound")]
		Outbound = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Both directions")]
		BothDirections = 8,
	}
	
	public enum TimeSlotsTemplateDay : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Monday")]
		Monday = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Tuesday")]
		Tuesday = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Wednesday")]
		Wednesday = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Thursday")]
		Thursday = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Friday")]
		Friday = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Saturday")]
		Saturday = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Sunday")]
		Sunday = 128,
	}
	
	public enum TimeSlotsTemplateStartHour : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="0")]
		_0 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="1")]
		_1 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2")]
		_2 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3")]
		_3 = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4")]
		_4 = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="5")]
		_5 = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="6")]
		_6 = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="7")]
		_7 = 256,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="8")]
		_8 = 512,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="9")]
		_9 = 1024,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="10")]
		_10 = 2048,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="11")]
		_11 = 4096,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="12")]
		_12 = 8192,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="13")]
		_13 = 16384,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="14")]
		_14 = 32768,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="15")]
		_15 = 65536,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="16")]
		_16 = 131072,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="17")]
		_17 = 262144,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="18")]
		_18 = 524288,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="19")]
		_19 = 1048576,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="20")]
		_20 = 2097152,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="21")]
		_21 = 4194304,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="22")]
		_22 = 8388608,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="23")]
		_23 = 16777216,
	}
	
	public enum TimeSlotsTemplateStartMinute : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="0")]
		_0 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="15")]
		_15 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="30")]
		_30 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="45")]
		_45 = 16,
	}
	
	public enum TimeSlotsTemplateEndHour : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="0")]
		_0 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="1")]
		_1 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="2")]
		_2 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="3")]
		_3 = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="4")]
		_4 = 32,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="5")]
		_5 = 64,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="6")]
		_6 = 128,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="7")]
		_7 = 256,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="8")]
		_8 = 512,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="9")]
		_9 = 1024,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="10")]
		_10 = 2048,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="11")]
		_11 = 4096,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="12")]
		_12 = 8192,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="13")]
		_13 = 16384,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="14")]
		_14 = 32768,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="15")]
		_15 = 65536,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="16")]
		_16 = 131072,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="17")]
		_17 = 262144,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="18")]
		_18 = 524288,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="19")]
		_19 = 1048576,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="20")]
		_20 = 2097152,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="21")]
		_21 = 4194304,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="22")]
		_22 = 8388608,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="23")]
		_23 = 16777216,
	}
	
	public enum TimeSlotsTemplateEndMinute : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="0")]
		_0 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="15")]
		_15 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="30")]
		_30 = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="45")]
		_45 = 16,
	}
	
	public enum VehicleType : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Truck")]
		Truck = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Van")]
		Van = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Security Escort Car")]
		SecurityEscortCar = 8,
	}
	
	public enum Occupied : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Free")]
		Free = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Occupied")]
		Occupied0 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Delayed")]
		Delayed = 8,
	}
}
